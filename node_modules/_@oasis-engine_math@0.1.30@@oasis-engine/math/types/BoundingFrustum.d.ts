import { IClone } from "@oasis-engine/design";
import { BoundingBox } from "./BoundingBox";
import { BoundingSphere } from "./BoundingSphere";
import { Matrix } from "./Matrix";
import { Plane } from "./Plane";
/**
 * 视锥体
 */
export declare class BoundingFrustum implements IClone {
    /** 近平面。 */
    near: Plane;
    /** 远平面。 */
    far: Plane;
    /** 左平面。 */
    left: Plane;
    /** 右平面。 */
    right: Plane;
    /** 顶平面。 */
    top: Plane;
    /** 底平面。 */
    bottom: Plane;
    /**
     * 创建视锥体。
     * @param matrix - view-projection 矩阵
     */
    constructor(matrix?: Matrix);
    /**
     * 克隆并返回一个新的视锥体对象。
     * @returns 新的视锥体对象
     */
    clone(): BoundingFrustum;
    /**
     * 将当前视锥体值拷贝给 out 向量。
     * @param out - 目标视锥体
     */
    cloneTo(out: BoundingFrustum): BoundingFrustum;
    /**
     * 根据下标获取对应的平面。
     * 0: near
     * 1: far
     * 2: left
     * 3: right
     * 4: top
     * 5: bottom
     * @param index - 下标
     * @returns 下标对应的平面
     */
    getPlane(index: number): Plane;
    /**
     * 通过矩阵更新视锥体的所有平面。
     * @param matrix - view-projection 矩阵
     */
    calculateFromMatrix(matrix: Matrix): void;
    /**
     * 判断一个 AABB 包围盒是否和视锥体交叉 (包含或者相交)。
     * @param box - 包围盒
     * @returns 是否包含
     */
    intersectsBox(box: BoundingBox): boolean;
    /**
     * 判断一个包围球是否和视锥体交叉 (包含或者相交)。
     * @param sphere - 包围球
     * @returns 是否包含
     */
    intersectsSphere(sphere: BoundingSphere): boolean;
}
