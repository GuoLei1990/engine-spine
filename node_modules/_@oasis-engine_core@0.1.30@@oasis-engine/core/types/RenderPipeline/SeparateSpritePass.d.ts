import { Camera } from "../Camera";
import { RenderPass } from "./RenderPass";
/**
 * Sprite 的 RenderPass，在后处理后绘制，不受后处理影响
 * @private
 */
export declare class SeparateSpritePass extends RenderPass {
    private _spriteItems;
    constructor(name?: string, priority?: number);
    /**
     * 给 RenderPipeline 调用，判断是否需要绘制 Sprite
     */
    get isUsed(): boolean;
    preRender(): void;
    render(camera: any): void;
    postRender(camera: any): void;
    /**
     * 对于透明对象，按照离摄像机由远及近的顺序渲染，有助于减少视觉错误
     * @param {vec3} eyePos
     */
    _sortByDistance(eyePos: any): void;
    /**
     * 把一个 Sprite 绘制需要的信息传进来
     * @param {Component} component
     * @param {Object} positionQuad  Sprite四个顶点的位置
     * @param {Object} uvRect        Sprite在texture上的纹理坐标
     * @param {vec4}   tintColor     颜色
     * @param {Texture}   texture    纹理信息
     * @param {String}    renderMode    绘制方式， '2D' 或者 '3D'
     * @param {Camera}   camera        相机信息
     */
    pushSprite(component: any, positionQuad: any, uvRect: any, tintColor: any, texture: any, renderMode: any, camera: Camera): void;
}
