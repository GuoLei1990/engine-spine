import { RefObject } from "../asset/RefObject";
import { Engine } from "../Engine";
import { TextureFilterMode } from "./enums/TextureFilterMode";
import { TextureWrapMode } from "./enums/TextureWrapMode";
/**
 * 纹理的基类，包含了纹理相关类的一些公共功能。
 */
export declare abstract class Texture extends RefObject {
    /** 名称。*/
    name: string;
    _glTexture: WebGLTexture;
    protected _width: number;
    protected _height: number;
    private _wrapModeU;
    private _wrapModeV;
    private _filterMode;
    private _anisoLevel;
    /**
     * 纹理宽。
     */
    get width(): number;
    /**
     * 纹理高。
     */
    get height(): number;
    /**
     * 纹理坐标 U 的循环模式。
     */
    get wrapModeU(): TextureWrapMode;
    set wrapModeU(value: TextureWrapMode);
    /**
     * 纹理坐标 V 的循环模式。
     */
    get wrapModeV(): TextureWrapMode;
    set wrapModeV(value: TextureWrapMode);
    /**
     * 多级纹理的数量。
     */
    get mipmapCount(): number;
    /**
     * 纹理的过滤模式。
     */
    get filterMode(): TextureFilterMode;
    set filterMode(value: TextureFilterMode);
    /**
     * 各向异性过滤等级。
     */
    get anisoLevel(): number;
    set anisoLevel(value: number);
    /**
     * 根据第0级数据生成多级纹理。
     */
    generateMipmaps(): void;
    /**
     * @override
     */
    _onDestroy(): void;
    constructor(engine: Engine);
}
