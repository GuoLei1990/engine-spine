{"version":3,"file":"main.js","sources":["../src/BufferLoader.ts","../src/gltf/Util.ts","../src/gltf/glTFDracoMeshCompression.ts","../src/gltf/glTF.ts","../src/gltf/glb.ts","../src/GLTFLoader.ts","../src/JSONLoader.ts","../src/compressed-texture/KhronosTextureContainer.ts","../src/compressed-texture/index.ts","../src/KTXCubeLoader.ts","../src/KTXLoader.ts","../src/Texture2DLoader.ts","../src/TextureCubeLoader.ts","../src/GLTFModel.ts","../src/scene-loader/plugins/PluginManager.ts","../src/scene-loader/utils.ts","../src/scene-loader/resources/SchemaResource.ts","../src/scene-loader/resources/TextureResource.ts","../src/scene-loader/resources/PBRMaterialResource.ts","../src/scene-loader/resources/GLTFResource.ts","../src/scene-loader/resources/ShaderMaterialResource.ts","../src/scene-loader/resources/ScriptResource.ts","../src/scene-loader/resources/BlinnPhongMaterialResource.ts","../src/scene-loader/resources/TextureCubeMapResource.ts","../src/scene-loader/resources/BaseResource.ts","../src/scene-loader/AbilityManager.ts","../src/scene-loader/NodeManager.ts","../src/scene-loader/ResourceManager.ts","../src/scene-loader/Oasis.ts","../src/scene-loader/temp.compatible.ts","../src/scene-loader/Parser.ts"],"sourcesContent":["import { resourceLoader, Loader, AssetPromise, AssetType, LoadItem } from \"@alipay/o3-core\";\n\nfunction isBase64(url) {\n  return /^data:(.+?);base64,/.test(url);\n}\n@resourceLoader(AssetType.Buffer, [\"bin\", \"r3bin\"], false)\nclass BufferLoader extends Loader<ArrayBuffer> {\n  load(item: LoadItem): AssetPromise<ArrayBuffer> {\n    const url = item.url;\n    if (isBase64(url)) {\n      return new AssetPromise((resolve) => {\n        const base64Str = url.slice(13 + RegExp.$1.length);\n        const result = Uint8Array.from(atob(base64Str), (c) => c.charCodeAt(0));\n        resolve(result.buffer);\n      });\n    }\n    return this.request(url, {\n      ...item,\n      type: \"arraybuffer\"\n    });\n  }\n}\n","import { DataType, IndexFormat, VertexElement, VertexElementFormat } from \"@alipay/o3-core\";\n\nconst WEBGL_COMPONENT_TYPES = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\n\n/**\n * 解析二进制文本 用于 glb loader\n * @param array\n * @returns String\n * @private\n */\nexport function decodeText(array) {\n  if (typeof TextDecoder !== \"undefined\") {\n    return new TextDecoder().decode(array);\n  }\n\n  // TextDecoder polyfill\n  let s = \"\";\n\n  for (let i = 0, il = array.length; i < il; i++) {\n    s += String.fromCharCode(array[i]);\n  }\n\n  return decodeURIComponent(encodeURIComponent(s));\n}\n\n/**\n * 根据 glTF 中的 paramters[name] 来查找 uniform 对象\n * @param obj\n * @param key\n * @param value\n * @returns {object}\n * @private\n */\nexport function findByKeyValue(obj, key, value) {\n  for (const name in obj) {\n    if (obj[name][key] === value) {\n      return obj[name];\n    }\n  }\n  return null;\n}\n\n/** 获取 accessor type 占用字节数\n * @return {number}\n * @param {string} accessorType\n * @private\n */\nexport function getAccessorTypeSize(accessorType) {\n  const ACCESSOR_TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n  };\n  return ACCESSOR_TYPE_SIZE[accessorType];\n}\n\n/** 获取 component type 对应的 TypedArray\n * @return {function}\n * @param {string} componentType\n */\nexport function getComponentType(componentType) {\n  return WEBGL_COMPONENT_TYPES[componentType];\n}\n\n/**\n * 获取 accessor 数据\n * @param gltf\n * @param accessor\n * @param buffers\n * @private\n */\nexport function getAccessorData(gltf, accessor, buffers) {\n  const bufferView = gltf.bufferViews[accessor.bufferView];\n  const arrayBuffer = buffers[bufferView.buffer];\n  const accessorByteOffset = accessor.hasOwnProperty(\"byteOffset\") ? accessor.byteOffset : 0;\n  const bufferViewByteOffset = bufferView.hasOwnProperty(\"byteOffset\") ? bufferView.byteOffset : 0;\n  const byteOffset = accessorByteOffset + bufferViewByteOffset;\n  const accessorTypeSize = getAccessorTypeSize(accessor.type);\n  const length = accessorTypeSize * accessor.count;\n  const byteStride = bufferView.byteStride ?? 0;\n\n  const arrayType = getComponentType(accessor.componentType);\n  let uint8Array;\n  if (byteStride) {\n    uint8Array = new Uint8Array(length * arrayType.BYTES_PER_ELEMENT);\n    const originalBufferView = new Uint8Array(arrayBuffer, bufferViewByteOffset, bufferView.byteLength);\n    let viewAccessor = 0;\n    const accessorByteSize = accessorTypeSize * arrayType.BYTES_PER_ELEMENT;\n    for (let i = 0; i < accessor.count; i++) {\n      viewAccessor = i * byteStride + accessorByteOffset;\n      for (let j = 0; j < accessorByteSize; j++) {\n        uint8Array[i * accessorByteSize + j] = originalBufferView[viewAccessor + j];\n      }\n    }\n  } else {\n    uint8Array = new Uint8Array(arrayBuffer, byteOffset, length * arrayType.BYTES_PER_ELEMENT);\n    uint8Array = new Uint8Array(uint8Array);\n  }\n\n  return new arrayType(uint8Array.buffer);\n}\n\n/**\n * 获取 buffer 数据\n * @param bufferView\n * @param buffers\n * @returns {Blob|ArrayBuffer|Array.<T>|string}\n * @private\n */\nexport function getBufferData(bufferView, buffers) {\n  // get bufferView\n  const arrayBuffer = buffers[bufferView.buffer];\n  const byteOffset = bufferView.byteOffset || 0;\n  return arrayBuffer.slice(byteOffset, byteOffset + bufferView.byteLength);\n}\n\nexport function getVertexStride(accessor): number {\n  const size = getAccessorTypeSize(accessor.type);\n  const componentType = getComponentType(accessor.componentType);\n  return size * componentType.BYTES_PER_ELEMENT;\n}\n\nexport function createVertexElement(gltf, semantic, accessor, index: number): VertexElement {\n  const size = getAccessorTypeSize(accessor.type);\n  return new VertexElement(semantic, 0, getElementFormat(accessor.componentType, size), index);\n}\n\nexport function getIndexFormat(type: number): IndexFormat {\n  switch (type) {\n    case DataType.UNSIGNED_BYTE:\n      return IndexFormat.UInt8;\n    case DataType.UNSIGNED_SHORT:\n      return IndexFormat.UInt16;\n    case DataType.UNSIGNED_INT:\n      return IndexFormat.UInt32;\n  }\n}\n\nexport function getElementFormat(type: number, size: number): VertexElementFormat {\n  if (type == DataType.FLOAT) {\n    switch (size) {\n      case 1:\n        return VertexElementFormat.Single;\n      case 2:\n        return VertexElementFormat.Vector2;\n      case 3:\n        return VertexElementFormat.Vector3;\n      case 4:\n        return VertexElementFormat.Vector4;\n    }\n  }\n  if (type == DataType.UNSIGNED_SHORT) {\n    switch (size) {\n      case 2:\n        return VertexElementFormat.UShort2;\n      case 4:\n        return VertexElementFormat.UShort4;\n    }\n  }\n}\n\n/**\n * 加载 image buffer\n * @param imageBuffer\n * @param type\n * @param callback\n */\nexport function loadImageBuffer(imageBuffer: ArrayBuffer, type: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const blob = new window.Blob([imageBuffer], { type });\n    const img = new Image();\n    img.src = URL.createObjectURL(blob);\n\n    img.crossOrigin = \"anonymous\";\n    img.onerror = function () {\n      reject(new Error(\"Failed to load image buffer\"));\n    };\n    img.onload = function () {\n      resolve(img);\n    };\n  });\n}\n\nfunction isRelativeUrl(url: string): boolean {\n  // 47 is /\n  return url.charCodeAt(0) !== 47 && url.match(/:\\/\\//) === null;\n}\n\nfunction isAbsoluteUrl(url: string): boolean {\n  return /^(?:http|blob|data:|\\/)/.test(url);\n}\n\nexport function parseRelativeUrl(baseUrl: string, relativeUrl: string): string {\n  if (isAbsoluteUrl(relativeUrl)) {\n    return relativeUrl;\n  }\n  // TODO: implement ../path\n  return baseUrl.substring(0, baseUrl.lastIndexOf(\"/\") + 1) + relativeUrl;\n}\n","import { DRACODecoder } from \"@alipay/o3-draco\";\nimport { getComponentType, getBufferData, createVertexElement } from \"./Util\";\n\nlet decoder;\n\nexport const glTFDracoMeshCompression = {\n  init() {\n    if (!decoder) {\n      decoder = new DRACODecoder();\n    }\n  },\n  parse(extension, primitive, gltfPrimitive, gltf, buffers) {\n    const { bufferViews, accessors } = gltf;\n    const bufferViewIndex = extension.bufferView;\n    const gltfAttributeMap = extension.attributes;\n    const attributeMap = {};\n    const attributeTypeMap = {};\n\n    for (let attributeName in gltfAttributeMap) {\n      attributeMap[attributeName] = gltfAttributeMap[attributeName];\n    }\n\n    for (let attributeName in gltfPrimitive.attributes) {\n      if (gltfAttributeMap[attributeName] !== undefined) {\n        const accessorDef = accessors[gltfPrimitive.attributes[attributeName]];\n        attributeTypeMap[attributeName] = getComponentType(accessorDef.componentType).name;\n      }\n    }\n    const indexAccessor = accessors[gltfPrimitive.indices];\n    const indexType = getComponentType(indexAccessor.componentType).name;\n    const taskConfig = {\n      attributeIDs: attributeMap,\n      attributeTypes: attributeTypeMap,\n      useUniqueIDs: true,\n      indexType\n    };\n    const buffer = getBufferData(bufferViews[bufferViewIndex], buffers);\n    return decoder.decode(buffer, taskConfig).then((geometry) => {\n      let h = 0;\n      for (let i = 0; i < geometry.attributes.length; i++) {\n        const attribute = geometry.attributes[i];\n        const accessorIdx = gltfPrimitive.attributes[attribute.name];\n        const accessor = accessors[accessorIdx];\n        accessor.bufferView = accessor.bufferView === undefined ? bufferViewIndex : accessor.bufferView;\n        primitive.vertexBuffers.push(attribute.array);\n        primitive.vertexAttributes[attribute.name] = createVertexElement(gltf, attribute.name, accessor, h++);\n      }\n\n      // get vertex count\n      const positionAccessorIdx = gltfPrimitive.attributes.POSITION;\n      const positionAccessor = accessors[positionAccessorIdx];\n      primitive.vertexCount = positionAccessor.count;\n\n      // load indices\n      primitive.indexCount = indexAccessor.count;\n      primitive.indexType = indexAccessor.componentType;\n      primitive.indexOffset = 0;\n      primitive.indexBuffer = geometry.index.array;\n      return primitive;\n    });\n  }\n};\n","import {\n  Animation,\n  AnimationClip,\n  ConstantMaterial,\n  DataType,\n  Engine,\n  EngineObject,\n  Entity,\n  IndexBuffer,\n  InterpolationType,\n  Logger,\n  Material,\n  Mesh,\n  MeshRenderer,\n  PBRMaterial,\n  Primitive,\n  Scene,\n  Skin,\n  SkinnedMeshRenderer,\n  Texture2D,\n  Util,\n  VertexBuffer,\n  VertexBufferBinding,\n  PrimitiveTopology,\n  IndexFormat,\n  BufferUsage\n} from \"@alipay/o3-core\";\nimport { Matrix, Quaternion, Vector3, Vector4 } from \"@alipay/o3-math\";\nimport { LoadedGLTFResource } from \"../GLTF\";\nimport { glTFDracoMeshCompression } from \"./glTFDracoMeshCompression\";\nimport {\n  createVertexElement,\n  findByKeyValue,\n  getAccessorData,\n  getAccessorTypeSize,\n  getIndexFormat,\n  getVertexStride\n} from \"./Util\";\n\n// KHR_lights:  https://github.com/MiiBond/glTF/tree/khr_lights_v1/extensions/2.0/Khronos/KHR_lights\n//              https://github.com/KhronosGroup/glTF/pull/1223\n//              https://github.com/KhronosGroup/glTF/issues/945\n// KHR_materials_common:  https://github.com/donmccurdy/glTF/tree/donmccurdy-KHR_materials_common/extensions/Khronos/KHR_materials_common_v2\n//                        https://github.com/KhronosGroup/glTF/pull/1150\n//                        https://github.com/KhronosGroup/glTF/issues/947\n\nconst TARGET_PATH_MAP = {\n  translation: \"position\",\n  rotation: \"rotation\",\n  scale: \"scale\",\n  weights: \"weights\"\n};\n\nlet nodeCount = 0;\n\nconst RegistedObjs = {};\nconst RegistedCustomMaterials = {};\n\nconst getDefaultMaterial = (function () {\n  let defaultMateril: ConstantMaterial;\n  return () => {\n    if (!defaultMateril) {\n      defaultMateril = new ConstantMaterial(\"default\");\n      defaultMateril.emission = new Vector4(0.749, 0.749, 0.749, 1);\n    }\n    return defaultMateril;\n  };\n})();\n\n/**\n * 扩展专用注册键值\n */\nexport const HandledExtensions = {\n  PBRMaterial: \"PBRMaterial\",\n  KHR_lights: \"KHR_lights\",\n  KHR_materials_unlit: \"KHR_materials_unlit\",\n  KHR_materials_pbrSpecularGlossiness: \"KHR_materials_pbrSpecularGlossiness\",\n  KHR_techniques_webgl: \"KHR_techniques_webgl\",\n  KHR_draco_mesh_compression: \"KHR_draco_mesh_compression\"\n};\n\nlet KHR_lights = null;\n\nconst extensionParsers = {\n  KHR_lights: KHR_lights,\n  KHR_materials_unlit: PBRMaterial, // Also have other materials\n  KHR_materials_pbrSpecularGlossiness: PBRMaterial,\n  KHR_techniques_webgl: Material,\n  KHR_draco_mesh_compression: glTFDracoMeshCompression\n};\n\n/**\n * 注册扩展组件到 glTF loader\n * @param {Object} extobj 需要添加的扩展\n */\nexport function RegistExtension(extobj) {\n  Object.keys(extobj).forEach((name) => {\n    if (RegistedObjs[name] === undefined) {\n      RegistedObjs[name] = extobj[name];\n\n      switch (name) {\n        case HandledExtensions.PBRMaterial:\n          extensionParsers.KHR_materials_unlit = PBRMaterial;\n          break;\n        case HandledExtensions.KHR_lights:\n          KHR_lights = extobj[name];\n          extensionParsers.KHR_lights = KHR_lights;\n          break;\n        default:\n          if (Material.isPrototypeOf(extobj[name]) && extobj[name].TECH_NAME)\n            RegistedCustomMaterials[extobj[name].TECH_NAME] = extobj[name];\n          break;\n      }\n    }\n  });\n}\n\nexport interface GLTFParsed extends LoadedGLTFResource {\n  asset: Partial<GLTFResource>;\n  engine?: Engine;\n}\n\nexport class GLTFResource extends EngineObject {\n  defaultSceneRoot: Entity;\n  defaultScene: Scene;\n  scenes: Scene[];\n  textures?: Texture2D[];\n  animations?: AnimationClip[];\n  materials?: Material[];\n  meshes?: Mesh[];\n  skins?: Skin[];\n}\n\n/**\n * 解析 glTF 结构\n * @param resource\n * @returns {*}\n * @private\n */\nexport function parseGLTF(data: LoadedGLTFResource, engine: Engine): Promise<GLTFResource> {\n  // 开始处理 glTF 数据\n  const resources: GLTFParsed = {\n    engine,\n    gltf: data.gltf,\n    buffers: data.buffers,\n    asset: new GLTFResource()\n  };\n  resources.asset.textures = data.textures;\n\n  if (resources.gltf.asset && resources.gltf.asset.version) {\n    resources.gltf.version = Number(resources.gltf.asset.version);\n    resources.gltf.isGltf2 = resources.gltf.version >= 2 && resources.gltf.version <= 3;\n  }\n\n  parseExtensions(resources);\n  // parse all related resources\n  return parseResources(resources, \"materials\", parseMaterial)\n    .then(() => parseResources(resources, \"meshes\", parseMesh))\n    .then(() => parseResources(resources, \"nodes\", parseNode))\n    .then(() => parseResources(resources, \"scenes\", parseScene))\n    .then(() => parseResources(resources, \"skins\", parseSkin))\n    .then(() => parseResources(resources, \"animations\", parseAnimation))\n    .then(() => buildSceneGraph(resources));\n}\n\nfunction parseExtensions(resources) {\n  const { gltf, asset } = resources;\n  const { extensions, extensionsUsed, extensionsRequired } = gltf;\n  if (extensionsUsed) {\n    Logger.info(\"extensionsUsed: \", extensionsUsed);\n    for (let i = 0; i < extensionsUsed.length; i++) {\n      if (Object.keys(extensionParsers).indexOf(extensionsUsed[i]) > -1) {\n        if (!extensionParsers[extensionsUsed[i]]) {\n          Logger.warn(\"extension \" + extensionsUsed[i] + \" is used, you can add this extension into gltf\");\n        }\n      } else {\n        Logger.warn(\"extensionsUsed has unsupported extension \" + extensionsUsed[i]);\n      }\n    }\n  }\n\n  if (extensionsRequired) {\n    Logger.info(`extensionsRequired: ${extensionsRequired}`);\n    for (let i = 0; i < extensionsRequired.length; i++) {\n      if (\n        Object.keys(extensionParsers).indexOf(extensionsRequired[i]) < 0 ||\n        !extensionParsers[extensionsRequired[i]]\n      ) {\n        Logger.error(`model has not supported required extension ${extensionsRequired[i]}`);\n      }\n      if (extensionsRequired[i] === HandledExtensions.KHR_draco_mesh_compression) {\n        extensionParsers.KHR_draco_mesh_compression.init();\n      }\n    }\n  }\n\n  if (extensions) {\n    if (KHR_lights && extensions.KHR_lights) {\n      asset.lights = KHR_lights.parseLights(extensions.KHR_lights.lights);\n    }\n  }\n}\n\n/**\n * 通用资源解析方法\n * @param resources 现有资源\n * @param name glTF 中资源\n * @param handler 资源解析器\n * @private\n */\nfunction parseResources(resources: GLTFParsed, name: string, handler) {\n  const { gltf, asset } = resources;\n  if (!asset[name]) {\n    asset[name] = [];\n  }\n  if (gltf.hasOwnProperty(name)) {\n    const entities = gltf[name] || [];\n    Logger.debug(name + \":\", entities);\n    const promises = [];\n    for (let i = entities.length - 1; i >= 0; i--) {\n      promises.push(handler(entities[i], resources));\n    }\n    return Promise.all(promises).then((results) => {\n      for (let i = 0; i < results.length; i++) {\n        asset[name].push(results[i]);\n      }\n    });\n  }\n  return Promise.resolve();\n}\n\n/**\n * 解析 材质\n * @param gltfMaterial\n * @param resources\n * @private\n */\nexport function parseMaterial(gltfMaterial, resources) {\n  const { gltf, asset } = resources;\n  let material;\n\n  if (gltf.isGltf2 && typeof gltfMaterial.technique === \"undefined\") {\n    const uniformObj: any = {};\n    const stateObj: any = {};\n    const {\n      pbrMetallicRoughness,\n      normalTexture,\n      emissiveTexture,\n      emissiveFactor,\n      occlusionTexture,\n      alphaMode,\n      alphaCutoff,\n      doubleSided,\n      extensions\n    } = gltfMaterial;\n\n    if (pbrMetallicRoughness) {\n      const {\n        baseColorFactor,\n        baseColorTexture,\n        metallicFactor,\n        roughnessFactor,\n        metallicRoughnessTexture\n      } = pbrMetallicRoughness;\n      if (baseColorTexture) {\n        uniformObj.baseColorTexture = getItemByIdx(\"textures\", baseColorTexture.index || 0, resources, false);\n      }\n      if (baseColorFactor) {\n        uniformObj.baseColorFactor = new Vector4(...baseColorFactor);\n      }\n      uniformObj.metallicFactor = metallicFactor !== undefined ? metallicFactor : 1;\n      uniformObj.roughnessFactor = roughnessFactor !== undefined ? roughnessFactor : 1;\n      if (metallicRoughnessTexture) {\n        uniformObj.metallicRoughnessTexture = getItemByIdx(\n          \"textures\",\n          metallicRoughnessTexture.index || 0,\n          resources,\n          false\n        );\n      }\n    }\n\n    if (normalTexture) {\n      const { index, texCoord, scale } = normalTexture;\n      uniformObj.normalTexture = getItemByIdx(\"textures\", index || 0, resources, false);\n\n      if (typeof scale !== undefined) {\n        uniformObj.normalScale = scale;\n      }\n    }\n\n    if (emissiveTexture) {\n      uniformObj.emissiveTexture = getItemByIdx(\"textures\", emissiveTexture.index || 0, resources, false);\n    }\n\n    if (occlusionTexture) {\n      uniformObj.occlusionTexture = getItemByIdx(\"textures\", occlusionTexture.index || 0, resources, false);\n\n      if (occlusionTexture.strength !== undefined) {\n        uniformObj.occlusionStrength = occlusionTexture.strength;\n      }\n    }\n\n    stateObj.doubleSided = !!doubleSided;\n    stateObj.alphaMode = alphaMode || \"OPAQUE\";\n    if (alphaMode === \"MASK\") {\n      uniformObj.alphaCutoff = alphaCutoff === undefined ? 0.5 : alphaCutoff;\n    }\n\n    if (extensions) {\n      if (extensions.KHR_materials_unlit) {\n        stateObj.unlit = true;\n      }\n\n      // 高光光泽度\n      if (extensions.KHR_materials_pbrSpecularGlossiness) {\n        const {\n          diffuseFactor,\n          diffuseTexture,\n          specularFactor,\n          glossinessFactor,\n          specularGlossinessTexture\n        } = extensions.KHR_materials_pbrSpecularGlossiness;\n\n        stateObj.isMetallicWorkflow = false;\n        if (diffuseFactor) {\n          uniformObj.baseColorFactor = new Vector4(...diffuseFactor);\n        }\n        if (diffuseTexture) {\n          uniformObj.baseColorTexture = getItemByIdx(\"textures\", diffuseTexture.index || 0, resources, false);\n        }\n        if (specularFactor) {\n          uniformObj.specularFactor = new Vector3(...specularFactor);\n        }\n        if (glossinessFactor !== undefined) {\n          uniformObj.glossinessFactor = glossinessFactor;\n        }\n        if (specularGlossinessTexture) {\n          uniformObj.specularGlossinessTexture = getItemByIdx(\n            \"textures\",\n            specularGlossinessTexture.index || 0,\n            resources,\n            false\n          );\n        }\n      }\n    }\n\n    // private parameters\n    const { unlit, srgb, gamma, blendFunc, depthMask } = gltfMaterial;\n    if (unlit) stateObj.unlit = true;\n    if (srgb) stateObj.srgb = true;\n    if (gamma) stateObj.gamma = true;\n    if (blendFunc) stateObj.blendFunc = blendFunc;\n    if (depthMask !== undefined) stateObj.depthMask = depthMask;\n\n    material = new PBRMaterial(gltfMaterial.name || PBRMaterial.MATERIAL_NAME, Object.assign({}, uniformObj, stateObj));\n  } else {\n    const techniqueName = gltfMaterial.technique;\n    Logger.warn(\"Deprecated: Please use a model that meets the glTF 2.0 specification\");\n    const MaterialType = RegistedCustomMaterials[techniqueName];\n    material = new MaterialType();\n  }\n\n  if (gltfMaterial.hasOwnProperty(\"values\")) {\n    Logger.warn(\"Deprecated: Please use a model that meets the glTF 2.0 specification\");\n    for (const paramName in gltfMaterial.values) {\n      if (!material.technique) {\n        Logger.warn(\"Cant not find technique\");\n        continue;\n      }\n      const uniform = findByKeyValue(material.technique.uniforms, \"paramName\", paramName);\n      if (!uniform) {\n        Logger.warn(\"Cant not find uniform: \" + paramName);\n        continue;\n      }\n\n      const name = uniform.name;\n      const type = uniform.type;\n      if (type === DataType.SAMPLER_2D) {\n        let textureIndex = gltfMaterial.values[paramName];\n        if (Util.isArray(textureIndex)) {\n          textureIndex = textureIndex[0];\n        }\n        const texture = getItemByIdx(\"textures\", textureIndex, resources, false);\n        material.setValue(name, texture);\n      } else {\n        material.setValue(name, gltfMaterial.values[paramName]);\n      }\n    }\n  }\n  return Promise.resolve(material);\n}\n\n/**\n * 解析蒙皮\n * @param gltfSkin\n * @param resources\n * @private\n */\nexport function parseSkin(gltfSkin, resources) {\n  const { gltf, buffers } = resources;\n\n  const jointCount = gltfSkin.joints.length;\n\n  // FIXME: name is null\n  const skin = new Skin(gltfSkin.name);\n  // parse IBM\n  const accessor = gltf.accessors[gltfSkin.inverseBindMatrices];\n  const buffer = getAccessorData(gltf, accessor, buffers);\n  const MAT4_LENGTH = 16;\n\n  for (let i = 0; i < jointCount; i++) {\n    const startIdx = MAT4_LENGTH * i;\n    const endIdx = startIdx + MAT4_LENGTH;\n    skin.inverseBindMatrices[i] = new Matrix(...buffer.subarray(startIdx, endIdx));\n  }\n\n  // get joints\n  for (let i = 0; i < jointCount; i++) {\n    const node = getItemByIdx(\"nodes\", gltfSkin.joints[i], resources);\n    skin.joints[i] = node.name;\n  }\n\n  // get skeleton\n  const node = getItemByIdx(\"nodes\", gltfSkin.skeleton == null ? gltfSkin.joints[0] : gltfSkin.skeleton, resources);\n  skin.skeleton = node.name;\n\n  return Promise.resolve(skin);\n}\n\nfunction parsePrimitiveVertex(mesh: Mesh, primitive, gltfPrimitive, gltf, buffers, resources) {\n  // load vertices\n  let i = 0;\n  for (const attributeSemantic in gltfPrimitive.attributes) {\n    const accessorIdx = gltfPrimitive.attributes[attributeSemantic];\n    const accessor = gltf.accessors[accessorIdx];\n    const stride = getVertexStride(accessor);\n    const vertexELement = createVertexElement(gltf, attributeSemantic, accessor, i);\n\n    primitive.addVertexElements(vertexELement);\n    const bufferData = getAccessorData(gltf, accessor, buffers);\n    const vertexBuffer = new VertexBuffer(resources.engine, bufferData.byteLength, BufferUsage.Static);\n    vertexBuffer.setData(bufferData);\n    primitive.setVertexBufferBindings(new VertexBufferBinding(vertexBuffer, stride), i++);\n\n    // compute bounds\n    if (vertexELement.semantic == \"POSITION\") {\n      const position = new Vector3();\n      const vertexCount = bufferData.length / 3;\n      const { min, max } = mesh.bounds;\n      for (let i = 0; i < vertexCount; i++) {\n        const offset = i * 3;\n        position.setValue(bufferData[offset], bufferData[offset + 1], bufferData[offset + 2]);\n        Vector3.min(min, position, min);\n        Vector3.max(max, position, max);\n      }\n    }\n  }\n\n  // load indices\n  const indexAccessor = gltf.accessors[gltfPrimitive.indices];\n  const indexData = getAccessorData(gltf, indexAccessor, buffers);\n\n  const indexCount = indexAccessor.count;\n  const indexFormat = getIndexFormat(indexAccessor.componentType);\n  const indexByteSize = indexFormat == IndexFormat.UInt32 ? 4 : indexFormat == IndexFormat.UInt16 ? 2 : 1;\n  const indexBuffer = new IndexBuffer(resources.engine, indexCount * indexByteSize, BufferUsage.Static);\n\n  indexBuffer.setData(indexData);\n  primitive.setIndexBufferBinding(indexBuffer, indexFormat);\n  primitive.drawOffset = 0;\n  primitive.drawCount = indexCount;\n  return Promise.resolve(primitive);\n}\n\nfunction parserPrimitiveTarget(primitive, gltfPrimitive, gltf, buffers) {\n  // // load morph targets\n  // if (gltfPrimitive.hasOwnProperty(\"targets\")) {\n  //   let accessorIdx, accessor, buffer;\n  //   let attributeCount = primitive.vertexBuffers.length;\n  //   for (let j = 0; j < gltfPrimitive.targets.length; j++) {\n  //     const target = gltfPrimitive.targets[j];\n  //     for (const attributeSemantic in target) {\n  //       switch (attributeSemantic) {\n  //         case \"POSITION\":\n  //           accessorIdx = target.POSITION;\n  //           accessor = gltf.accessors[accessorIdx];\n  //           buffer = getAccessorData(gltf, accessor, buffers);\n  //           primitive.vertexBuffers.push(buffer);\n  //           const posAttrib = createAttribute(gltf, `POSITION_${j}`, accessor, attributeCount++);\n  //           primitive.vertexAttributes[`POSITION_${j}`] = posAttrib;\n  //           target[\"POSITION\"] = { ...posAttrib };\n  //           break;\n  //         case \"NORMAL\":\n  //           accessorIdx = target.NORMAL;\n  //           accessor = gltf.accessors[accessorIdx];\n  //           buffer = getAccessorData(gltf, accessor, buffers);\n  //           primitive.vertexBuffers.push(buffer);\n  //           const normalAttrib = createAttribute(gltf, `NORMAL_${j}`, accessor, attributeCount++);\n  //           primitive.vertexAttributes[`NORMAL_${j}`] = normalAttrib;\n  //           target[\"NORMAL\"] = { ...normalAttrib };\n  //           break;\n  //         case \"TANGENT\":\n  //           accessorIdx = target.TANGENT;\n  //           accessor = gltf.accessors[accessorIdx];\n  //           buffer = getAccessorData(gltf, accessor, buffers);\n  //           primitive.vertexBuffers.push(buffer);\n  //           const tangentAttrib = createAttribute(gltf, `TANGENT_${j}`, accessor, attributeCount++);\n  //           primitive.vertexAttributes[`TANGENT_${j}`] = tangentAttrib;\n  //           target[\"TANGENT\"] = { ...tangentAttrib };\n  //           break;\n  //         default:\n  //           Logger.error(`unknown morth target semantic \"${attributeSemantic}\"`);\n  //           break;\n  //       }\n  //       primitive.targets.push(target);\n  //     }\n  //   }\n  // }\n}\n\nfunction parsePrimitiveMaterial(primitive, gltfPrimitive, resources) {\n  // link mesh primitive material\n  if (gltfPrimitive.material !== undefined) {\n    let material = getItemByIdx(\"materials\", gltfPrimitive.material, resources);\n    if (material.constructor.DISABLE_SHARE) {\n      // do not share material cause different attributes\n      material = material.clone();\n    }\n    primitive.materialIndex = gltfPrimitive.material;\n    primitive.material = material;\n  } else {\n    primitive.material = getDefaultMaterial();\n  }\n}\n\n/**\n * 解析 Mesh\n * @param gltfMesh\n * @param resources\n * @private\n */\nexport function parseMesh(gltfMesh, resources) {\n  const { gltf, buffers } = resources;\n\n  const mesh = new Mesh(gltfMesh.name);\n  mesh.type = resources.assetType;\n  // parse all primitives then link to mesh\n  // TODO: use hash cached primitives\n  const primitivePromises = [];\n  for (let i = 0; i < gltfMesh.primitives.length; i++) {\n    primitivePromises.push(\n      new Promise((resolve, reject) => {\n        const gltfPrimitive = gltfMesh.primitives[i];\n        // FIXME: use index as primitive's name\n        const primitive = new Primitive(gltfPrimitive.name || gltfMesh.name || i);\n        primitive.type = resources.assetType;\n        primitive.primitiveTopology = gltfPrimitive.mode == null ? PrimitiveTopology.Triangles : gltfPrimitive.mode;\n        if (gltfPrimitive.hasOwnProperty(\"targets\")) {\n          primitive.targets = [];\n          (mesh as any).weights = gltfMesh.weights || new Array(gltfPrimitive.targets.length).fill(0);\n        }\n        let vertexPromise;\n        if (gltfPrimitive.extensions && gltfPrimitive.extensions[HandledExtensions.KHR_draco_mesh_compression]) {\n          const extensionParser = extensionParsers.KHR_draco_mesh_compression;\n          const extension = gltfPrimitive.extensions[HandledExtensions.KHR_draco_mesh_compression];\n          vertexPromise = extensionParser.parse(extension, primitive, gltfPrimitive, gltf, buffers);\n        } else {\n          vertexPromise = parsePrimitiveVertex(mesh, primitive, gltfPrimitive, gltf, buffers, resources);\n        }\n        vertexPromise\n          .then((processedPrimitive) => {\n            parserPrimitiveTarget(processedPrimitive, gltfPrimitive, gltf, buffers);\n            parsePrimitiveMaterial(processedPrimitive, gltfPrimitive, resources);\n            resolve(processedPrimitive);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n      })\n    );\n  }\n  return Promise.all(primitivePromises).then((primitives) => {\n    for (let i = 0; i < primitives.length; i++) {\n      mesh.primitives.push(primitives[i]);\n    }\n    return mesh;\n  });\n}\n\n/**\n * 解析动画\n * @param gltfAnimation\n * @param resources\n * @returns {*}\n * @private\n */\nexport function parseAnimation(gltfAnimation, resources) {\n  const { gltf, buffers } = resources;\n  const gltfSamplers = gltfAnimation.samplers || [];\n  const gltfChannels = gltfAnimation.channels || [];\n\n  const animationIdx = gltf.animations.indexOf(gltfAnimation);\n  const animationClip = new AnimationClip(gltfAnimation.name || `Animation${animationIdx}`);\n\n  let duration = -1;\n  let durationIndex = -1;\n  // parse samplers\n  for (let i = 0; i < gltfSamplers.length; i++) {\n    const gltfSampler = gltfSamplers[i];\n    // input\n    const inputAccessor = gltf.accessors[gltfSampler.input];\n    const outputAccessor = gltf.accessors[gltfSampler.output];\n    const input = getAccessorData(gltf, inputAccessor, buffers);\n    const output = getAccessorData(gltf, outputAccessor, buffers);\n    let outputAccessorSize = getAccessorTypeSize(outputAccessor.type);\n    if (outputAccessorSize * input.length !== output.length) outputAccessorSize = output.length / input.length;\n\n    // TODO: support\n    // LINEAR, STEP, CUBICSPLINE\n    let samplerInterpolation = InterpolationType.LINEAR;\n    switch (gltfSampler.interpolation) {\n      case \"CUBICSPLINE\":\n        samplerInterpolation = InterpolationType.CUBICSPLINE;\n        break;\n      case \"STEP\":\n        samplerInterpolation = InterpolationType.STEP;\n        break;\n    }\n    const maxTime = input[input.length - 1];\n    if (maxTime > duration) {\n      duration = maxTime;\n      durationIndex = i;\n    }\n    animationClip.addSampler(input, output, outputAccessorSize, samplerInterpolation);\n  }\n\n  animationClip.durationIndex = durationIndex;\n  animationClip.duration = duration;\n\n  for (let i = 0; i < gltfChannels.length; i++) {\n    const gltfChannel = gltfChannels[i];\n    const target = gltfChannel.target;\n    const samplerIndex = gltfChannel.sampler;\n    const targetNode = getItemByIdx(\"nodes\", target.node, resources);\n    const targetPath = TARGET_PATH_MAP[target.path];\n\n    animationClip.addChannel(samplerIndex, targetNode.name, targetPath);\n  }\n\n  return Promise.resolve(animationClip);\n}\n\n/**\n * 解析 glTF 节点\n * @param gltfNode\n * @param resources\n * @private\n */\nexport function parseNode(gltfNode, resources) {\n  // TODO: undefined name?\n  const entity = new Entity(gltfNode.name || `GLTF_NODE_${nodeCount++}`, resources.engine);\n\n  if (gltfNode.hasOwnProperty(\"matrix\")) {\n    const m = gltfNode.matrix;\n    const mat = new Matrix();\n    mat.setValueByArray(m);\n    const pos = new Vector3();\n    const scale = new Vector3(1, 1, 1);\n    const rot = new Quaternion();\n    mat.decompose(pos, rot, scale);\n\n    entity.position = pos;\n    entity.rotation = rot;\n    entity.scale = scale;\n  } else {\n    for (const key in TARGET_PATH_MAP) {\n      if (gltfNode.hasOwnProperty(key)) {\n        const mapKey = TARGET_PATH_MAP[key];\n        if (mapKey === \"weights\") {\n          entity[mapKey] = gltfNode[key];\n        } else {\n          const arr = gltfNode[key];\n          const len = arr.length;\n          const obj = entity[mapKey];\n          if (len === 2) {\n            obj.setValue(arr[0], arr[1]);\n          } else if (len === 3) {\n            obj.setValue(arr[0], arr[1], arr[2]);\n          } else if (len === 4) {\n            obj.setValue(arr[0], arr[1], arr[2], arr[3]);\n          }\n          entity[mapKey] = obj;\n        }\n      }\n    }\n  }\n\n  if (gltfNode.extensions) {\n    if (KHR_lights && gltfNode.extensions.KHR_lights) {\n      const lightIdx = gltfNode.extensions.KHR_lights.light;\n      if (lightIdx !== undefined) {\n        const light = getItemByIdx(\"lights\", lightIdx, resources);\n        if (light) entity.addComponent(light.ability, light.props);\n      }\n    }\n  }\n\n  return Promise.resolve(entity);\n}\n\n/**\n * 解析 glTF 场景\n * @param gltfScene\n * @param resources\n * @returns {{nodes: Array}}\n * @private\n */\nexport function parseScene(gltfScene, resources) {\n  const sceneNodes = [];\n  for (let i = 0; i < gltfScene.nodes.length; i++) {\n    const node = getItemByIdx(\"nodes\", gltfScene.nodes[i], resources);\n    sceneNodes.push(node);\n  }\n\n  if (gltfScene.extensions) {\n    if (KHR_lights && gltfScene.extensions.KHR_lights) {\n      const lightIdx = gltfScene.extensions.KHR_lights.light;\n      if (lightIdx !== undefined) {\n        const light = getItemByIdx(\"lights\", lightIdx, resources);\n        if (light) sceneNodes[0].addComponent(light.ability, light.props);\n      }\n    }\n  }\n\n  return Promise.resolve({\n    nodes: sceneNodes\n  });\n}\n\n/**\n * 通过索引获得内容\n * @param name\n * @param idx\n * @param resources\n * @returns {*}\n * @private\n */\nexport function getItemByIdx(name, idx, resources, inverse: boolean = true) {\n  const { asset } = resources;\n\n  const itemIdx = inverse ? asset[name].length - idx - 1 : idx;\n  return asset[name][itemIdx];\n}\n\n/**\n * 构造 scene graph，根据节点配置创建 Ability\n * @param resources\n * @private\n */\nexport function buildSceneGraph(resources: GLTFParsed): GLTFResource {\n  const { asset, gltf } = resources;\n\n  const gltfNodes = gltf.nodes || [];\n\n  asset.defaultScene = getItemByIdx(\"scenes\", gltf.scene ?? 0, resources);\n\n  for (let i = gltfNodes.length - 1; i >= 0; i--) {\n    const gltfNode = gltfNodes[i];\n    const node = getItemByIdx(\"nodes\", i, resources);\n\n    if (gltfNode.hasOwnProperty(\"children\")) {\n      const children = gltfNode.children || [];\n      for (let j = children.length - 1; j >= 0; j--) {\n        const childNode = getItemByIdx(\"nodes\", children[j], resources);\n\n        node.addChild(childNode);\n      }\n    }\n\n    // link mesh\n    if (gltfNode.hasOwnProperty(\"mesh\")) {\n      // find mesh\n      const mesh = getItemByIdx(\"meshes\", gltfNode.mesh, resources);\n\n      if (gltfNode.hasOwnProperty(\"skin\") || mesh.hasOwnProperty(\"weights\")) {\n        const skin = getItemByIdx(\"skins\", gltfNode.skin, resources);\n        const weights = mesh.weights;\n        node.addComponent(SkinnedMeshRenderer, { skin, mesh, weights });\n      } else {\n        node.addComponent(MeshRenderer, { mesh });\n      }\n    }\n  }\n\n  //@ts-ignore\n  const nodes = asset.defaultScene.nodes;\n  if (nodes.length === 1) {\n    asset.defaultSceneRoot = nodes[0];\n  } else {\n    const rootNode = new Entity(null, resources.engine);\n    for (let i = 0; i < nodes.length; i++) {\n      rootNode.addChild(nodes[i]);\n    }\n    asset.defaultSceneRoot = rootNode;\n  }\n\n  const animator = asset.defaultSceneRoot.addComponent(Animation);\n  const animations = asset.animations;\n  if (animations) {\n    animations.forEach((clip: AnimationClip) => {\n      animator.addAnimationClip(clip, clip.name);\n    });\n  }\n  return resources.asset as GLTFResource;\n}\n","import { decodeText } from \"./Util\";\n\n/**\n * 解析 glb 格式\n * @param glb 二进制数据\n * @returns Object glb 中 glTF 信息与 bin 信息\n * @private\n */\nexport function parseGLB(glb) {\n  const UINT32_LENGTH = 4;\n  const GLB_HEADER_MAGIC = 0x46546c67; // 'glTF'\n  const GLB_HEADER_LENGTH = 12;\n  const GLB_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n  const dataView = new DataView(glb);\n\n  // read header\n  const header = {\n    magic: dataView.getUint32(0, true),\n    version: dataView.getUint32(UINT32_LENGTH, true),\n    length: dataView.getUint32(2 * UINT32_LENGTH, true)\n  };\n\n  if (header.magic !== GLB_HEADER_MAGIC) {\n    console.error(\"Invalid glb magic number. Expected 0x46546C67, found 0x\" + header.magic.toString(16));\n    return null;\n  }\n\n  // read main data\n  let chunkLength = dataView.getUint32(GLB_HEADER_LENGTH, true);\n  let chunkType = dataView.getUint32(GLB_HEADER_LENGTH + UINT32_LENGTH, true);\n\n  // read glTF json\n  if (chunkType !== GLB_CHUNK_TYPES.JSON) {\n    console.error(\"Invalid glb chunk type. Expected 0x004E4942, found 0x\" + chunkType.toString(16));\n    return null;\n  }\n\n  const glTFData = new Uint8Array(glb, GLB_HEADER_LENGTH + 2 * UINT32_LENGTH, chunkLength);\n  const gltf = JSON.parse(decodeText(glTFData));\n\n  // read all buffers\n  const buffers = [];\n  let byteOffset = GLB_HEADER_LENGTH + 2 * UINT32_LENGTH + chunkLength;\n\n  while (byteOffset < header.length) {\n    chunkLength = dataView.getUint32(byteOffset, true);\n    chunkType = dataView.getUint32(byteOffset + UINT32_LENGTH, true);\n\n    if (chunkType !== GLB_CHUNK_TYPES.BIN) {\n      console.error(\"Invalid glb chunk type. Expected 0x004E4942, found 0x\" + chunkType.toString(16));\n      return null;\n    }\n\n    const currentOffset = byteOffset + 2 * UINT32_LENGTH;\n    const buffer = glb.slice(currentOffset, currentOffset + chunkLength);\n    buffers.push(buffer);\n\n    byteOffset += chunkLength + 2 * UINT32_LENGTH;\n  }\n\n  // start parse glTF\n  return {\n    gltf,\n    buffers\n  };\n}\n","import { resourceLoader, Loader, AssetPromise, AssetType, LoadItem, ResourceManager, Texture2D } from \"@alipay/o3-core\";\nimport { GlTf, LoadedGLTFResource } from \"./GLTF\";\nimport { parseGLTF, GLTFResource } from \"./gltf/glTF\";\nimport { parseGLB } from \"./gltf/glb\";\nimport { loadImageBuffer, getBufferData, parseRelativeUrl } from \"./gltf/Util\";\n\n@resourceLoader(AssetType.Perfab, [\"gltf\", \"glb\"])\nexport class GLTFLoader extends Loader<GLTFResource> {\n  private baseUrl: string;\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<GLTFResource> {\n    return new AssetPromise((resolve, reject) => {\n      const requestGLTFResource = this.isGLB(item.url) ? this.requestGLB : this.requestGLTF;\n      requestGLTFResource(item, resourceManager)\n        .then((res) => {\n          parseGLTF(res, resourceManager.engine).then((gltf) => {\n            resolve(gltf);\n          });\n        })\n        .catch((e) => {\n          console.error(e);\n          reject(\"Error loading glTF JSON from \" + item.url);\n        });\n    });\n  }\n\n  private requestGLTF = (item: LoadItem, resourceManager: ResourceManager): Promise<LoadedGLTFResource> => {\n    return this.request<GlTf>(item.url, {\n      ...item,\n      type: \"json\"\n    }).then((res) => this._loadGLTFResources(item, res, resourceManager));\n  };\n\n  private requestGLB = (item: LoadItem, resourceManager: ResourceManager): Promise<LoadedGLTFResource> => {\n    return this.request<GlTf>(item.url, {\n      ...item,\n      type: \"arraybuffer\"\n    })\n      .then(parseGLB)\n      .then((res) => {\n        return { ...res, baseUrl: item.url, resourceManager };\n      })\n      .then(this._loadImages);\n  };\n\n  private isGLB(url: string): boolean {\n    return url.substring(url.lastIndexOf(\".\") + 1) === \"glb\";\n  }\n\n  /**\n   * 加载 gltf 内的资源\n   * @param gltf\n   * @param resourceManager\n   */\n  private _loadGLTFResources(\n    item: LoadItem,\n    gltf: GlTf,\n    resourceManager: ResourceManager\n  ): Promise<LoadedGLTFResource> {\n    // 必须先加载 Buffer 再加载图片\n    return this._loadBuffers(item.url, gltf, resourceManager).then(this._loadImages);\n  }\n\n  private _loadBuffers(baseUrl: string, gltf: GlTf, resourceManager: ResourceManager): Promise<LoadedGLTFResource> {\n    if (gltf.buffers) {\n      return Promise.all(\n        gltf.buffers.map((item) => {\n          if (item instanceof ArrayBuffer) {\n            return Promise.resolve(item);\n          }\n          return resourceManager.load<ArrayBuffer>({\n            url: parseRelativeUrl(baseUrl, item.uri),\n            type: AssetType.Buffer\n          });\n        })\n      ).then((buffers) => {\n        return { buffers, gltf, baseUrl, resourceManager };\n      });\n    }\n    return Promise.resolve({ baseUrl, gltf, resourceManager });\n  }\n\n  private _loadImages = ({\n    gltf,\n    buffers,\n    baseUrl,\n    resourceManager\n  }: LoadedGLTFResource & { baseUrl: string; resourceManager: ResourceManager }): Promise<any> => {\n    if (gltf.images) {\n      return Promise.all(\n        gltf.images.map(({ uri, bufferView: bufferViewIndex, mimeType }) => {\n          if (uri) {\n            // 使用 base64 或 url\n            return resourceManager.load({ url: parseRelativeUrl(baseUrl, uri), type: AssetType.Texture2D });\n          } else {\n            // 使用 bufferView\n            const bufferView = gltf.bufferViews[bufferViewIndex];\n            const bufferData = getBufferData(bufferView, buffers);\n            return loadImageBuffer(bufferData, mimeType).then((image) => {\n              const tex = new Texture2D(image.width, image.height, undefined, undefined, resourceManager.engine);\n              tex.setImageSource(image);\n              tex.generateMipmaps();\n              return tex;\n            });\n          }\n        })\n      ).then((textures) => {\n        return { gltf, buffers, textures };\n      });\n    }\n    return Promise.resolve({ gltf, buffers });\n  };\n}\n","import { resourceLoader, Loader, AssetPromise, AssetType, LoadItem } from \"@alipay/o3-core\";\n\n@resourceLoader(AssetType.JSON, [\"json\"], false)\nclass JSONLoader extends Loader<string> {\n  load(item: LoadItem): AssetPromise<string> {\n    return this.request(item.url, {\n      ...item,\n      type: \"json\"\n    });\n  }\n}\n","/**\n *\n * ported from https://github.com/BabylonJS/Babylon.js/blob/master/src/Tools/babylon.khronosTextureContainer.ts\n */\n\nimport { Mipmap, KTXContainer } from \"./type\";\nimport { GLCompressedTextureInternalFormat, TextureFormat } from \"@alipay/o3-core\";\n\nconst HEADER_LEN = 12 + 13 * 4; // identifier + header elements (not including key value meta-data pairs)\n\n// load types\nconst COMPRESSED_2D = 0; // uses a gl.compressedTexImage2D()\nconst COMPRESSED_3D = 1; // uses a gl.compressedTexImage3D()\nconst TEX_2D = 2; // uses a gl.texImage2D()\nconst TEX_3D = 3; // uses a gl.texImage3D()\n\nfunction getMipmaps(ktxContainer: KTXContainer, loadMipmaps: boolean): Mipmap[] {\n  const mipmaps = [];\n\n  // initialize width & height for level 1\n  var dataOffset = HEADER_LEN + ktxContainer.bytesOfKeyValueData;\n  var width = ktxContainer.pixelWidth;\n  var height = ktxContainer.pixelHeight;\n  var mipmapCount = loadMipmaps ? ktxContainer.numberOfMipmapLevels : 1;\n\n  for (var level = 0; level < mipmapCount; level++) {\n    var imageSize = new Int32Array(ktxContainer.buffer, dataOffset, 1)[0]; // size per face, since not supporting array cubemaps\n    dataOffset += 4; // size of the image + 4 for the imageSize field\n\n    for (var face = 0; face < ktxContainer.numberOfFaces; face++) {\n      var byteArray = new Uint8Array(ktxContainer.buffer, dataOffset, imageSize);\n\n      mipmaps.push({ data: byteArray, width: width, height: height });\n\n      dataOffset += imageSize;\n      dataOffset += 3 - ((imageSize + 3) % 4); // add padding for odd sized image\n    }\n    width = Math.max(1.0, width * 0.5);\n    height = Math.max(1.0, height * 0.5);\n  }\n\n  return mipmaps;\n}\n\n/**\n * Checks if the given data starts with a KTX file identifier.\n * @param data the data to check\n * @returns true if the data is a KTX file or false otherwise\n */\nfunction isValid(data: ArrayBuffer): boolean {\n  if (data.byteLength >= 12) {\n    // '«', 'K', 'T', 'X', ' ', '1', '1', '»', '\\r', '\\n', '\\x1A', '\\n'\n    const identifier = new Uint8Array(data, 0, 12);\n    if (\n      identifier[0] === 0xab &&\n      identifier[1] === 0x4b &&\n      identifier[2] === 0x54 &&\n      identifier[3] === 0x58 &&\n      identifier[4] === 0x20 &&\n      identifier[5] === 0x31 &&\n      identifier[6] === 0x31 &&\n      identifier[7] === 0xbb &&\n      identifier[8] === 0x0d &&\n      identifier[9] === 0x0a &&\n      identifier[10] === 0x1a &&\n      identifier[11] === 0x0a\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getEngineFormat(internalFormat: GLint): TextureFormat {\n  switch (internalFormat) {\n    // case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT3_EXT:\n    // case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT:\n    // break;\n    case GLCompressedTextureInternalFormat.RGB_S3TC_DXT1_EXT:\n      return TextureFormat.DXT1;\n    case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT:\n      return TextureFormat.DXT5;\n    case GLCompressedTextureInternalFormat.RGB_ETC1_WEBGL:\n      return TextureFormat.ETC1_RGB;\n    case GLCompressedTextureInternalFormat.RGB8_ETC2:\n      return TextureFormat.ETC2_RGB;\n    case GLCompressedTextureInternalFormat.RGB8_PUNCHTHROUGH_ALPHA1_ETC2:\n      return TextureFormat.ETC2_RGBA5;\n    case GLCompressedTextureInternalFormat.RGBA8_ETC2_EAC:\n      return TextureFormat.ETC2_RGBA8;\n    case GLCompressedTextureInternalFormat.RGB_PVRTC_2BPPV1_IMG:\n      return TextureFormat.PVRTC_RGB2;\n    case GLCompressedTextureInternalFormat.RGBA_PVRTC_2BPPV1_IMG:\n      return TextureFormat.PVRTC_RGBA2;\n    case GLCompressedTextureInternalFormat.RGB_PVRTC_4BPPV1_IMG:\n      return TextureFormat.PVRTC_RGB4;\n    case GLCompressedTextureInternalFormat.RGBA_PVRTC_4BPPV1_IMG:\n      return TextureFormat.PVRTC_RGBA4;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_4X4_KHR:\n      return TextureFormat.ASTC_4x4;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_5X5_KHR:\n      return TextureFormat.ASTC_5x5;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_6X6_KHR:\n      return TextureFormat.ASTC_6x6;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_8X8_KHR:\n      return TextureFormat.ASTC_8x8;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_10X10_KHR:\n      return TextureFormat.ASTC_10x10;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_12X12_KHR:\n      return TextureFormat.ASTC_12x12;\n    default:\n      const formatName: any = GLCompressedTextureInternalFormat[internalFormat];\n      throw new Error(`this format is not supported in Oasis Engine: ${formatName}`);\n  }\n}\n/**\n * for description see https://www.khronos.org/opengles/sdk/tools/KTX/\n * for file layout see https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/\n */\nexport const khronosTextureContainerParser = {\n  /**\n   *\n   * @param buffer contents of the KTX container file\n   * @param facesExpected should be either 1 or 6, based whether a cube texture or or\n   * @param threeDExpected provision for indicating that data should be a 3D texture, not implemented\n   * @param textureArrayExpected provision for indicating that data should be a texture array, not implemented\n   * @param mapEngineFormat get Oasis Engine native TextureFormat?\n   */\n  parse(\n    buffer: ArrayBuffer,\n    facesExpected: number,\n    withMipmaps: boolean,\n    mapEngineFormat: boolean = false\n  ): KTXContainer {\n    if (!isValid(buffer)) {\n      throw new Error(\"khronosTextureContainerParser: invalid KTX file, texture missing KTX identifier\");\n    }\n\n    // load the reset of the header in native 32 bit uint\n    const dataSize = Uint32Array.BYTES_PER_ELEMENT;\n    const headerDataView = new DataView(buffer, 12, 13 * dataSize);\n    const endianness = headerDataView.getUint32(0, true);\n    const littleEndian = endianness === 0x04030201;\n\n    const parsedResult: KTXContainer = {\n      buffer: buffer,\n      glType: headerDataView.getUint32(1 * dataSize, littleEndian), // must be 0 for compressed textures\n      glTypeSize: headerDataView.getUint32(2 * dataSize, littleEndian), // must be 1 for compressed textures\n      glFormat: headerDataView.getUint32(3 * dataSize, littleEndian), // must be 0 for compressed textures\n      glInternalFormat: headerDataView.getUint32(4 * dataSize, littleEndian), // the value of arg passed to gl.compressedTexImage2D(,,x,,,,)\n      glBaseInternalFormat: headerDataView.getUint32(5 * dataSize, littleEndian), // specify GL_RGB, GL_RGBA, GL_ALPHA, etc (un-compressed only)\n      pixelWidth: headerDataView.getUint32(6 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage2D(,,,x,,,)\n      pixelHeight: headerDataView.getUint32(7 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage2D(,,,,x,,)\n      pixelDepth: headerDataView.getUint32(8 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage3D(,,,,,x,,)\n      numberOfArrayElements: headerDataView.getUint32(9 * dataSize, littleEndian), // used for texture arrays\n      numberOfFaces: headerDataView.getUint32(10 * dataSize, littleEndian), // used for cubemap textures, should either be 1 or 6\n      numberOfMipmapLevels: headerDataView.getUint32(11 * dataSize, littleEndian), // number of levels; disregard possibility of 0 for compressed textures\n      bytesOfKeyValueData: headerDataView.getUint32(12 * dataSize, littleEndian), // the amount of space after the header for meta-data\n      // would need to make this more elaborate & adjust checks above to support more than one load type\n      loadType: COMPRESSED_2D\n    };\n\n    // Make sure we have a compressed type.  Not only reduces work, but probably better to let dev know they are not compressing.\n    if (parsedResult.glType !== 0) {\n      throw new Error(\"only compressed formats currently supported\");\n    } else {\n      // value of zero is an indication to generate mipmaps @ runtime.  Not usually allowed for compressed, so disregard.\n      parsedResult.numberOfMipmapLevels = Math.max(1, parsedResult.numberOfMipmapLevels);\n    }\n\n    if (parsedResult.pixelHeight === 0 || parsedResult.pixelDepth !== 0) {\n      throw new Error(\"only 2D textures currently supported\");\n    }\n\n    if (parsedResult.numberOfArrayElements !== 0) {\n      throw new Error(\"texture arrays not currently supported\");\n    }\n\n    if (parsedResult.numberOfFaces !== facesExpected) {\n      throw new Error(\"number of faces expected\" + facesExpected + \", but found \" + parsedResult.numberOfFaces);\n    }\n\n    if (withMipmaps) {\n      parsedResult.mipmaps = getMipmaps(parsedResult, true);\n    }\n\n    if (mapEngineFormat) {\n      parsedResult.engineFormat = getEngineFormat(parsedResult.glInternalFormat);\n    }\n    return parsedResult;\n  }\n};\n","import { CompressedTextureData, CompressedCubeData } from \"./type\";\nimport { khronosTextureContainerParser } from \"./KhronosTextureContainer\";\nimport { TextureFormat } from \"@alipay/o3-core\";\n\nexport function parseSingleKTX(data: ArrayBuffer): CompressedTextureData {\n  const ktx = khronosTextureContainerParser.parse(data, 1, true, true);\n  return {\n    mipmaps: ktx.mipmaps,\n    engineFormat: ktx.engineFormat,\n    internalFormat: ktx.glInternalFormat,\n    width: ktx.pixelWidth,\n    height: ktx.pixelHeight\n  };\n}\n\nexport function parseCubeKTX(dataArray: ArrayBuffer[]): CompressedCubeData {\n  const mipmapsFaces = [];\n  let internalFormat: number;\n  let engineFormat: TextureFormat;\n  let width: number;\n  let height: number;\n  for (let i = 0; i < dataArray.length; i++) {\n    const ktx = khronosTextureContainerParser.parse(dataArray[i], 1, true, true);\n    mipmapsFaces.push(ktx.mipmaps);\n    if (i === 0) {\n      width = ktx.pixelWidth;\n      height = ktx.pixelHeight;\n      internalFormat = ktx.glInternalFormat;\n      engineFormat = ktx.engineFormat;\n    }\n  }\n  return {\n    mipmapsFaces,\n    engineFormat,\n    internalFormat,\n    width,\n    height\n  };\n}\n","import {\n  AssetPromise,\n  AssetType,\n  Loader,\n  LoadItem,\n  resourceLoader,\n  ResourceManager,\n  TextureCubeFace,\n  TextureCubeMap\n} from \"@alipay/o3-core\";\nimport { parseCubeKTX } from \"./compressed-texture\";\n\n@resourceLoader(AssetType.KTXCube, [])\nclass KTXCubeLoader extends Loader<TextureCubeMap> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<TextureCubeMap> {\n    return new AssetPromise((resolve, reject) => {\n      Promise.all(\n        item.urls.map((url) =>\n          this.request<ArrayBuffer>(url, {\n            ...item,\n            type: \"arraybuffer\"\n          })\n        )\n      )\n        .then((data) => {\n          const parsedData = parseCubeKTX(data);\n          const { width, mipmapsFaces, engineFormat } = parsedData;\n          const mipmap = mipmapsFaces[0].length > 1;\n          const texture = new TextureCubeMap(width, engineFormat, mipmap, resourceManager.engine);\n\n          for (let face = 0; face < 6; face++) {\n            const length = mipmapsFaces[face].length;\n\n            for (let miplevel = 0; miplevel < length; miplevel++) {\n              const { data, width, height } = mipmapsFaces[face][miplevel];\n\n              texture.setPixelBuffer(TextureCubeFace.PositiveX + face, data, miplevel, 0, 0, width, height);\n            }\n          }\n\n          resolve(texture);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import { AssetPromise, AssetType, Loader, LoadItem, resourceLoader, ResourceManager, Texture2D } from \"@alipay/o3-core\";\nimport { parseSingleKTX } from \"./compressed-texture\";\n\n@resourceLoader(AssetType.KTX, [\"ktx\"])\nexport class KTXLoader extends Loader<Texture2D> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<Texture2D> {\n    return new AssetPromise((resolve, reject) => {\n      this.request<ArrayBuffer>(item.url, {\n        ...item,\n        type: \"arraybuffer\"\n      })\n        .then((bin) => {\n          const parsedData = parseSingleKTX(bin);\n          const { width, height, mipmaps, engineFormat } = parsedData;\n          const mipmap = mipmaps.length > 1;\n          const texture = new Texture2D(width, height, engineFormat, mipmap, resourceManager.engine);\n\n          for (let miplevel = 0; miplevel < mipmaps.length; miplevel++) {\n            const { width, height, data } = mipmaps[miplevel];\n            texture.setPixelBuffer(data, miplevel, 0, 0, width, height);\n          }\n\n          resolve(texture);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import { AssetPromise, AssetType, Loader, LoadItem, resourceLoader, ResourceManager, Texture2D } from \"@alipay/o3-core\";\n\n@resourceLoader(AssetType.Texture2D, [\"png\", \"jpg\", \"webp\"])\nclass Texture2DLoader extends Loader<Texture2D> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<Texture2D> {\n    return new AssetPromise((resolve, reject) => {\n      this.request<HTMLImageElement>(item.url, {\n        ...item,\n        type: \"image\"\n      })\n        .then((image) => {\n          const texture = new Texture2D(image.width, image.height, undefined, undefined, resourceManager.engine);\n          if (!texture._glTexture) return;\n          texture.setImageSource(image);\n          texture.generateMipmaps();\n\n          resolve(texture);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import {\n  AssetPromise,\n  AssetType,\n  Loader,\n  LoadItem,\n  resourceLoader,\n  ResourceManager,\n  TextureCubeFace,\n  TextureCubeMap\n} from \"@alipay/o3-core\";\n\n@resourceLoader(AssetType.TextureCube, [\"\"])\nclass TextureCubeLoader extends Loader<TextureCubeMap> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<TextureCubeMap> {\n    return new AssetPromise((resolve, reject) => {\n      Promise.all(\n        item.urls.map((url) =>\n          this.request<HTMLImageElement>(url, {\n            ...item,\n            type: \"image\"\n          })\n        )\n      )\n        .then((images) => {\n          const { width, height } = images[0];\n\n          if (width !== height) {\n            console.error(\"The cube texture must have the same width and height\");\n            return;\n          }\n\n          const tex = new TextureCubeMap(width, undefined, undefined, resourceManager.engine);\n\n          if (!tex._glTexture) return;\n\n          for (let faceIndex = 0; faceIndex < 6; faceIndex++) {\n            tex.setImageSource(TextureCubeFace.PositiveX + faceIndex, images[faceIndex], 0);\n          }\n\n          tex.generateMipmaps();\n          resolve(tex);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import { Component, Entity, WrapMode, Animation } from \"@alipay/o3-core\";\nimport { GLTFResource } from \"./gltf/glTF\";\n\n/**\n * @deprecated\n * 暂时只为编辑器使用\n * 待编辑器完成 gltf 变成 prefab 移除\n */\nexport class GLTFModel extends Component {\n  get asset() {\n    return this._asset;\n  }\n\n  set asset(value: GLTFResource) {\n    if (value && value.defaultSceneRoot === this.GLTFNode) {\n      return;\n    }\n    if (!this._hasBuiltNode) {\n      (this.GLTFNode as any).clearChildren();\n      if (value !== null) {\n        if (this.GLTFNode) {\n          this.GLTFNode.destroy();\n        }\n        this.GLTFNode = value.defaultSceneRoot.clone();\n        this._animator = this.GLTFNode.getComponent(Animation);\n        this.entity.addChild(this.GLTFNode);\n      }\n    }\n    this._asset = value;\n  }\n\n  get animator() {\n    return this._animator;\n  }\n\n  get autoPlay() {\n    return this._autoPlay;\n  }\n\n  set autoPlay(value: string) {\n    if (this._animator) {\n      // 播放骨骼动画\n      if (value) {\n        this._animator.playAnimationClip(value, {\n          wrapMode: this._loop\n        });\n      } else {\n        this._animator.stop(false);\n      }\n    }\n    this._autoPlay = value;\n  }\n\n  get loop() {\n    return this._loop;\n  }\n\n  set loop(value: WrapMode) {\n    if (this._animator && this.autoPlay) {\n      // 播放骨骼动画\n      this._animator.playAnimationClip(this._autoPlay, {\n        wrapMode: value\n      });\n    }\n    this._loop = value;\n  }\n\n  public _animator: Animation;\n  public animationsNames: String[];\n\n  private _asset: GLTFResource;\n  private GLTFNode: Entity;\n  private _loop: number;\n  private _autoPlay: string;\n  private _hasBuiltNode: boolean = false;\n\n  constructor(entity, props) {\n    super(entity, props);\n\n    const { asset = null, autoPlay, loop, isClone } = props;\n    if (isClone) {\n      const rootName = (this._props as any).gltfRootName;\n      if (rootName) {\n        this.GLTFNode = this.entity.findByName(rootName);\n      }\n    }\n    if (!this.GLTFNode) {\n      const rootName = `GLTF-${Date.now()}`;\n      (this._props as any).gltfRootName = rootName;\n      this.GLTFNode = this.entity.createChild(rootName);\n      this._hasBuiltNode = false;\n    } else {\n      this._hasBuiltNode = true;\n    }\n\n    this.asset = asset;\n    this.loop = loop;\n    this.autoPlay = autoPlay;\n\n    this.addEventListener(\"enabled\", () => {\n      this.GLTFNode.isActive = true;\n    });\n    this.addEventListener(\"disabled\", () => {\n      this.GLTFNode.isActive = false;\n    });\n  }\n}\n","import { Component, Entity } from \"@alipay/o3-core\";\nimport { Oasis } from \"../Oasis\";\nimport { SchemaResource } from \"../resources\";\nimport { Plugin } from \"./Plugin\";\nexport class PluginManager implements PluginHook {\n  private registeredPlugins: Set<Plugin> = new Set();\n  private plugins: PluginHook[] = [];\n\n  register(plugin: Plugin) {\n    this.registeredPlugins.add(plugin);\n  }\n\n  boot(oasis: Oasis) {\n    for (let plugin of this.registeredPlugins.values()) {\n      if (typeof plugin === \"function\") {\n        plugin = plugin(oasis);\n      }\n      this.plugins.push(plugin);\n    }\n  }\n\n  reset() {\n    this.registeredPlugins.clear();\n    this.plugins = [];\n  }\n\n  nodeAdded(entity: Entity) {\n    this.delegateMethod(\"nodeAdded\", entity);\n  }\n\n  private delegateMethod(name: keyof PluginHook, ...args) {\n    this.plugins.forEach((plugin) => plugin[name] && (plugin[name] as any)(...args));\n  }\n}\n\nexport interface PluginHook {\n  oasis?: Oasis;\n  nodeAdded?(entity: Entity): any;\n  beforeNodeUpdated?(id: string, key: string, value: any): any;\n  nodeUpdated?(updateConfig?: { id: string; key: string; value: any }): any;\n  abilityAdded?(ability: Component): any;\n  beforeAbilityAdded?(config: any): any;\n  beforeAbilityUpdated?(id: string, key: string, value: any): any;\n  abilityUpdated?(updateConfig?: { id: string; key: string; value: any }): any;\n  schemaParsed?(): any;\n  abilityDeleted?(id: string): any;\n  beforeAbilityDeleted?(id: string): any;\n  beforeNodeDeleted?(config: any): any;\n  beforeResourceRemove?(id: string): any;\n  resourceUpdated?(info: { resource: SchemaResource; id: string; key: string; value: any }): any;\n  beforeResourceUpdate?(id: string, key: string, value: any): any;\n  // todo type\n  beforeResourceAdd?(resource: any): any;\n  resourceAdded?(resource: any): any;\n}\n\nexport function pluginHook(options: Partial<{ before: keyof PluginHook; after: keyof PluginHook }>): MethodDecorator {\n  return function (target: any, propertyName: string, descriptor: TypedPropertyDescriptor<any>) {\n    const method = descriptor.value;\n\n    descriptor.value = function (...args: any[]) {\n      options.before && this.oasis.pluginManager.delegateMethod(options.before, ...args);\n      return Promise.resolve(method.apply(this, arguments)).then((returnObj) => {\n        options.after && this.oasis.pluginManager.delegateMethod(options.after, returnObj);\n        return returnObj;\n      });\n    };\n  };\n}\n","export function switchElementsIndex(elements: any[], currentIndex: number, targetIndex: number) {\n  if (currentIndex === targetIndex || targetIndex === null || targetIndex === undefined) {\n    return;\n  }\n  [elements[currentIndex], elements[targetIndex]] = [elements[targetIndex], elements[currentIndex]];\n}\n\nexport function isAsset(config: any): boolean {\n  return config && config.type === \"asset\";\n}\n\nexport function getAllGetters(obj: any): Array<string> {\n  const result = [];\n  const prototype = Object.getPrototypeOf(obj);\n  const prototype_property_descriptors = Object.getOwnPropertyDescriptors(prototype);\n  for (const [property, descriptor] of Object.entries(prototype_property_descriptors)) {\n    if (typeof descriptor.get === \"function\") {\n      result.push(property);\n    }\n  }\n  return result;\n}\n\n// 求数组并集\nexport function union(arr1: Array<any>, arr2: Array<any>): Array<any> {\n  return arr1.concat(arr2.filter((v) => !(arr1.indexOf(v) > -1)));\n}\n\n// https://github.com/BabylonJS/Babylon.js/blob/d780145531ac1b1cee85cbfba4d836dcc24ab58e/src/Engines/Extensions/engine.textureSelector.ts#L70\n// Intelligently add supported compressed formats in order to check for.\n// Check for ASTC support first as it is most powerful and to be very cross platform.\n// Next PVRTC & DXT, which are probably superior to ETC1/2.\n// Likely no hardware which supports both PVR & DXT, so order matters little.\n// ETC2 is newer and handles ETC1 (no alpha capability), so check for first.\nexport const compressedTextureLoadOrder = {\n  astc: 1,\n  s3tc: 2,\n  pvrtc: 3,\n  etc: 4,\n  etc1: 5\n};\n","import { Logger, ResourceManager } from \"@alipay/o3-core\";\nimport { Oasis } from \"../Oasis\";\nimport { SchemaResourceManager } from \"../ResourceManager\";\nimport { AssetConfig, LoadAttachedResourceResult } from \"../types\";\nimport { isAsset } from \"../utils\";\n\ninterface IResourceMeta {\n  name?: string;\n  url?: string;\n  size?: number;\n  source?: string;\n}\n\nexport abstract class SchemaResource {\n  protected _meta: IResourceMeta = {};\n  protected _attachedResources: Array<SchemaResource> = [];\n\n  /**\n   * 资源\n   */\n  get resource() {\n    return this._resource;\n  }\n\n  get meta(): IResourceMeta {\n    return this._meta;\n  }\n\n  get attachedResources() {\n    return this._attachedResources;\n  }\n\n  protected setMeta() {}\n\n  constructor(protected resourceManager: SchemaResourceManager, protected _resource?: any) {\n    this.setMeta();\n  }\n\n  abstract load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<SchemaResource>;\n  loadWithAttachedResources(\n    resourceLoader: any,\n    assetConfig: AssetConfig,\n    oasis: Oasis\n  ): Promise<LoadAttachedResourceResult> {\n    return new Promise((resolve, reject) => {\n      this.load(resourceLoader, assetConfig, oasis)\n        .then(() => {\n          resolve({\n            resources: [this],\n            structure: {\n              index: 0,\n              props: {}\n            }\n          });\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n\n  getProps(): any {\n    return {};\n  }\n\n  bind(): void {}\n  attach(): void {}\n\n  update(key: string, value: any) {\n    if (isAsset(value)) {\n      const resource = this.resourceManager.get(value.id);\n      if (resource) {\n        this._resource[key] = resource.resource;\n      } else {\n        Logger.warn(`SchemaResource: ${this.meta.name} can't find asset, which id is: ${value.id}`);\n      }\n    } else {\n      this._resource[key] = value;\n    }\n  }\n\n  updateMeta(key: string, value: any) {\n    this._meta[key] = value;\n  }\n\n  onDestroy() {}\n}\n","import { GLCapabilityType, ResourceManager } from \"@alipay/o3-core\";\nimport { Oasis } from \"../Oasis\";\nimport { AssetConfig } from \"../types\";\nimport { compressedTextureLoadOrder } from \"../utils\";\nimport { SchemaResource } from \"./SchemaResource\";\n\nexport class TextureResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<TextureResource> {\n    return new Promise((resolve, reject) => {\n      let url: string;\n      if (this.resourceManager.useCompressedTexture && assetConfig?.props?.compression?.compressions.length) {\n        const rhi = oasis.engine._hardwareRenderer;\n        const compressions = assetConfig.props.compression.compressions;\n        compressions.sort((a: any, b: any) => compressedTextureLoadOrder[a.type] - compressedTextureLoadOrder[b.type]);\n        for (let i = 0; i < compressions.length; i++) {\n          const compression = compressions[i];\n          if (compression.container === \"ktx\" && rhi.canIUse(GLCapabilityType[compression.type])) {\n            url = compression.url;\n            break;\n          }\n        }\n      }\n\n      url = url ?? assetConfig.url;\n\n      resourceManager\n        .load(url)\n        .then((res) => {\n          this._resource = res;\n          resolve(this);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this._meta.name = this.resource.name;\n      if (this.resource.image) {\n        this._meta.url = this.resource.image.src;\n      }\n    }\n  }\n}\n","import { Logger, PBRMaterial, ResourceManager, Texture } from \"@alipay/o3-core\";\nimport { AssetConfig, LoadAttachedResourceResult } from \"../types\";\nimport { getAllGetters, isAsset } from \"../utils\";\nimport { SchemaResource } from \"./SchemaResource\";\nimport { TextureResource } from \"./TextureResource\";\n\nexport class PBRMaterialResource extends SchemaResource {\n  private configProps;\n\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig): Promise<PBRMaterialResource> {\n    return new Promise((resolve) => {\n      const assetObj = new PBRMaterial(assetConfig.name);\n      this.configProps = assetConfig.props;\n\n      for (let k in this.configProps) {\n        if (!isAsset(this.configProps[k])) {\n          assetObj[k] = this.configProps[k];\n        }\n      }\n      this._resource = assetObj;\n      this.setMeta();\n      resolve(this);\n    });\n  }\n\n  loadWithAttachedResources(\n    resourceManager: ResourceManager,\n    assetConfig: AssetConfig\n  ): Promise<LoadAttachedResourceResult> {\n    return new Promise((resolve, reject) => {\n      let loadPromise;\n      if (assetConfig.resource instanceof PBRMaterial) {\n        loadPromise = new Promise((resolve) => {\n          this._resource = assetConfig.resource;\n          this.setMeta();\n          resolve(this);\n        });\n      } else if (assetConfig.props) {\n        loadPromise = this.load(resourceManager, assetConfig);\n      } else {\n        reject(\"Load PBRMaterial Error\");\n      }\n      if (loadPromise) {\n        loadPromise.then(() => {\n          const result: any = {\n            resources: [this],\n            structure: {\n              index: 0,\n              props: {}\n            }\n          };\n\n          const material = this._resource;\n          getAllGetters(this._resource).forEach((attr) => {\n            if (!(material[attr] instanceof Texture)) return;\n            const textureResource = new TextureResource(this.resourceManager, material[attr]);\n            this.attachedResources.push(textureResource);\n            result.resources.push(textureResource);\n            result.structure.props[attr] = {\n              index: result.resources.length - 1\n            };\n          });\n          resolve(result);\n        });\n      }\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this.meta.name = this.resource.name;\n    }\n  }\n\n  getProps() {\n    const result = {};\n    const props = getAllGetters(this.resource);\n    props.forEach((prop) => (result[prop] = this.resource[prop]));\n    return result;\n  }\n\n  bind() {\n    // 替换PBR材质中的纹理\n    const resource = this._resource;\n    Object.keys(this.configProps).forEach((attr) => {\n      const value = this.configProps[attr];\n      if (isAsset(value)) {\n        const textureResource = this.resourceManager.get(value.id);\n        if (textureResource && textureResource instanceof TextureResource) {\n          resource[attr] = textureResource.resource;\n          this._attachedResources.push(textureResource);\n        } else {\n          resource[attr] = null;\n          Logger.warn(`PBRMaterialResource: ${this.meta.name} can't find asset \"${attr}\", which id is: ${value.id}`);\n        }\n      } else {\n        if (attr === \"side\") {\n          return;\n        }\n\n        resource[attr] = value;\n      }\n    });\n  }\n}\n","import { AssetType, Logger, ResourceManager } from \"@alipay/o3-core\";\nimport { Oasis } from \"../Oasis\";\nimport { AssetConfig, LoadAttachedResourceResult } from \"../types\";\nimport { PBRMaterialResource } from \"./PBRMaterialResource\";\nimport { SchemaResource } from \"./SchemaResource\";\n\nexport class GLTFResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<any> {\n    return resourceManager\n      .load<any>({ url: assetConfig.url, type: AssetType.Perfab })\n      .then((res) => {\n        const gltf = res;\n        if (assetConfig.props) {\n          gltf.newMaterial = (assetConfig.props as any).newMaterial;\n        }\n        this._resource = gltf;\n      });\n  }\n\n  loadWithAttachedResources(\n    resourceManager: ResourceManager,\n    assetConfig: AssetConfig,\n    oasis: Oasis\n  ): Promise<LoadAttachedResourceResult> {\n    return new Promise((resolve) => {\n      this.load(resourceManager, assetConfig, oasis).then(() => {\n        const gltf = this.resource;\n        const { materials } = gltf;\n        const loadPromises = [];\n        const result = {\n          resources: [this],\n          structure: {\n            index: 0,\n            props: {\n              newMaterial: []\n            }\n          }\n        };\n        for (let i = 0; i < materials.length; i++) {\n          const material = materials[i];\n\n          const materialResource = new PBRMaterialResource(this.resourceManager);\n          this._attachedResources.push(materialResource);\n          loadPromises.push(\n            materialResource.loadWithAttachedResources(resourceManager, {\n              type: \"PBRMaterial\",\n              name: material.name,\n              resource: material\n            })\n          );\n        }\n        Promise.all(loadPromises).then((res) => {\n          const newMaterial = result.structure.props.newMaterial;\n          res.forEach((mat) => {\n            const matStructure = mat.structure;\n            const matResource = mat.resources[matStructure.index];\n            result.resources.push(matResource);\n            matStructure.index = result.resources.length - 1;\n            for (const key in matStructure.props) {\n              if (matStructure.props.hasOwnProperty(key)) {\n                const textureStructure = matStructure.props[key];\n                const textureResource = mat.resources[textureStructure.index];\n                result.resources.push(textureResource);\n                textureStructure.index = result.resources.length - 1;\n              }\n            }\n            newMaterial.push(matStructure);\n          });\n          resolve(result);\n        });\n      });\n    });\n  }\n\n  setMeta(assetConfig?: AssetConfig) {\n    if (assetConfig) {\n      this.meta.name = assetConfig.name;\n    }\n  }\n\n  bind() {\n    const resource = this._resource;\n    this.bindMaterials(resource.newMaterial);\n  }\n\n  update(key: string, value: any) {\n    if (key === \"newMaterial\") {\n      this.bindMaterials(value);\n    } else {\n      this._resource[key] = value;\n    }\n  }\n\n  private bindMaterials(materials) {\n    if (!materials || !materials.length) {\n      return;\n    }\n    const gltf = this._resource;\n    const meshes = gltf.meshes;\n    // 兼容material克隆时期生成的schema\n    // 通过schema中material数量和gltf中materials数量比较\n    // 如果不相等说明是老版本，虽然不准确\n    if (materials.length !== gltf.materials.length) {\n      for (let i = 0; i < materials.length; i++) {\n        const matResource = this.resourceManager.get(materials[i].id);\n        if (matResource) {\n          gltf.materials[i] = this.resourceManager.get(materials[i].id).resource;\n        }\n      }\n      let index = 0;\n      for (let i = 0; i < meshes.length; i++) {\n        for (let j = 0; j < meshes[i].primitives.length; j++) {\n          const attachedResource = this.resourceManager.get(materials[index].id);\n          if (attachedResource) {\n            this._attachedResources.push(attachedResource);\n            meshes[i].primitives[j].material = attachedResource.resource;\n          }\n          index++;\n        }\n      }\n    } else {\n      for (let i = 0; i < materials.length; i++) {\n        const mtlResource = this.resourceManager.get(materials[i].id);\n        if (mtlResource) {\n          this._attachedResources.push(mtlResource);\n          gltf.materials[i] = mtlResource.resource;\n        } else {\n          Logger.warn(`GLTFResource: ${this.meta.name} can't find asset \"material\", which id is: ${materials[i].id}`);\n        }\n      }\n      for (let j = 0; j < meshes.length; j++) {\n        for (let k = 0; k < meshes[j].primitives.length; k++) {\n          if (meshes[j].primitives[k].materialIndex !== undefined) {\n            // 因为gltf模型中的materials是倒叙遍历的，所以这里要这么写\n            const index = gltf.materials.length - 1 - meshes[j].primitives[k].materialIndex;\n            meshes[j].primitives[k].material = gltf.materials[index];\n          }\n        }\n      }\n    }\n  }\n}\n","import { ShaderMaterial } from \"@alipay/o3-core\";\nimport { Oasis } from \"../Oasis\";\nimport { AssetConfig } from \"../types\";\nimport { SchemaResource } from \"./SchemaResource\";\ntype ShaderMaterialDefine = {\n  vertexShader: string;\n  fragmentShader: string;\n  states: object;\n  uniforms: object;\n  attributes: object;\n};\nexport class ShaderMaterialResource extends SchemaResource {\n  private scripts: Array<any>;\n\n  private loadShaderDefine(oasis?: Oasis) {\n    return new Promise((resolve) => {\n      const name = this.scripts[0].name;\n      if (this.resourceManager.isLocal) {\n        resolve(oasis.options?.scripts[name] ?? {});\n      } else {\n        const oldScriptDom = document.getElementById(name);\n        if (oldScriptDom) {\n          document.body.removeChild(oldScriptDom);\n        }\n\n        const scriptDom = document.createElement(\"script\");\n        scriptDom.crossOrigin = \"anonymous\";\n        scriptDom.onload = () => {\n          const scripts = (window as any).o3Scripts;\n          resolve((scripts && scripts[name]) ?? {});\n        };\n        scriptDom.id = name;\n        scriptDom.src = this._meta.url;\n        document.body.appendChild(scriptDom);\n      }\n    }).then((shaderMaterialDefine: ShaderMaterialDefine) => {\n      const {\n        vertexShader = \"\",\n        fragmentShader = \"\",\n        states = {},\n        uniforms = {},\n        attributes = {}\n      } = shaderMaterialDefine;\n      this._resource.uniforms = uniforms;\n      this._resource.attributes = attributes;\n      this._resource.vertexShader = vertexShader;\n      this._resource.fragmentShader = fragmentShader;\n      this._resource.renderStates = states;\n    });\n  }\n\n  private createMaterial() {\n    const material = new ShaderMaterial(this.meta.name || \"shader_mtl\");\n    this._resource = material;\n  }\n\n  load(resourceLoader: any, assetConfig: AssetConfig, oasis: Oasis): Promise<ShaderMaterialResource> {\n    this.setMeta(assetConfig);\n    this.scripts = assetConfig.props.scripts;\n    this.createMaterial();\n\n    return this.loadShaderDefine(oasis).then(\n      () =>\n        new Promise((resolve, reject) => {\n          try {\n            for (let k in assetConfig.props) {\n              this._resource[k] = assetConfig.props[k];\n            }\n            this._resource.updateTechnique();\n            resolve(this);\n          } catch {\n            reject(\"[shader material] createTechnique error\");\n          }\n        })\n    );\n  }\n\n  setMeta(assetConfig?: AssetConfig) {\n    if (assetConfig) {\n      this._meta.name = assetConfig.name;\n      this._meta.url = assetConfig.url;\n      this._meta.source = assetConfig.source;\n    }\n  }\n\n  updateMeta(key: string, value: any) {\n    super.updateMeta(key, value);\n    if (key === \"url\") {\n      this.loadShaderDefine().then(() => {\n        try {\n          this._resource.updateTechnique();\n        } catch {\n          console.error(\"[shader material] createTechnique error\");\n        }\n      });\n    }\n  }\n\n  update(key: string, value: any) {\n    this._resource[key] = value;\n    this._resource.updateTechnique();\n  }\n}\n","import { SchemaResource } from \"./SchemaResource\";\nimport { AssetConfig } from \"../types\";\nimport { Oasis } from \"../Oasis\";\nimport { Parser } from \"../Parser\";\n\nexport const scriptAbility = {};\nexport function script(name: string) {\n  return (target: any) => {\n    scriptAbility[name] = target;\n  };\n}\nexport class ScriptResource extends SchemaResource {\n  private isInit = false;\n\n  private initScriptContext() {\n    if (this.isInit) {\n      return;\n    }\n    this.isInit = true;\n    (window as any).__o3_script_context__ = {\n      o3: Parser._components[\"o3\"],\n      script: (name: string) => {\n        return (target: any) => {\n          scriptAbility[name] = target;\n        };\n      }\n    };\n  }\n\n  load(resourceLoader, assetConfig: AssetConfig, oasis: Oasis): Promise<ScriptResource> {\n    this.initScriptContext();\n    return new Promise((resolve) => {\n      const config = assetConfig as any;\n      const scripts = config.props.scripts;\n\n      if (!this.resourceManager.isLocal) {\n        const scriptDom = document.createElement(\"script\");\n        scriptDom.crossOrigin = \"anonymous\";\n        this.setMeta(assetConfig);\n        scriptDom.onload = () => {\n          const o3Scripts = (window as any).o3Scripts;\n          for (let i = 0; i < scripts.length; i++) {\n            const name = scripts[i].name;\n            this._resource = o3Scripts && o3Scripts[name];\n            scriptAbility[name] = this._resource;\n          }\n          resolve(this);\n        };\n        scriptDom.src = assetConfig.url;\n        document.body.appendChild(scriptDom);\n      } else {\n        for (let i = 0; i < scripts.length; i++) {\n          const name = scripts[i].name;\n          scriptAbility[name] = oasis.options?.scripts[name];\n        }\n        resolve(this);\n      }\n    });\n  }\n\n  setMeta(assetConfig?: AssetConfig) {\n    if (assetConfig) {\n      this._meta.name = assetConfig.name;\n      this._meta.url = assetConfig.url;\n      this._meta.source = assetConfig.source;\n    }\n  }\n}\n","import { BlinnPhongMaterial, ResourceManager } from \"@alipay/o3-core\";\nimport { AssetConfig } from \"../types\";\nimport { SchemaResource } from \"./SchemaResource\";\n\nexport class BlinnPhongMaterialResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig): Promise<BlinnPhongMaterialResource> {\n    return new Promise((resolve) => {\n      const assetObj = new BlinnPhongMaterial(assetConfig.name);\n      for (let k in assetConfig.props) {\n        assetObj[k] = assetConfig.props[k];\n      }\n      this._resource = assetObj;\n      this.setMeta();\n      resolve(this);\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this.meta.name = this.resource.name;\n    }\n  }\n}\n","import { AssetType, GLCapabilityType, ResourceManager } from \"@alipay/o3-core\";\nimport { Oasis } from \"../Oasis\";\nimport { AssetConfig } from \"../types\";\nimport { compressedTextureLoadOrder } from \"../utils\";\nimport { SchemaResource } from \"./SchemaResource\";\n\nconst imageOrderMap = {\n  px: 0,\n  nx: 1,\n  py: 2,\n  ny: 3,\n  pz: 4,\n  nz: 5\n};\n\nexport class TextureCubeMapResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<TextureCubeMapResource> {\n    return new Promise((resolve, reject) => {\n      const imageUrls = [];\n      let type = AssetType.TextureCube;\n      if (this.resourceManager.useCompressedTexture && assetConfig?.props?.compression?.compressions.length) {\n        const rhi = oasis.engine._hardwareRenderer;\n        const compressions = assetConfig.props.compression.compressions;\n        compressions.sort((a: any, b: any) => {\n          return compressedTextureLoadOrder[a.type] - compressedTextureLoadOrder[b.type];\n        });\n        for (let i = 0; i < compressions.length; i++) {\n          const compression = compressions[i];\n          if (compression.container === \"ktx\" && rhi.canIUse(GLCapabilityType[compression.type])) {\n            for (const key in compression.files) {\n              if (compression.files.hasOwnProperty(key)) {\n                const image = compression.files[key];\n                imageUrls[imageOrderMap[key]] = image.url;\n              }\n            }\n            console.warn(compression.type);\n            type = AssetType.KTXCube;\n            break;\n          }\n        }\n      }\n\n      if (type === AssetType.TextureCube) {\n        for (const key in assetConfig.props.images) {\n          if (assetConfig.props.images.hasOwnProperty(key)) {\n            const image = assetConfig.props.images[key];\n            imageUrls[imageOrderMap[key]] = image.url;\n          }\n        }\n      }\n\n      resourceManager\n        .load({\n          urls: imageUrls,\n          type: type\n        })\n        .then((res) => {\n          this._resource = res;\n          resolve(this);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this.meta.name = this.resource.name;\n    }\n  }\n}\n","import { SchemaResource } from \"./SchemaResource\";\nimport { AssetConfig } from \"../types\";\n\nexport class BaseResource extends SchemaResource {\n  load(resourceLoader, assetConfig: AssetConfig): Promise<BaseResource> {\n    return new Promise((resolve) => {\n      this._resource = assetConfig;\n      this.setMetaData(\"name\", this.resource.name);\n      this.setMetaData(\"url\", this.resource.url);\n      resolve(this);\n    });\n  }\n\n  setMetaData(key, value) {\n    this._meta[key] = value;\n  }\n}\n","import { Component, Logger } from \"@alipay/o3-core\";\nimport { Oasis } from \"./Oasis\";\nimport { Parser } from \"./Parser\";\nimport { pluginHook } from \"./plugins/PluginManager\";\nimport { scriptAbility } from \"./resources\";\nimport { AbilityConfig, Props } from \"./types\";\nimport { switchElementsIndex } from \"./utils\";\n\nexport class AbilityManager {\n  private abilityMap: { [id: string]: Component } = {};\n\n  constructor(private oasis: Oasis) {}\n\n  @pluginHook({ after: \"abilityAdded\", before: \"beforeAbilityAdded\" })\n  public add(abilityConfig: AbilityConfig) {\n    const { type, node: nodeId, props, id, index } = abilityConfig;\n\n    const node = this.oasis.nodeManager.get(nodeId);\n    const AbilityConstructor = this.getCompConstructor(type);\n    if (!AbilityConstructor) {\n      Logger.error(`${type} abiltiy is not defined`);\n      return;\n    }\n    const abilityProps = this.mixPropsToExplicitProps(props);\n    // if (AbilityConstructor === Camera) {\n    //   abilityProps.SceneRenderer = o3.BasicRenderPipeline;\n    // }\n    const ability = node.addComponent(AbilityConstructor, abilityProps);\n    const { enabled } = abilityProps;\n    if (enabled !== undefined) {\n      ability.enabled = enabled;\n    }\n\n    for (let k in abilityProps) {\n      if (abilityProps[k] !== null) {\n        ability[k] = abilityProps[k];\n      }\n    }\n\n    //@ts-ignore\n    const abilityArray = node._components;\n    const currentIndex = abilityArray.length - 1;\n    switchElementsIndex(abilityArray, currentIndex, index);\n    (ability as any).id = id;\n    this.abilityMap[id] = ability;\n    return ability;\n  }\n\n  @pluginHook({ before: \"beforeAbilityUpdated\", after: \"abilityUpdated\" })\n  public update(id: string, key: string, value: any) {\n    if (value && this.checkIsAsset(value)) {\n      this.get(id)[key] = this.oasis.resourceManager.get(value.id).resource;\n    } else {\n      this.get(id)[key] = value;\n    }\n    return { id, key, value };\n  }\n\n  public get(id: string): Component {\n    return this.abilityMap[id];\n  }\n\n  @pluginHook({ after: \"abilityDeleted\", before: \"beforeAbilityDeleted\" })\n  public delete(id: string) {\n    const ability = this.abilityMap[id];\n    ability.destroy();\n    delete this.abilityMap[id];\n    return id;\n  }\n\n  private getCompConstructor(type: string) {\n    const splits = type.split(\".\");\n    // script\n    if (splits[0] === \"script\") {\n      return scriptAbility[splits[1]];\n    }\n\n    const constructor = Parser._components[\"o3\"][type];\n    if (!constructor) {\n      throw new Error(`${type} is not defined`);\n    }\n    return constructor;\n  }\n\n  private mixPropsToExplicitProps(props: Props) {\n    const explicitProps = { ...props };\n    for (let k in props) {\n      const prop = props[k];\n      if (prop && this.checkIsAsset(prop)) {\n        const res = this.oasis.resourceManager.get(prop.id);\n        if (res) {\n          explicitProps[k] = res.resource;\n        } else {\n          explicitProps[k] = null;\n          Logger.warn(`AbilityManager: can't get asset \"${k}\", which id is ${prop.id}`);\n        }\n      }\n    }\n    return explicitProps;\n  }\n\n  private checkIsAsset(prop: any): boolean {\n    return prop.type === \"asset\";\n  }\n}\n","import { Entity } from \"@alipay/o3-core\";\nimport { Vector3 } from \"@alipay/o3-math\";\nimport { Oasis } from \"./Oasis\";\nimport { pluginHook } from \"./plugins/PluginManager\";\nimport { NodeConfig } from \"./types\";\nimport { switchElementsIndex } from \"./utils\";\n\nexport class NodeManager {\n  private nodeMap: { [id: string]: Entity } = {};\n  private readonly root: Entity;\n\n  constructor(private oasis: Oasis) {\n    this.root = new Entity(\"root\", this.oasis.engine);\n    this.oasis.engine.sceneManager.activeScene.addRootEntity(this.root);\n  }\n\n  @pluginHook({ after: \"nodeAdded\" })\n  public add(nodeConfig: NodeConfig) {\n    this.create(nodeConfig);\n    this.append(nodeConfig.id, nodeConfig.parent, nodeConfig.index);\n    return this.get(nodeConfig.id);\n  }\n\n  @pluginHook({ before: \"beforeNodeUpdated\", after: \"nodeUpdated\" })\n  public update(id: string, key: string, value: any) {\n    this.get(id)[key] = value;\n    return { id, key, value };\n  }\n\n  public get(id: string): Entity {\n    return this.nodeMap[id];\n  }\n\n  public reset() {\n    this.nodeMap = {};\n  }\n\n  @pluginHook({ before: \"beforeNodeDeleted\" })\n  public delete(id: string) {\n    this.nodeMap[id].destroy();\n    delete this.nodeMap[id];\n  }\n\n  /**\n   * 创建节点\n   * @param nodeConfig\n   */\n  private create(nodeConfig: NodeConfig): Entity {\n    const { isActive, position, rotation, scale, id, name } = nodeConfig;\n    const entity = new Entity(name, this.oasis.engine);\n    entity.isActive = isActive;\n    entity.transform.position = new Vector3(position[0], position[1], position[2]);\n    entity.transform.rotation = new Vector3(rotation[0], rotation[1], rotation[2]);\n    entity.transform.scale = new Vector3(scale[0], scale[1], scale[2]);\n    (entity as any).id = id;\n    this.nodeMap[id] = entity;\n    return entity;\n  }\n\n  /**\n   * append 节点到 parent\n   * @param childId\n   * @param parentId\n   * @param index\n   */\n  private append(childId: string, parentId: string, index: number) {\n    const child = this.nodeMap[childId];\n    const parent = this.nodeMap[parentId] || this.root;\n    parent.addChild(child);\n    //@ts-ignore\n    const children = parent._children;\n    const currentIndex = children.length - 1;\n    switchElementsIndex(children, currentIndex, index);\n  }\n}\n","import { ResourceManager } from \"@alipay/o3-core\";\nimport { Oasis } from \"./Oasis\";\nimport { pluginHook } from \"./plugins/PluginManager\";\nimport {\n  BaseResource,\n  BlinnPhongMaterialResource,\n  GLTFResource,\n  PBRMaterialResource,\n  SchemaResource,\n  ScriptResource,\n  ShaderMaterialResource,\n  TextureCubeMapResource,\n  TextureResource\n} from \"./resources\";\nimport { AssetConfig } from \"./types\";\n\nexport const RESOURCE_CLASS = {\n  script: ScriptResource,\n  gltf: GLTFResource,\n  texture: TextureResource,\n  // 'image': TextureResource,\n  cubeTexture: TextureCubeMapResource,\n  PBRMaterial: PBRMaterialResource,\n  PBRSpecularMaterial: PBRMaterialResource,\n  unlitMaterial: PBRMaterialResource,\n  ShaderMaterial: ShaderMaterialResource,\n  BlinnPhongMaterial: BlinnPhongMaterialResource,\n  // Animation: Animation,\n  base: BaseResource\n};\n\nconst RESOURCE_TYPE: Map<SchemaResource, string> = new Map();\nfor (const key in RESOURCE_CLASS) {\n  if (RESOURCE_CLASS.hasOwnProperty(key)) {\n    const element = RESOURCE_CLASS[key];\n\n    // TODO：材质模块待重构，默认设置成 PBRMaterial\n    if (element === PBRMaterialResource) {\n      RESOURCE_TYPE.set(element, \"PBRMaterial\");\n    } else {\n      RESOURCE_TYPE.set(element, key);\n    }\n  }\n}\n\nconst resourceFactory = {\n  createResource(resourceManager: SchemaResourceManager, type: string): SchemaResource {\n    return new RESOURCE_CLASS[type](resourceManager);\n  }\n};\n\nexport function registerResource(type: string, resource: any) {\n  if (!RESOURCE_CLASS.hasOwnProperty(type)) {\n    RESOURCE_CLASS[type] = resource;\n    RESOURCE_TYPE.set(resource, type);\n  }\n}\n\nexport class SchemaResourceManager {\n  private resourceMap: { [id: string]: SchemaResource } = {};\n  private resourceIdMap: WeakMap<SchemaResource, string> = new WeakMap();\n  private maxId = 0;\n  private readonly engineResourceManager: ResourceManager;\n\n  constructor(private oasis: Oasis) {\n    this.engineResourceManager = this.oasis.engine.resourceManager;\n  }\n\n  // 从schema中加载资源\n  load(asset: AssetConfig): Promise<SchemaResource> {\n    const resource = resourceFactory.createResource(this, asset.type);\n    //TODO 脏代码\n    const loadPromise = resource.load(this.oasis.engine.resourceManager, asset, this.oasis);\n    this.maxId = Math.max(+asset.id, this.maxId);\n    loadPromise.then(() => {\n      this.resourceMap[asset.id] = resource;\n      this.resourceIdMap.set(resource, asset.id);\n    });\n    return loadPromise;\n  }\n\n  // 新增资源\n  add(asset: AssetConfig): Promise<any> {\n    const resource = resourceFactory.createResource(this, asset.type);\n    return new Promise((resolve) => {\n      //TODO 脏代码\n      resource.loadWithAttachedResources(this.oasis.engine.resourceManager, asset, this.oasis).then((result) => {\n        resolve(this.getAddResourceResult(result.resources, result.structure));\n      });\n    });\n  }\n\n  @pluginHook({ before: \"beforeResourceRemove\" })\n  remove(id: string): Promise<Array<string>> {\n    return new Promise((resolve) => {\n      const resource = this.resourceMap[id];\n      const result = [id];\n      let hasAttachedResource = false;\n      delete this.resourceMap[id];\n      if (resource) {\n        const attached = resource.attachedResources;\n        for (let index = 0; index < attached.length; index++) {\n          const attachedResource = attached[index];\n          const attachedResourceId = this.resourceIdMap.get(attachedResource);\n          if (attachedResourceId) {\n            hasAttachedResource = true;\n            this.remove(attachedResourceId).then((attachedResourceRemoveResult) => {\n              result.push(...attachedResourceRemoveResult);\n              resolve(result);\n            });\n          }\n        }\n      }\n      if (!hasAttachedResource) {\n        resolve(result);\n      }\n    });\n  }\n\n  @pluginHook({ after: \"resourceUpdated\", before: \"beforeResourceUpdate\" })\n  update(id: string, key: string, value: any) {\n    const resource = this.get(id);\n    if (resource) {\n      resource.update(key, value);\n    }\n    return {\n      resource,\n      id,\n      key,\n      value\n    };\n  }\n\n  updateMeta(id: string, key: string, value: any) {\n    const resource = this.get(id);\n    if (resource) {\n      resource.updateMeta(key, value);\n    }\n  }\n\n  get(id: string): SchemaResource {\n    return this.resourceMap[id];\n  }\n\n  getAll(): Array<SchemaResource> {\n    return Object.values(this.resourceMap);\n  }\n\n  private getAddResourceResult(resources, structure) {\n    const addResourceResult: any = {};\n    const resource = resources[structure.index];\n    const id = `${++this.maxId}`;\n    this.resourceMap[id] = resource;\n    this.resourceIdMap.set(resource, id);\n\n    addResourceResult.id = this.maxId;\n    addResourceResult.type = RESOURCE_TYPE.get(resource.constructor);\n    addResourceResult.meta = resource.meta;\n    addResourceResult.props = {};\n    for (const key in structure.props) {\n      if (structure.props.hasOwnProperty(key)) {\n        const element = structure.props[key];\n        if (element) {\n          if (Array.isArray(element)) {\n            addResourceResult.props[key] = element.map((child) => this.getAddResourceResult(resources, child));\n          } else {\n            addResourceResult.props[key] = this.getAddResourceResult(resources, element);\n          }\n        }\n      }\n    }\n    return addResourceResult;\n  }\n\n  get isLocal(): boolean {\n    return this.oasis.options.local;\n  }\n\n  get useCompressedTexture(): boolean {\n    return this.oasis.options.useCompressedTexture ?? true;\n  }\n}\n","import { Engine, EventDispatcher } from \"@alipay/o3-core\";\nimport { AbilityManager } from \"./AbilityManager\";\nimport { NodeManager } from \"./NodeManager\";\nimport { pluginHook, PluginManager } from \"./plugins/PluginManager\";\nimport { RESOURCE_CLASS, SchemaResourceManager } from \"./ResourceManager\";\nimport { Options, Schema } from \"./types\";\n\nexport class Oasis extends EventDispatcher {\n  public readonly engine: Engine = null;\n  public readonly nodeManager: NodeManager;\n  public readonly abilityManager: AbilityManager;\n  public resourceManager: SchemaResourceManager;\n  public _canvas: HTMLCanvasElement;\n  private schema: Schema;\n  public timeout: number; // 全局资源超时配置\n  // hook 重点\n  private oasis = this;\n\n  private constructor(private _options: Options, public readonly pluginManager: PluginManager) {\n    super();\n    this.engine = _options.engine;\n    this.resetFeature();\n    this.schema = _options.config;\n    this.timeout = _options.timeout;\n    _options.scripts = _options.scripts ?? {};\n    this.nodeManager = new NodeManager(this);\n    this.abilityManager = new AbilityManager(this);\n    this.nodeManager.add = this.nodeManager.add.bind(this.nodeManager);\n    this.abilityManager.add = this.abilityManager.add.bind(this.abilityManager);\n    this.resourceManager = new SchemaResourceManager(this);\n    if (_options.fps) {\n      this.engine.targetFrameRate = _options.fps;\n      this.engine.vSyncCount = 0;\n    }\n  }\n\n  public get canvas(): HTMLCanvasElement {\n    return this._options.canvas;\n  }\n\n  public get options(): Readonly<Options> {\n    return this._options;\n  }\n\n  public updateConfig(config: Schema): void {\n    this.schema = config;\n\n    this.init();\n  }\n\n  @pluginHook({ after: \"schemaParsed\" })\n  private init(): Promise<any> {\n    this.pluginManager.boot(this);\n\n    return this.loadResources().then(() => {\n      this.bindResources();\n      this.parseNodes();\n      this.parseNodeAbilities();\n      // TODO 临时使用 用于运行时asset把id转化为各种实例\n      this.attach();\n    });\n  }\n\n  /**\n   * 加载资源\n   */\n  private loadResources(): Promise<any> {\n    const { assets = {} } = this.schema;\n\n    const loadingPromises = Object.values(assets)\n      .filter((asset) => {\n        if (RESOURCE_CLASS[asset.type]) {\n          return true;\n        }\n        console.warn(`${asset.type} loader is not defined. the ${asset.type} type will be ignored.`);\n        return false;\n      })\n      .map((asset) => this.resourceManager.load(asset));\n\n    return Promise.all(loadingPromises);\n  }\n\n  /**\n   * 资源绑定\n   */\n  private bindResources() {\n    this.resourceManager.getAll().forEach((resource) => {\n      resource.bind();\n    });\n  }\n\n  /**\n   * 解析 nodes\n   */\n  private parseNodes(): void {\n    const { nodes } = this.schema;\n    const indices = this.bfsNodes();\n    indices.map((index) => nodes[index]).forEach(this.nodeManager.add);\n  }\n\n  /**\n   * 解析 Component\n   */\n  private parseNodeAbilities(): void {\n    const { abilities } = this.schema;\n    Object.keys(abilities)\n      .map((id) => ({ id, ...abilities[id] }))\n      .forEach(this.abilityManager.add);\n  }\n\n  /**\n   * 广度优先遍历，对 nodes 进行排序\n   */\n  private bfsNodes(): number[] {\n    const { nodes } = this.schema;\n    const roots = Object.values(nodes)\n      .filter((node) => !nodes[node.parent])\n      .map((node) => node.id);\n\n    let result = [];\n    const traverseChildren = (roots: string[]) => {\n      result = result.concat(roots);\n      roots.forEach((id) => {\n        const children = nodes[id].children;\n        children && traverseChildren(children);\n      });\n    };\n    traverseChildren(roots);\n    return result;\n  }\n\n  /**\n   * 重置 Feature\n   */\n  private resetFeature() {\n    // TODO 脏代码，delete\n    const scene = this.engine.sceneManager.activeScene;\n    scene.features.splice(2, 1);\n    scene.features.splice(3, 1);\n    (scene as any).hasFogFeature = undefined;\n    (scene as any).getFogMacro = undefined;\n    (scene as any).bindFogToMaterial = undefined;\n  }\n  private attach() {\n    this.resourceManager.getAll().forEach((resource) => {\n      resource.attach();\n    });\n  }\n\n  static create(options: Options, pluginManager: PluginManager): Promise<Oasis> {\n    const oasis = new Oasis(options, pluginManager);\n    return oasis.init().then(() => {\n      options.autoPlay && oasis.engine.run();\n      return oasis;\n    });\n  }\n}\n","import { Vector2, Vector3, Vector4 } from \"@alipay/o3-math\";\n\n// TODO  临时方案 用来将编辑器中用的数组转为引擎需要的数据类型，而不修改编辑器本身逻辑\nconst _vec3Attribute = [\n  \"color\",\n  \"center\",\n  \"size\",\n  \"__position\",\n  \"__positionRandomness\",\n  \"__color\",\n  \"__velocity\",\n  \"__velocityRandomness\",\n  \"__acceleration\",\n  \"__accelerationRandomness\",\n  \"_center\"\n];\n\n/**\n * 临时兼容到 v2 的 schema 数据\n * @param config\n */\nexport function compatibleToV2(config) {\n  const { abilities = {}, assets = {} } = config;\n  const ids = Object.keys(abilities);\n  const assetKeys = Object.keys(assets);\n\n  for (let i = 0, l = ids.length; i < l; ++i) {\n    handleProps(abilities[ids[i]].props);\n  }\n\n  for (let i = 0, l = assetKeys.length; i < l; ++i) {\n    handleAssets(assets[assetKeys[i]].props);\n  }\n\n  return config;\n}\n\n// TODO 临时方案\nfunction handleProps(props) {\n  const keys = Object.keys(props);\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const k = keys[i];\n    const v = props[k];\n\n    if (v !== null && typeof v === \"object\" && v.length > 1) {\n      if (k === \"backgroundColor\" || k === \"tintColor\") {\n        props[k] = new Vector4(v[0], v[1], v[2], v[3]);\n      } else if (_vec3Attribute.indexOf(k) !== -1) {\n        props[k] = new Vector3(v[0], v[1], v[2]);\n      }\n    }\n  }\n}\n\nfunction handleAssets(props: any = {}) {\n  if (!props) {\n    return;\n  }\n  const keys = Object.keys(props);\n  for (let i = 0, l = keys.length; i < l; i++) {\n    const key = keys[i];\n    const value = props[key];\n    if (key === \"newMaterial\" || key === \"blendFuncSeparate\" || key === \"scripts\") {\n      continue;\n    }\n    switch (value?.length) {\n      case 2:\n        props[key] = new Vector2(value[0], value[1]);\n        break;\n      case 3:\n        props[key] = new Vector3(value[0], value[1], value[2]);\n        break;\n      case 4:\n        props[key] = new Vector4(value[0], value[1], value[2], value[3]);\n        break;\n    }\n  }\n}\n","import { Component } from \"@alipay/o3-core\";\nimport { Oasis } from \"./Oasis\";\nimport { Plugin } from \"./plugins/Plugin\";\nimport { PluginManager } from \"./plugins/PluginManager\";\nimport { Options } from \"./types\";\nimport { compatibleToV2 } from \"./temp.compatible\";\n\nconst CURRENT_SCHEMA_VERSION = 3;\n\nexport class Parser {\n  private pluginManager: PluginManager = new PluginManager();\n  public parse(options: Options): Promise<Oasis> {\n    if (options?.config?.version !== CURRENT_SCHEMA_VERSION) {\n      console.warn(\n        `schema-parser: schema version \"${options?.config?.version}\" is out of date, please re-pull the latest version (version ${CURRENT_SCHEMA_VERSION}) of the schema`\n      );\n    }\n    compatibleToV2(options.config);\n    return Oasis.create(options, this.pluginManager);\n  }\n\n  register(plugin: Plugin) {\n    this.pluginManager.register(plugin);\n  }\n\n  resetPlugins() {\n    this.pluginManager.reset();\n  }\n\n  private constructor() {}\n\n  static create(): Parser {\n    const parser = new Parser();\n    return parser;\n  }\n\n  /** @internal */\n  public static _components: { [namespace: string]: { [compName: string]: Component } } = {};\n  /**\n   * 注册解析组件\n   * @param namespace 命名空间\n   * @param components 组件\n   */\n  static registerComponents(namespace: string, components: { [key: string]: any }) {\n    if (!this._components[namespace]) {\n      this._components[namespace] = {};\n    }\n    Object.assign(this._components[namespace], components);\n  }\n}\n\nexport const parser = Parser.create();\n"],"names":["isBase64","url","test","BufferLoader","resourceLoader","AssetType","Buffer","item","AssetPromise","resolve","base64Str","slice","RegExp","$1","length","result","Uint8Array","from","atob","c","charCodeAt","buffer","request","type","Loader","WEBGL_COMPONENT_TYPES","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","decodeText","array","TextDecoder","decode","s","i","il","String","fromCharCode","decodeURIComponent","encodeURIComponent","findByKeyValue","obj","key","value","name","getAccessorTypeSize","accessorType","ACCESSOR_TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","getComponentType","componentType","getAccessorData","gltf","accessor","buffers","bufferView","bufferViews","arrayBuffer","accessorByteOffset","hasOwnProperty","byteOffset","bufferViewByteOffset","accessorTypeSize","count","byteStride","arrayType","uint8Array","BYTES_PER_ELEMENT","originalBufferView","byteLength","viewAccessor","accessorByteSize","j","getBufferData","getVertexStride","size","createVertexElement","semantic","index","VertexElement","getElementFormat","getIndexFormat","DataType","UNSIGNED_BYTE","IndexFormat","UInt8","UNSIGNED_SHORT","UInt16","UNSIGNED_INT","UInt32","FLOAT","VertexElementFormat","Single","Vector2","Vector3","Vector4","UShort2","UShort4","loadImageBuffer","imageBuffer","Promise","reject","blob","window","Blob","img","Image","src","URL","createObjectURL","crossOrigin","onerror","Error","onload","isAbsoluteUrl","parseRelativeUrl","baseUrl","relativeUrl","substring","lastIndexOf","decoder","glTFDracoMeshCompression","init","DRACODecoder","parse","extension","primitive","gltfPrimitive","accessors","bufferViewIndex","gltfAttributeMap","attributes","attributeMap","attributeTypeMap","attributeName","undefined","accessorDef","indexAccessor","indices","indexType","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","then","geometry","h","attribute","accessorIdx","vertexBuffers","push","vertexAttributes","positionAccessorIdx","POSITION","positionAccessor","vertexCount","indexCount","indexOffset","indexBuffer","TARGET_PATH_MAP","translation","rotation","scale","weights","nodeCount","RegistedObjs","RegistedCustomMaterials","getDefaultMaterial","defaultMateril","ConstantMaterial","emission","HandledExtensions","PBRMaterial","KHR_lights","KHR_materials_unlit","KHR_materials_pbrSpecularGlossiness","KHR_techniques_webgl","KHR_draco_mesh_compression","extensionParsers","Material","RegistExtension","extobj","Object","keys","forEach","isPrototypeOf","TECH_NAME","GLTFResource","defaultSceneRoot","defaultScene","scenes","textures","animations","materials","meshes","skins","EngineObject","parseGLTF","data","engine","resources","asset","version","Number","isGltf2","parseExtensions","parseResources","parseMaterial","parseMesh","parseNode","parseScene","parseSkin","parseAnimation","buildSceneGraph","extensions","extensionsUsed","extensionsRequired","Logger","info","indexOf","warn","error","lights","parseLights","handler","entities","debug","promises","all","results","gltfMaterial","material","technique","uniformObj","stateObj","pbrMetallicRoughness","normalTexture","emissiveTexture","emissiveFactor","occlusionTexture","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","getItemByIdx","texCoord","normalScale","strength","occlusionStrength","unlit","diffuseFactor","diffuseTexture","specularFactor","glossinessFactor","specularGlossinessTexture","isMetallicWorkflow","srgb","gamma","blendFunc","depthMask","MATERIAL_NAME","techniqueName","MaterialType","paramName","values","uniform","uniforms","SAMPLER_2D","textureIndex","Util","isArray","texture","setValue","gltfSkin","jointCount","joints","skin","Skin","inverseBindMatrices","MAT4_LENGTH","startIdx","endIdx","Matrix","subarray","node","skeleton","parsePrimitiveVertex","mesh","attributeSemantic","stride","vertexELement","addVertexElements","bufferData","vertexBuffer","VertexBuffer","BufferUsage","Static","setData","setVertexBufferBindings","VertexBufferBinding","position","bounds","min","max","offset","indexData","indexFormat","indexByteSize","IndexBuffer","setIndexBufferBinding","drawOffset","drawCount","parsePrimitiveMaterial","constructor","DISABLE_SHARE","clone","materialIndex","gltfMesh","Mesh","assetType","primitivePromises","primitives","Primitive","primitiveTopology","mode","PrimitiveTopology","Triangles","targets","Array","fill","vertexPromise","extensionParser","processedPrimitive","parserPrimitiveTarget","e","gltfAnimation","gltfSamplers","samplers","gltfChannels","channels","animationIdx","animationClip","AnimationClip","duration","durationIndex","gltfSampler","inputAccessor","input","outputAccessor","output","outputAccessorSize","samplerInterpolation","InterpolationType","LINEAR","interpolation","CUBICSPLINE","STEP","maxTime","addSampler","gltfChannel","target","samplerIndex","sampler","targetNode","targetPath","path","addChannel","gltfNode","entity","Entity","m","matrix","mat","setValueByArray","pos","rot","Quaternion","decompose","mapKey","arr","len","lightIdx","light","addComponent","ability","props","gltfScene","sceneNodes","nodes","idx","inverse","itemIdx","gltfNodes","scene","children","childNode","addChild","SkinnedMeshRenderer","MeshRenderer","rootNode","animator","Animation","clip","addAnimationClip","parseGLB","glb","UINT32_LENGTH","GLB_HEADER_MAGIC","GLB_HEADER_LENGTH","GLB_CHUNK_TYPES","JSON","BIN","dataView","DataView","header","magic","getUint32","console","toString","chunkLength","chunkType","glTFData","currentOffset","GLTFLoader","Perfab","requestGLTF","resourceManager","res","_loadGLTFResources","requestGLB","_loadImages","images","map","uri","mimeType","load","Texture2D","image","tex","width","height","setImageSource","generateMipmaps","requestGLTFResource","isGLB","_loadBuffers","ArrayBuffer","JSONLoader","HEADER_LEN","COMPRESSED_2D","getMipmaps","ktxContainer","loadMipmaps","mipmaps","dataOffset","bytesOfKeyValueData","pixelWidth","pixelHeight","mipmapCount","numberOfMipmapLevels","level","imageSize","Int32Array","face","numberOfFaces","byteArray","Math","isValid","identifier","getEngineFormat","internalFormat","GLCompressedTextureInternalFormat","RGB_S3TC_DXT1_EXT","TextureFormat","DXT1","RGBA_S3TC_DXT5_EXT","DXT5","RGB_ETC1_WEBGL","ETC1_RGB","RGB8_ETC2","ETC2_RGB","RGB8_PUNCHTHROUGH_ALPHA1_ETC2","ETC2_RGBA5","RGBA8_ETC2_EAC","ETC2_RGBA8","RGB_PVRTC_2BPPV1_IMG","PVRTC_RGB2","RGBA_PVRTC_2BPPV1_IMG","PVRTC_RGBA2","RGB_PVRTC_4BPPV1_IMG","PVRTC_RGB4","RGBA_PVRTC_4BPPV1_IMG","PVRTC_RGBA4","RGBA_ASTC_4X4_KHR","ASTC_4x4","RGBA_ASTC_5X5_KHR","ASTC_5x5","RGBA_ASTC_6X6_KHR","ASTC_6x6","RGBA_ASTC_8X8_KHR","ASTC_8x8","RGBA_ASTC_10X10_KHR","ASTC_10x10","RGBA_ASTC_12X12_KHR","ASTC_12x12","formatName","khronosTextureContainerParser","facesExpected","withMipmaps","mapEngineFormat","dataSize","headerDataView","endianness","littleEndian","parsedResult","glType","glTypeSize","glFormat","glInternalFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","loadType","engineFormat","parseSingleKTX","ktx","parseCubeKTX","dataArray","mipmapsFaces","KTXCubeLoader","KTXCube","urls","parsedData","mipmap","TextureCubeMap","miplevel","setPixelBuffer","TextureCubeFace","PositiveX","KTXLoader","KTX","bin","Texture2DLoader","_glTexture","TextureCubeLoader","TextureCube","faceIndex","GLTFModel","_asset","GLTFNode","_hasBuiltNode","clearChildren","destroy","_animator","getComponent","_autoPlay","playAnimationClip","wrapMode","_loop","stop","autoPlay","animationsNames","loop","isClone","rootName","_props","gltfRootName","findByName","Date","now","createChild","addEventListener","isActive","Component","PluginManager","registeredPlugins","Set","plugins","plugin","add","oasis","clear","delegateMethod","args","pluginHook","options","propertyName","descriptor","method","before","pluginManager","apply","arguments","returnObj","after","switchElementsIndex","elements","currentIndex","targetIndex","isAsset","config","getAllGetters","prototype","getPrototypeOf","prototype_property_descriptors","getOwnPropertyDescriptors","entries","property","get","compressedTextureLoadOrder","astc","s3tc","pvrtc","etc","etc1","SchemaResource","_resource","_meta","_attachedResources","setMeta","assetConfig","structure","resource","id","meta","TextureResource","useCompressedTexture","compression","compressions","rhi","_hardwareRenderer","sort","a","b","container","canIUse","GLCapabilityType","PBRMaterialResource","configProps","assetObj","k","loadPromise","attr","Texture","textureResource","attachedResources","prop","newMaterial","loadPromises","materialResource","loadWithAttachedResources","matStructure","matResource","textureStructure","bindMaterials","attachedResource","mtlResource","ShaderMaterialResource","scripts","isLocal","oldScriptDom","document","getElementById","body","removeChild","scriptDom","createElement","o3Scripts","appendChild","shaderMaterialDefine","vertexShader","fragmentShader","states","renderStates","ShaderMaterial","createMaterial","loadShaderDefine","updateTechnique","source","scriptAbility","script","ScriptResource","isInit","__o3_script_context__","o3","Parser","_components","initScriptContext","BlinnPhongMaterialResource","BlinnPhongMaterial","imageOrderMap","px","nx","py","ny","pz","nz","TextureCubeMapResource","imageUrls","files","BaseResource","setMetaData","AbilityManager","abilityMap","abilityConfig","nodeId","nodeManager","AbilityConstructor","getCompConstructor","abilityProps","mixPropsToExplicitProps","enabled","abilityArray","checkIsAsset","splits","split","explicitProps","NodeManager","nodeMap","root","sceneManager","activeScene","addRootEntity","nodeConfig","create","append","parent","transform","childId","parentId","child","_children","RESOURCE_CLASS","cubeTexture","PBRSpecularMaterial","unlitMaterial","base","RESOURCE_TYPE","Map","element","set","resourceFactory","createResource","registerResource","SchemaResourceManager","resourceMap","resourceIdMap","WeakMap","maxId","engineResourceManager","getAddResourceResult","hasAttachedResource","attached","attachedResourceId","remove","attachedResourceRemoveResult","update","updateMeta","addResourceResult","local","Oasis","_options","abilityManager","_canvas","schema","timeout","resetFeature","bind","fps","targetFrameRate","vSyncCount","boot","loadResources","bindResources","parseNodes","parseNodeAbilities","attach","assets","loadingPromises","filter","getAll","bfsNodes","abilities","roots","traverseChildren","concat","features","splice","hasFogFeature","getFogMacro","bindFogToMaterial","canvas","run","EventDispatcher","_vec3Attribute","compatibleToV2","ids","assetKeys","l","handleProps","handleAssets","v","CURRENT_SCHEMA_VERSION","register","reset","parser","namespace","components"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAO,sBAAsBC,IAAtB,CAA2BD,GAA3B,CAAP;AACD;;IAEKE,uBADLC,qBAAc,CAACC,gBAAS,CAACC,MAAX,EAAmB,CAAC,KAAD,EAAQ,OAAR,CAAnB,EAAqC,KAArC;;;;;;;;;;;;;yBAERC,MAA2C;AAC9C,UAAMN,GAAG,GAAGM,IAAI,CAACN,GAAjB;;AACA,UAAID,QAAQ,CAACC,GAAD,CAAZ,EAAmB;AACjB,eAAO,IAAIO,mBAAJ,CAAiB,UAACC,OAAD,EAAa;AACnC,cAAMC,SAAS,GAAGT,GAAG,CAACU,KAAJ,CAAU,KAAKC,MAAM,CAACC,EAAP,CAAUC,MAAzB,CAAlB;AACA,cAAMC,MAAM,GAAGC,UAAU,CAACC,IAAX,CAAgBC,IAAI,CAACR,SAAD,CAApB,EAAiC,UAACS,CAAD;AAAA,mBAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAP;AAAA,WAAjC,CAAf;AACAX,UAAAA,OAAO,CAACM,MAAM,CAACM,MAAR,CAAP;AACD,SAJM,CAAP;AAKD;;AACD,aAAO,KAAKC,OAAL,CAAarB,GAAb,oCACFM,IADE;AAELgB,QAAAA,IAAI,EAAE;AAFD,SAAP;AAID;;;;EAdwBC;;ACJ3B,IAAMC,qBAAqB,GAAG;AAC5B,QAAMC,SADsB;AAE5B,QAAMV,UAFsB;AAG5B,QAAMW,UAHsB;AAI5B,QAAMC,WAJsB;AAK5B,QAAMC,WALsB;AAM5B,QAAMC;AANsB,CAA9B;AASA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAChC,MAAI,OAAOC,WAAP,KAAuB,WAA3B,EAAwC;AACtC,WAAO,IAAIA,WAAJ,GAAkBC,MAAlB,CAAyBF,KAAzB,CAAP;AACD,GAH+B;;;AAMhC,MAAIG,CAAC,GAAG,EAAR;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGL,KAAK,CAAClB,MAA3B,EAAmCsB,CAAC,GAAGC,EAAvC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9CD,IAAAA,CAAC,IAAIG,MAAM,CAACC,YAAP,CAAoBP,KAAK,CAACI,CAAD,CAAzB,CAAL;AACD;;AAED,SAAOI,kBAAkB,CAACC,kBAAkB,CAACN,CAAD,CAAnB,CAAzB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASO,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,KAAlC,EAAyC;AAC9C,OAAK,IAAMC,IAAX,IAAmBH,GAAnB,EAAwB;AACtB,QAAIA,GAAG,CAACG,IAAD,CAAH,CAAUF,GAAV,MAAmBC,KAAvB,EAA8B;AAC5B,aAAOF,GAAG,CAACG,IAAD,CAAV;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASC,mBAAT,CAA6BC,YAA7B,EAA2C;AAChD,MAAMC,kBAAkB,GAAG;AACzBC,IAAAA,MAAM,EAAE,CADiB;AAEzBC,IAAAA,IAAI,EAAE,CAFmB;AAGzBC,IAAAA,IAAI,EAAE,CAHmB;AAIzBC,IAAAA,IAAI,EAAE,CAJmB;AAKzBC,IAAAA,IAAI,EAAE,CALmB;AAMzBC,IAAAA,IAAI,EAAE,CANmB;AAOzBC,IAAAA,IAAI,EAAE;AAPmB,GAA3B;AASA,SAAOP,kBAAkB,CAACD,YAAD,CAAzB;AACD;AAED;AACA;AACA;AACA;;AACA,AAAO,SAASS,gBAAT,CAA0BC,aAA1B,EAAyC;AAC9C,SAAOjC,qBAAqB,CAACiC,aAAD,CAA5B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAkD;AAAA;;AACvD,MAAMC,UAAU,GAAGH,IAAI,CAACI,WAAL,CAAiBH,QAAQ,CAACE,UAA1B,CAAnB;AACA,MAAME,WAAW,GAAGH,OAAO,CAACC,UAAU,CAAC1C,MAAZ,CAA3B;AACA,MAAM6C,kBAAkB,GAAGL,QAAQ,CAACM,cAAT,CAAwB,YAAxB,IAAwCN,QAAQ,CAACO,UAAjD,GAA8D,CAAzF;AACA,MAAMC,oBAAoB,GAAGN,UAAU,CAACI,cAAX,CAA0B,YAA1B,IAA0CJ,UAAU,CAACK,UAArD,GAAkE,CAA/F;AACA,MAAMA,UAAU,GAAGF,kBAAkB,GAAGG,oBAAxC;AACA,MAAMC,gBAAgB,GAAGvB,mBAAmB,CAACc,QAAQ,CAACtC,IAAV,CAA5C;AACA,MAAMT,MAAM,GAAGwD,gBAAgB,GAAGT,QAAQ,CAACU,KAA3C;AACA,MAAMC,UAAU,4BAAGT,UAAU,CAACS,UAAd,yEAA4B,CAA5C;AAEA,MAAMC,SAAS,GAAGhB,gBAAgB,CAACI,QAAQ,CAACH,aAAV,CAAlC;AACA,MAAIgB,UAAJ;;AACA,MAAIF,UAAJ,EAAgB;AACdE,IAAAA,UAAU,GAAG,IAAI1D,UAAJ,CAAeF,MAAM,GAAG2D,SAAS,CAACE,iBAAlC,CAAb;AACA,QAAMC,kBAAkB,GAAG,IAAI5D,UAAJ,CAAeiD,WAAf,EAA4BI,oBAA5B,EAAkDN,UAAU,CAACc,UAA7D,CAA3B;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAMC,gBAAgB,GAAGT,gBAAgB,GAAGG,SAAS,CAACE,iBAAtD;;AACA,SAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,QAAQ,CAACU,KAA7B,EAAoCnC,CAAC,EAArC,EAAyC;AACvC0C,MAAAA,YAAY,GAAG1C,CAAC,GAAGoC,UAAJ,GAAiBN,kBAAhC;;AACA,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,gBAApB,EAAsCC,CAAC,EAAvC,EAA2C;AACzCN,QAAAA,UAAU,CAACtC,CAAC,GAAG2C,gBAAJ,GAAuBC,CAAxB,CAAV,GAAuCJ,kBAAkB,CAACE,YAAY,GAAGE,CAAhB,CAAzD;AACD;AACF;AACF,GAXD,MAWO;AACLN,IAAAA,UAAU,GAAG,IAAI1D,UAAJ,CAAeiD,WAAf,EAA4BG,UAA5B,EAAwCtD,MAAM,GAAG2D,SAAS,CAACE,iBAA3D,CAAb;AACAD,IAAAA,UAAU,GAAG,IAAI1D,UAAJ,CAAe0D,UAAf,CAAb;AACD;;AAED,SAAO,IAAID,SAAJ,CAAcC,UAAU,CAACrD,MAAzB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAAS4D,aAAT,CAAuBlB,UAAvB,EAAmCD,OAAnC,EAA4C;AACjD;AACA,MAAMG,WAAW,GAAGH,OAAO,CAACC,UAAU,CAAC1C,MAAZ,CAA3B;AACA,MAAM+C,UAAU,GAAGL,UAAU,CAACK,UAAX,IAAyB,CAA5C;AACA,SAAOH,WAAW,CAACtD,KAAZ,CAAkByD,UAAlB,EAA8BA,UAAU,GAAGL,UAAU,CAACc,UAAtD,CAAP;AACD;AAED,AAAO,SAASK,eAAT,CAAyBrB,QAAzB,EAA2C;AAChD,MAAMsB,IAAI,GAAGpC,mBAAmB,CAACc,QAAQ,CAACtC,IAAV,CAAhC;AACA,MAAMmC,aAAa,GAAGD,gBAAgB,CAACI,QAAQ,CAACH,aAAV,CAAtC;AACA,SAAOyB,IAAI,GAAGzB,aAAa,CAACiB,iBAA5B;AACD;AAED,AAAO,SAASS,mBAAT,CAA6BxB,IAA7B,EAAmCyB,QAAnC,EAA6CxB,QAA7C,EAAuDyB,KAAvD,EAAqF;AAC1F,MAAMH,IAAI,GAAGpC,mBAAmB,CAACc,QAAQ,CAACtC,IAAV,CAAhC;AACA,SAAO,IAAIgE,oBAAJ,CAAkBF,QAAlB,EAA4B,CAA5B,EAA+BG,gBAAgB,CAAC3B,QAAQ,CAACH,aAAV,EAAyByB,IAAzB,CAA/C,EAA+EG,KAA/E,CAAP;AACD;AAED,AAAO,SAASG,cAAT,CAAwBlE,IAAxB,EAAmD;AACxD,UAAQA,IAAR;AACE,SAAKmE,eAAQ,CAACC,aAAd;AACE,aAAOC,kBAAW,CAACC,KAAnB;;AACF,SAAKH,eAAQ,CAACI,cAAd;AACE,aAAOF,kBAAW,CAACG,MAAnB;;AACF,SAAKL,eAAQ,CAACM,YAAd;AACE,aAAOJ,kBAAW,CAACK,MAAnB;AANJ;AAQD;AAED,AAAO,SAAST,gBAAT,CAA0BjE,IAA1B,EAAwC4D,IAAxC,EAA2E;AAChF,MAAI5D,IAAI,IAAImE,eAAQ,CAACQ,KAArB,EAA4B;AAC1B,YAAQf,IAAR;AACE,WAAK,CAAL;AACE,eAAOgB,0BAAmB,CAACC,MAA3B;;AACF,WAAK,CAAL;AACE,eAAOD,0BAAmB,CAACE,OAA3B;;AACF,WAAK,CAAL;AACE,eAAOF,0BAAmB,CAACG,OAA3B;;AACF,WAAK,CAAL;AACE,eAAOH,0BAAmB,CAACI,OAA3B;AARJ;AAUD;;AACD,MAAIhF,IAAI,IAAImE,eAAQ,CAACI,cAArB,EAAqC;AACnC,YAAQX,IAAR;AACE,WAAK,CAAL;AACE,eAAOgB,0BAAmB,CAACK,OAA3B;;AACF,WAAK,CAAL;AACE,eAAOL,0BAAmB,CAACM,OAA3B;AAJJ;AAMD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASC,eAAT,CAAyBC,WAAzB,EAAmDpF,IAAnD,EAA4F;AACjG,SAAO,IAAIqF,OAAJ,CAAY,UAACnG,OAAD,EAAUoG,MAAV,EAAqB;AACtC,QAAMC,IAAI,GAAG,IAAIC,MAAM,CAACC,IAAX,CAAgB,CAACL,WAAD,CAAhB,EAA+B;AAAEpF,MAAAA,IAAI,EAAJA;AAAF,KAA/B,CAAb;AACA,QAAM0F,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAUC,GAAG,CAACC,eAAJ,CAAoBP,IAApB,CAAV;AAEAG,IAAAA,GAAG,CAACK,WAAJ,GAAkB,WAAlB;;AACAL,IAAAA,GAAG,CAACM,OAAJ,GAAc,YAAY;AACxBV,MAAAA,MAAM,CAAC,IAAIW,KAAJ,CAAU,6BAAV,CAAD,CAAN;AACD,KAFD;;AAGAP,IAAAA,GAAG,CAACQ,MAAJ,GAAa,YAAY;AACvBhH,MAAAA,OAAO,CAACwG,GAAD,CAAP;AACD,KAFD;AAGD,GAZM,CAAP;AAaD;;AAOD,SAASS,aAAT,CAAuBzH,GAAvB,EAA6C;AAC3C,SAAO,0BAA0BC,IAA1B,CAA+BD,GAA/B,CAAP;AACD;;AAED,AAAO,SAAS0H,gBAAT,CAA0BC,OAA1B,EAA2CC,WAA3C,EAAwE;AAC7E,MAAIH,aAAa,CAACG,WAAD,CAAjB,EAAgC;AAC9B,WAAOA,WAAP;AACD,GAH4E;;;AAK7E,SAAOD,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqBF,OAAO,CAACG,WAAR,CAAoB,GAApB,IAA2B,CAAhD,IAAqDF,WAA5D;AACD;;AC9MD,IAAIG,OAAJ;AAEA,AAAO,IAAMC,wBAAwB,GAAG;AACtCC,EAAAA,IADsC,kBAC/B;AACL,QAAI,CAACF,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,IAAIG,oBAAJ,EAAV;AACD;AACF,GALqC;AAMtCC,EAAAA,KANsC,iBAMhCC,SANgC,EAMrBC,SANqB,EAMVC,aANU,EAMK3E,IANL,EAMWE,OANX,EAMoB;AAAA,QAChDE,WADgD,GACrBJ,IADqB,CAChDI,WADgD;AAAA,QACnCwE,SADmC,GACrB5E,IADqB,CACnC4E,SADmC;AAExD,QAAMC,eAAe,GAAGJ,SAAS,CAACtE,UAAlC;AACA,QAAM2E,gBAAgB,GAAGL,SAAS,CAACM,UAAnC;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAAK,IAAIC,aAAT,IAA0BJ,gBAA1B,EAA4C;AAC1CE,MAAAA,YAAY,CAACE,aAAD,CAAZ,GAA8BJ,gBAAgB,CAACI,aAAD,CAA9C;AACD;;AAED,SAAK,IAAIA,cAAT,IAA0BP,aAAa,CAACI,UAAxC,EAAoD;AAClD,UAAID,gBAAgB,CAACI,cAAD,CAAhB,KAAoCC,SAAxC,EAAmD;AACjD,YAAMC,WAAW,GAAGR,SAAS,CAACD,aAAa,CAACI,UAAd,CAAyBG,cAAzB,CAAD,CAA7B;AACAD,QAAAA,gBAAgB,CAACC,cAAD,CAAhB,GAAkCrF,gBAAgB,CAACuF,WAAW,CAACtF,aAAb,CAAhB,CAA4CZ,IAA9E;AACD;AACF;;AACD,QAAMmG,aAAa,GAAGT,SAAS,CAACD,aAAa,CAACW,OAAf,CAA/B;AACA,QAAMC,SAAS,GAAG1F,gBAAgB,CAACwF,aAAa,CAACvF,aAAf,CAAhB,CAA8CZ,IAAhE;AACA,QAAMsG,UAAU,GAAG;AACjBC,MAAAA,YAAY,EAAET,YADG;AAEjBU,MAAAA,cAAc,EAAET,gBAFC;AAGjBU,MAAAA,YAAY,EAAE,IAHG;AAIjBJ,MAAAA,SAAS,EAATA;AAJiB,KAAnB;AAMA,QAAM9H,MAAM,GAAG4D,aAAa,CAACjB,WAAW,CAACyE,eAAD,CAAZ,EAA+B3E,OAA/B,CAA5B;AACA,WAAOkE,OAAO,CAAC9F,MAAR,CAAeb,MAAf,EAAuB+H,UAAvB,EAAmCI,IAAnC,CAAwC,UAACC,QAAD,EAAc;AAC3D,UAAIC,CAAC,GAAG,CAAR;;AACA,WAAK,IAAItH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqH,QAAQ,CAACd,UAAT,CAAoB7H,MAAxC,EAAgDsB,CAAC,EAAjD,EAAqD;AACnD,YAAMuH,SAAS,GAAGF,QAAQ,CAACd,UAAT,CAAoBvG,CAApB,CAAlB;AACA,YAAMwH,WAAW,GAAGrB,aAAa,CAACI,UAAd,CAAyBgB,SAAS,CAAC7G,IAAnC,CAApB;AACA,YAAMe,QAAQ,GAAG2E,SAAS,CAACoB,WAAD,CAA1B;AACA/F,QAAAA,QAAQ,CAACE,UAAT,GAAsBF,QAAQ,CAACE,UAAT,KAAwBgF,SAAxB,GAAoCN,eAApC,GAAsD5E,QAAQ,CAACE,UAArF;AACAuE,QAAAA,SAAS,CAACuB,aAAV,CAAwBC,IAAxB,CAA6BH,SAAS,CAAC3H,KAAvC;AACAsG,QAAAA,SAAS,CAACyB,gBAAV,CAA2BJ,SAAS,CAAC7G,IAArC,IAA6CsC,mBAAmB,CAACxB,IAAD,EAAO+F,SAAS,CAAC7G,IAAjB,EAAuBe,QAAvB,EAAiC6F,CAAC,EAAlC,CAAhE;AACD,OAT0D;;;AAY3D,UAAMM,mBAAmB,GAAGzB,aAAa,CAACI,UAAd,CAAyBsB,QAArD;AACA,UAAMC,gBAAgB,GAAG1B,SAAS,CAACwB,mBAAD,CAAlC;AACA1B,MAAAA,SAAS,CAAC6B,WAAV,GAAwBD,gBAAgB,CAAC3F,KAAzC,CAd2D;;AAiB3D+D,MAAAA,SAAS,CAAC8B,UAAV,GAAuBnB,aAAa,CAAC1E,KAArC;AACA+D,MAAAA,SAAS,CAACa,SAAV,GAAsBF,aAAa,CAACvF,aAApC;AACA4E,MAAAA,SAAS,CAAC+B,WAAV,GAAwB,CAAxB;AACA/B,MAAAA,SAAS,CAACgC,WAAV,GAAwBb,QAAQ,CAACnE,KAAT,CAAetD,KAAvC;AACA,aAAOsG,SAAP;AACD,KAtBM,CAAP;AAuBD;AAvDqC,CAAjC;;ACmCP;AACA;AACA;AACA;AACA;;AAEA,IAAMiC,eAAe,GAAG;AACtBC,EAAAA,WAAW,EAAE,UADS;AAEtBC,EAAAA,QAAQ,EAAE,UAFY;AAGtBC,EAAAA,KAAK,EAAE,OAHe;AAItBC,EAAAA,OAAO,EAAE;AAJa,CAAxB;AAOA,IAAIC,SAAS,GAAG,CAAhB;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,uBAAuB,GAAG,EAAhC;;AAEA,IAAMC,kBAAkB,GAAI,YAAY;AACtC,MAAIC,cAAJ;AACA,SAAO,YAAM;AACX,QAAI,CAACA,cAAL,EAAqB;AACnBA,MAAAA,cAAc,GAAG,IAAIC,uBAAJ,CAAqB,SAArB,CAAjB;AACAD,MAAAA,cAAc,CAACE,QAAf,GAA0B,IAAI3E,cAAJ,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,CAAjC,CAA1B;AACD;;AACD,WAAOyE,cAAP;AACD,GAND;AAOD,CAT0B,EAA3B;AAWA;AACA;AACA;;;AACA,AAAO,IAAMG,iBAAiB,GAAG;AAC/BC,EAAAA,WAAW,EAAE,aADkB;AAE/BC,EAAAA,UAAU,EAAE,YAFmB;AAG/BC,EAAAA,mBAAmB,EAAE,qBAHU;AAI/BC,EAAAA,mCAAmC,EAAE,qCAJN;AAK/BC,EAAAA,oBAAoB,EAAE,sBALS;AAM/BC,EAAAA,0BAA0B,EAAE;AANG,CAA1B;AASP,IAAIJ,UAAU,GAAG,IAAjB;AAEA,IAAMK,gBAAgB,GAAG;AACvBL,EAAAA,UAAU,EAAEA,UADW;AAEvBC,EAAAA,mBAAmB,EAAEF,kBAFE;AAEW;AAClCG,EAAAA,mCAAmC,EAAEH,kBAHd;AAIvBI,EAAAA,oBAAoB,EAAEG,eAJC;AAKvBF,EAAAA,0BAA0B,EAAExD;AALL,CAAzB;AAQA;AACA;AACA;AACA;;AACA,AAAO,SAAS2D,eAAT,CAAyBC,MAAzB,EAAiC;AACtCC,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAAClJ,IAAD,EAAU;AACpC,QAAI+H,YAAY,CAAC/H,IAAD,CAAZ,KAAuBiG,SAA3B,EAAsC;AACpC8B,MAAAA,YAAY,CAAC/H,IAAD,CAAZ,GAAqB+I,MAAM,CAAC/I,IAAD,CAA3B;;AAEA,cAAQA,IAAR;AACE,aAAKqI,iBAAiB,CAACC,WAAvB;AACEM,UAAAA,gBAAgB,CAACJ,mBAAjB,GAAuCF,kBAAvC;AACA;;AACF,aAAKD,iBAAiB,CAACE,UAAvB;AACEA,UAAAA,UAAU,GAAGQ,MAAM,CAAC/I,IAAD,CAAnB;AACA4I,UAAAA,gBAAgB,CAACL,UAAjB,GAA8BA,UAA9B;AACA;;AACF;AACE,cAAIM,eAAQ,CAACM,aAAT,CAAuBJ,MAAM,CAAC/I,IAAD,CAA7B,KAAwC+I,MAAM,CAAC/I,IAAD,CAAN,CAAaoJ,SAAzD,EACEpB,uBAAuB,CAACe,MAAM,CAAC/I,IAAD,CAAN,CAAaoJ,SAAd,CAAvB,GAAkDL,MAAM,CAAC/I,IAAD,CAAxD;AACF;AAXJ;AAaD;AACF,GAlBD;AAmBD;AAOD,IAAaqJ,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,gBADF;AAAA,UAEEC,YAFF;AAAA,UAGEC,MAHF;AAAA,UAIEC,QAJF;AAAA,UAKEC,UALF;AAAA,UAMEC,SANF;AAAA,UAOEC,MAPF;AAAA,UAQEC,KARF;AAAA;AAAA;;AAAA;AAAA,EAAkCC,mBAAlC;AAWA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASC,SAAT,CAAmBC,IAAnB,EAA6CC,MAA7C,EAAoF;AACzF;AACA,MAAMC,SAAqB,GAAG;AAC5BD,IAAAA,MAAM,EAANA,MAD4B;AAE5BnJ,IAAAA,IAAI,EAAEkJ,IAAI,CAAClJ,IAFiB;AAG5BE,IAAAA,OAAO,EAAEgJ,IAAI,CAAChJ,OAHc;AAI5BmJ,IAAAA,KAAK,EAAE,IAAId,YAAJ;AAJqB,GAA9B;AAMAa,EAAAA,SAAS,CAACC,KAAV,CAAgBV,QAAhB,GAA2BO,IAAI,CAACP,QAAhC;;AAEA,MAAIS,SAAS,CAACpJ,IAAV,CAAeqJ,KAAf,IAAwBD,SAAS,CAACpJ,IAAV,CAAeqJ,KAAf,CAAqBC,OAAjD,EAA0D;AACxDF,IAAAA,SAAS,CAACpJ,IAAV,CAAesJ,OAAf,GAAyBC,MAAM,CAACH,SAAS,CAACpJ,IAAV,CAAeqJ,KAAf,CAAqBC,OAAtB,CAA/B;AACAF,IAAAA,SAAS,CAACpJ,IAAV,CAAewJ,OAAf,GAAyBJ,SAAS,CAACpJ,IAAV,CAAesJ,OAAf,IAA0B,CAA1B,IAA+BF,SAAS,CAACpJ,IAAV,CAAesJ,OAAf,IAA0B,CAAlF;AACD;;AAEDG,EAAAA,eAAe,CAACL,SAAD,CAAf,CAfyF;;AAiBzF,SAAOM,cAAc,CAACN,SAAD,EAAY,WAAZ,EAAyBO,aAAzB,CAAd,CACJ/D,IADI,CACC;AAAA,WAAM8D,cAAc,CAACN,SAAD,EAAY,QAAZ,EAAsBQ,SAAtB,CAApB;AAAA,GADD,EAEJhE,IAFI,CAEC;AAAA,WAAM8D,cAAc,CAACN,SAAD,EAAY,OAAZ,EAAqBS,SAArB,CAApB;AAAA,GAFD,EAGJjE,IAHI,CAGC;AAAA,WAAM8D,cAAc,CAACN,SAAD,EAAY,QAAZ,EAAsBU,UAAtB,CAApB;AAAA,GAHD,EAIJlE,IAJI,CAIC;AAAA,WAAM8D,cAAc,CAACN,SAAD,EAAY,OAAZ,EAAqBW,SAArB,CAApB;AAAA,GAJD,EAKJnE,IALI,CAKC;AAAA,WAAM8D,cAAc,CAACN,SAAD,EAAY,YAAZ,EAA0BY,cAA1B,CAApB;AAAA,GALD,EAMJpE,IANI,CAMC;AAAA,WAAMqE,eAAe,CAACb,SAAD,CAArB;AAAA,GAND,CAAP;AAOD;;AAED,SAASK,eAAT,CAAyBL,SAAzB,EAAoC;AAAA,MAC1BpJ,IAD0B,GACVoJ,SADU,CAC1BpJ,IAD0B;AAAA,MACpBqJ,KADoB,GACVD,SADU,CACpBC,KADoB;AAAA,MAE1Ba,UAF0B,GAEyBlK,IAFzB,CAE1BkK,UAF0B;AAAA,MAEdC,cAFc,GAEyBnK,IAFzB,CAEdmK,cAFc;AAAA,MAEEC,kBAFF,GAEyBpK,IAFzB,CAEEoK,kBAFF;;AAGlC,MAAID,cAAJ,EAAoB;AAClBE,IAAAA,aAAM,CAACC,IAAP,CAAY,kBAAZ,EAAgCH,cAAhC;;AACA,SAAK,IAAI3L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2L,cAAc,CAACjN,MAAnC,EAA2CsB,CAAC,EAA5C,EAAgD;AAC9C,UAAI0J,MAAM,CAACC,IAAP,CAAYL,gBAAZ,EAA8ByC,OAA9B,CAAsCJ,cAAc,CAAC3L,CAAD,CAApD,IAA2D,CAAC,CAAhE,EAAmE;AACjE,YAAI,CAACsJ,gBAAgB,CAACqC,cAAc,CAAC3L,CAAD,CAAf,CAArB,EAA0C;AACxC6L,UAAAA,aAAM,CAACG,IAAP,CAAY,eAAeL,cAAc,CAAC3L,CAAD,CAA7B,GAAmC,gDAA/C;AACD;AACF,OAJD,MAIO;AACL6L,QAAAA,aAAM,CAACG,IAAP,CAAY,8CAA8CL,cAAc,CAAC3L,CAAD,CAAxE;AACD;AACF;AACF;;AAED,MAAI4L,kBAAJ,EAAwB;AACtBC,IAAAA,aAAM,CAACC,IAAP,+BAAmCF,kBAAnC;;AACA,SAAK,IAAI5L,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG4L,kBAAkB,CAAClN,MAAvC,EAA+CsB,EAAC,EAAhD,EAAoD;AAClD,UACE0J,MAAM,CAACC,IAAP,CAAYL,gBAAZ,EAA8ByC,OAA9B,CAAsCH,kBAAkB,CAAC5L,EAAD,CAAxD,IAA+D,CAA/D,IACA,CAACsJ,gBAAgB,CAACsC,kBAAkB,CAAC5L,EAAD,CAAnB,CAFnB,EAGE;AACA6L,QAAAA,aAAM,CAACI,KAAP,sDAA2DL,kBAAkB,CAAC5L,EAAD,CAA7E;AACD;;AACD,UAAI4L,kBAAkB,CAAC5L,EAAD,CAAlB,KAA0B+I,iBAAiB,CAACM,0BAAhD,EAA4E;AAC1EC,QAAAA,gBAAgB,CAACD,0BAAjB,CAA4CvD,IAA5C;AACD;AACF;AACF;;AAED,MAAI4F,UAAJ,EAAgB;AACd,QAAIzC,UAAU,IAAIyC,UAAU,CAACzC,UAA7B,EAAyC;AACvC4B,MAAAA,KAAK,CAACqB,MAAN,GAAejD,UAAU,CAACkD,WAAX,CAAuBT,UAAU,CAACzC,UAAX,CAAsBiD,MAA7C,CAAf;AACD;AACF;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAShB,cAAT,CAAwBN,SAAxB,EAA+ClK,IAA/C,EAA6D0L,OAA7D,EAAsE;AAAA,MAC5D5K,IAD4D,GAC5CoJ,SAD4C,CAC5DpJ,IAD4D;AAAA,MACtDqJ,KADsD,GAC5CD,SAD4C,CACtDC,KADsD;;AAEpE,MAAI,CAACA,KAAK,CAACnK,IAAD,CAAV,EAAkB;AAChBmK,IAAAA,KAAK,CAACnK,IAAD,CAAL,GAAc,EAAd;AACD;;AACD,MAAIc,IAAI,CAACO,cAAL,CAAoBrB,IAApB,CAAJ,EAA+B;AAC7B,QAAM2L,QAAQ,GAAG7K,IAAI,CAACd,IAAD,CAAJ,IAAc,EAA/B;AACAmL,IAAAA,aAAM,CAACS,KAAP,CAAa5L,IAAI,GAAG,GAApB,EAAyB2L,QAAzB;AACA,QAAME,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAIvM,CAAC,GAAGqM,QAAQ,CAAC3N,MAAT,GAAkB,CAA/B,EAAkCsB,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7CuM,MAAAA,QAAQ,CAAC7E,IAAT,CAAc0E,OAAO,CAACC,QAAQ,CAACrM,CAAD,CAAT,EAAc4K,SAAd,CAArB;AACD;;AACD,WAAOpG,OAAO,CAACgI,GAAR,CAAYD,QAAZ,EAAsBnF,IAAtB,CAA2B,UAACqF,OAAD,EAAa;AAC7C,WAAK,IAAIzM,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGyM,OAAO,CAAC/N,MAA5B,EAAoCsB,GAAC,EAArC,EAAyC;AACvC6K,QAAAA,KAAK,CAACnK,IAAD,CAAL,CAAYgH,IAAZ,CAAiB+E,OAAO,CAACzM,GAAD,CAAxB;AACD;AACF,KAJM,CAAP;AAKD;;AACD,SAAOwE,OAAO,CAACnG,OAAR,EAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,AAAO,SAAS8M,aAAT,CAAuBuB,YAAvB,EAAqC9B,SAArC,EAAgD;AAAA,MAC7CpJ,IAD6C,GAC7BoJ,SAD6B,CAC7CpJ,IAD6C;AAAA,MACvCqJ,KADuC,GAC7BD,SAD6B,CACvCC,KADuC;AAErD,MAAI8B,QAAJ;;AAEA,MAAInL,IAAI,CAACwJ,OAAL,IAAgB,OAAO0B,YAAY,CAACE,SAApB,KAAkC,WAAtD,EAAmE;AACjE,QAAMC,UAAe,GAAG,EAAxB;AACA,QAAMC,QAAa,GAAG,EAAtB;AAFiE,QAI/DC,oBAJ+D,GAa7DL,YAb6D,CAI/DK,oBAJ+D;AAAA,QAK/DC,aAL+D,GAa7DN,YAb6D,CAK/DM,aAL+D;AAAA,QAM/DC,eAN+D,GAa7DP,YAb6D,CAM/DO,eAN+D;AAAA,QAO/DC,cAP+D,GAa7DR,YAb6D,CAO/DQ,cAP+D;AAAA,QAQ/DC,gBAR+D,GAa7DT,YAb6D,CAQ/DS,gBAR+D;AAAA,QAS/DC,SAT+D,GAa7DV,YAb6D,CAS/DU,SAT+D;AAAA,QAU/DC,WAV+D,GAa7DX,YAb6D,CAU/DW,WAV+D;AAAA,QAW/DC,WAX+D,GAa7DZ,YAb6D,CAW/DY,WAX+D;AAAA,QAY/D5B,UAZ+D,GAa7DgB,YAb6D,CAY/DhB,UAZ+D;;AAejE,QAAIqB,oBAAJ,EAA0B;AAAA,UAEtBQ,eAFsB,GAOpBR,oBAPoB,CAEtBQ,eAFsB;AAAA,UAGtBC,gBAHsB,GAOpBT,oBAPoB,CAGtBS,gBAHsB;AAAA,UAItBC,cAJsB,GAOpBV,oBAPoB,CAItBU,cAJsB;AAAA,UAKtBC,eALsB,GAOpBX,oBAPoB,CAKtBW,eALsB;AAAA,UAMtBC,wBANsB,GAOpBZ,oBAPoB,CAMtBY,wBANsB;;AAQxB,UAAIH,gBAAJ,EAAsB;AACpBX,QAAAA,UAAU,CAACW,gBAAX,GAA8BI,YAAY,CAAC,UAAD,EAAaJ,gBAAgB,CAACtK,KAAjB,IAA0B,CAAvC,EAA0C0H,SAA1C,EAAqD,KAArD,CAA1C;AACD;;AACD,UAAI2C,eAAJ,EAAqB;AACnBV,QAAAA,UAAU,CAACU,eAAX,cAAiCpJ,cAAjC,qBAA4CoJ,eAA5C;AACD;;AACDV,MAAAA,UAAU,CAACY,cAAX,GAA4BA,cAAc,KAAK9G,SAAnB,GAA+B8G,cAA/B,GAAgD,CAA5E;AACAZ,MAAAA,UAAU,CAACa,eAAX,GAA6BA,eAAe,KAAK/G,SAApB,GAAgC+G,eAAhC,GAAkD,CAA/E;;AACA,UAAIC,wBAAJ,EAA8B;AAC5Bd,QAAAA,UAAU,CAACc,wBAAX,GAAsCC,YAAY,CAChD,UADgD,EAEhDD,wBAAwB,CAACzK,KAAzB,IAAkC,CAFc,EAGhD0H,SAHgD,EAIhD,KAJgD,CAAlD;AAMD;AACF;;AAED,QAAIoC,aAAJ,EAAmB;AAAA,UACT9J,KADS,GACkB8J,aADlB,CACT9J,KADS;AAAA,UACF2K,QADE,GACkBb,aADlB,CACFa,QADE;AAAA,UACQvF,KADR,GACkB0E,aADlB,CACQ1E,KADR;AAEjBuE,MAAAA,UAAU,CAACG,aAAX,GAA2BY,YAAY,CAAC,UAAD,EAAa1K,KAAK,IAAI,CAAtB,EAAyB0H,SAAzB,EAAoC,KAApC,CAAvC;;AAEA,UAAI,QAAOtC,KAAP,MAAiB3B,SAArB,EAAgC;AAC9BkG,QAAAA,UAAU,CAACiB,WAAX,GAAyBxF,KAAzB;AACD;AACF;;AAED,QAAI2E,eAAJ,EAAqB;AACnBJ,MAAAA,UAAU,CAACI,eAAX,GAA6BW,YAAY,CAAC,UAAD,EAAaX,eAAe,CAAC/J,KAAhB,IAAyB,CAAtC,EAAyC0H,SAAzC,EAAoD,KAApD,CAAzC;AACD;;AAED,QAAIuC,gBAAJ,EAAsB;AACpBN,MAAAA,UAAU,CAACM,gBAAX,GAA8BS,YAAY,CAAC,UAAD,EAAaT,gBAAgB,CAACjK,KAAjB,IAA0B,CAAvC,EAA0C0H,SAA1C,EAAqD,KAArD,CAA1C;;AAEA,UAAIuC,gBAAgB,CAACY,QAAjB,KAA8BpH,SAAlC,EAA6C;AAC3CkG,QAAAA,UAAU,CAACmB,iBAAX,GAA+Bb,gBAAgB,CAACY,QAAhD;AACD;AACF;;AAEDjB,IAAAA,QAAQ,CAACQ,WAAT,GAAuB,CAAC,CAACA,WAAzB;AACAR,IAAAA,QAAQ,CAACM,SAAT,GAAqBA,SAAS,IAAI,QAAlC;;AACA,QAAIA,SAAS,KAAK,MAAlB,EAA0B;AACxBP,MAAAA,UAAU,CAACQ,WAAX,GAAyBA,WAAW,KAAK1G,SAAhB,GAA4B,GAA5B,GAAkC0G,WAA3D;AACD;;AAED,QAAI3B,UAAJ,EAAgB;AACd,UAAIA,UAAU,CAACxC,mBAAf,EAAoC;AAClC4D,QAAAA,QAAQ,CAACmB,KAAT,GAAiB,IAAjB;AACD,OAHa;;;AAMd,UAAIvC,UAAU,CAACvC,mCAAf,EAAoD;AAAA,oCAO9CuC,UAAU,CAACvC,mCAPmC;AAAA,YAEhD+E,aAFgD,yBAEhDA,aAFgD;AAAA,YAGhDC,cAHgD,yBAGhDA,cAHgD;AAAA,YAIhDC,cAJgD,yBAIhDA,cAJgD;AAAA,YAKhDC,gBALgD,yBAKhDA,gBALgD;AAAA,YAMhDC,yBANgD,yBAMhDA,yBANgD;AASlDxB,QAAAA,QAAQ,CAACyB,kBAAT,GAA8B,KAA9B;;AACA,YAAIL,aAAJ,EAAmB;AACjBrB,UAAAA,UAAU,CAACU,eAAX,cAAiCpJ,cAAjC,qBAA4C+J,aAA5C;AACD;;AACD,YAAIC,cAAJ,EAAoB;AAClBtB,UAAAA,UAAU,CAACW,gBAAX,GAA8BI,YAAY,CAAC,UAAD,EAAaO,cAAc,CAACjL,KAAf,IAAwB,CAArC,EAAwC0H,SAAxC,EAAmD,KAAnD,CAA1C;AACD;;AACD,YAAIwD,cAAJ,EAAoB;AAClBvB,UAAAA,UAAU,CAACuB,cAAX,cAAgClK,cAAhC,qBAA2CkK,cAA3C;AACD;;AACD,YAAIC,gBAAgB,KAAK1H,SAAzB,EAAoC;AAClCkG,UAAAA,UAAU,CAACwB,gBAAX,GAA8BA,gBAA9B;AACD;;AACD,YAAIC,yBAAJ,EAA+B;AAC7BzB,UAAAA,UAAU,CAACyB,yBAAX,GAAuCV,YAAY,CACjD,UADiD,EAEjDU,yBAAyB,CAACpL,KAA1B,IAAmC,CAFc,EAGjD0H,SAHiD,EAIjD,KAJiD,CAAnD;AAMD;AACF;AACF,KAzGgE;;;AAAA,QA4GzDqD,KA5GyD,GA4GZvB,YA5GY,CA4GzDuB,KA5GyD;AAAA,QA4GlDO,IA5GkD,GA4GZ9B,YA5GY,CA4GlD8B,IA5GkD;AAAA,QA4G5CC,KA5G4C,GA4GZ/B,YA5GY,CA4G5C+B,KA5G4C;AAAA,QA4GrCC,SA5GqC,GA4GZhC,YA5GY,CA4GrCgC,SA5GqC;AAAA,QA4G1BC,SA5G0B,GA4GZjC,YA5GY,CA4G1BiC,SA5G0B;AA6GjE,QAAIV,KAAJ,EAAWnB,QAAQ,CAACmB,KAAT,GAAiB,IAAjB;AACX,QAAIO,IAAJ,EAAU1B,QAAQ,CAAC0B,IAAT,GAAgB,IAAhB;AACV,QAAIC,KAAJ,EAAW3B,QAAQ,CAAC2B,KAAT,GAAiB,IAAjB;AACX,QAAIC,SAAJ,EAAe5B,QAAQ,CAAC4B,SAAT,GAAqBA,SAArB;AACf,QAAIC,SAAS,KAAKhI,SAAlB,EAA6BmG,QAAQ,CAAC6B,SAAT,GAAqBA,SAArB;AAE7BhC,IAAAA,QAAQ,GAAG,IAAI3D,kBAAJ,CAAgB0D,YAAY,CAAChM,IAAb,IAAqBsI,kBAAW,CAAC4F,aAAjD,EAAgE,SAAc,EAAd,EAAkB/B,UAAlB,EAA8BC,QAA9B,CAAhE,CAAX;AACD,GApHD,MAoHO;AACL,QAAM+B,aAAa,GAAGnC,YAAY,CAACE,SAAnC;AACAf,IAAAA,aAAM,CAACG,IAAP,CAAY,sEAAZ;AACA,QAAM8C,YAAY,GAAGpG,uBAAuB,CAACmG,aAAD,CAA5C;AACAlC,IAAAA,QAAQ,GAAG,IAAImC,YAAJ,EAAX;AACD;;AAED,MAAIpC,YAAY,CAAC3K,cAAb,CAA4B,QAA5B,CAAJ,EAA2C;AACzC8J,IAAAA,aAAM,CAACG,IAAP,CAAY,sEAAZ;;AACA,SAAK,IAAM+C,SAAX,IAAwBrC,YAAY,CAACsC,MAArC,EAA6C;AAC3C,UAAI,CAACrC,QAAQ,CAACC,SAAd,EAAyB;AACvBf,QAAAA,aAAM,CAACG,IAAP,CAAY,yBAAZ;AACA;AACD;;AACD,UAAMiD,OAAO,GAAG3O,cAAc,CAACqM,QAAQ,CAACC,SAAT,CAAmBsC,QAApB,EAA8B,WAA9B,EAA2CH,SAA3C,CAA9B;;AACA,UAAI,CAACE,OAAL,EAAc;AACZpD,QAAAA,aAAM,CAACG,IAAP,CAAY,4BAA4B+C,SAAxC;AACA;AACD;;AAED,UAAMrO,IAAI,GAAGuO,OAAO,CAACvO,IAArB;AACA,UAAMvB,IAAI,GAAG8P,OAAO,CAAC9P,IAArB;;AACA,UAAIA,IAAI,KAAKmE,eAAQ,CAAC6L,UAAtB,EAAkC;AAChC,YAAIC,YAAY,GAAG1C,YAAY,CAACsC,MAAb,CAAoBD,SAApB,CAAnB;;AACA,YAAIM,WAAI,CAACC,OAAL,CAAaF,YAAb,CAAJ,EAAgC;AAC9BA,UAAAA,YAAY,GAAGA,YAAY,CAAC,CAAD,CAA3B;AACD;;AACD,YAAMG,OAAO,GAAG3B,YAAY,CAAC,UAAD,EAAawB,YAAb,EAA2BxE,SAA3B,EAAsC,KAAtC,CAA5B;AACA+B,QAAAA,QAAQ,CAAC6C,QAAT,CAAkB9O,IAAlB,EAAwB6O,OAAxB;AACD,OAPD,MAOO;AACL5C,QAAAA,QAAQ,CAAC6C,QAAT,CAAkB9O,IAAlB,EAAwBgM,YAAY,CAACsC,MAAb,CAAoBD,SAApB,CAAxB;AACD;AACF;AACF;;AACD,SAAOvK,OAAO,CAACnG,OAAR,CAAgBsO,QAAhB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASpB,SAAT,CAAmBkE,QAAnB,EAA6B7E,SAA7B,EAAwC;AAAA,MACrCpJ,IADqC,GACnBoJ,SADmB,CACrCpJ,IADqC;AAAA,MAC/BE,OAD+B,GACnBkJ,SADmB,CAC/BlJ,OAD+B;AAG7C,MAAMgO,UAAU,GAAGD,QAAQ,CAACE,MAAT,CAAgBjR,MAAnC,CAH6C;;AAM7C,MAAMkR,IAAI,GAAG,IAAIC,WAAJ,CAASJ,QAAQ,CAAC/O,IAAlB,CAAb,CAN6C;;AAQ7C,MAAMe,QAAQ,GAAGD,IAAI,CAAC4E,SAAL,CAAeqJ,QAAQ,CAACK,mBAAxB,CAAjB;AACA,MAAM7Q,MAAM,GAAGsC,eAAe,CAACC,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAA9B;AACA,MAAMqO,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAI/P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0P,UAApB,EAAgC1P,CAAC,EAAjC,EAAqC;AACnC,QAAMgQ,QAAQ,GAAGD,WAAW,GAAG/P,CAA/B;AACA,QAAMiQ,MAAM,GAAGD,QAAQ,GAAGD,WAA1B;AACAH,IAAAA,IAAI,CAACE,mBAAL,CAAyB9P,CAAzB,eAAkCkQ,aAAlC,qBAA4CjR,MAAM,CAACkR,QAAP,CAAgBH,QAAhB,EAA0BC,MAA1B,CAA5C;AACD,GAhB4C;;;AAmB7C,OAAK,IAAIjQ,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG0P,UAApB,EAAgC1P,GAAC,EAAjC,EAAqC;AACnC,QAAMoQ,KAAI,GAAGxC,YAAY,CAAC,OAAD,EAAU6B,QAAQ,CAACE,MAAT,CAAgB3P,GAAhB,CAAV,EAA8B4K,SAA9B,CAAzB;;AACAgF,IAAAA,IAAI,CAACD,MAAL,CAAY3P,GAAZ,IAAiBoQ,KAAI,CAAC1P,IAAtB;AACD,GAtB4C;;;AAyB7C,MAAM0P,IAAI,GAAGxC,YAAY,CAAC,OAAD,EAAU6B,QAAQ,CAACY,QAAT,IAAqB,IAArB,GAA4BZ,QAAQ,CAACE,MAAT,CAAgB,CAAhB,CAA5B,GAAiDF,QAAQ,CAACY,QAApE,EAA8EzF,SAA9E,CAAzB;AACAgF,EAAAA,IAAI,CAACS,QAAL,GAAgBD,IAAI,CAAC1P,IAArB;AAEA,SAAO8D,OAAO,CAACnG,OAAR,CAAgBuR,IAAhB,CAAP;AACD;;AAED,SAASU,oBAAT,CAA8BC,IAA9B,EAA0CrK,SAA1C,EAAqDC,aAArD,EAAoE3E,IAApE,EAA0EE,OAA1E,EAAmFkJ,SAAnF,EAA8F;AAC5F;AACA,MAAI5K,CAAC,GAAG,CAAR;;AACA,OAAK,IAAMwQ,iBAAX,IAAgCrK,aAAa,CAACI,UAA9C,EAA0D;AACxD,QAAMiB,WAAW,GAAGrB,aAAa,CAACI,UAAd,CAAyBiK,iBAAzB,CAApB;AACA,QAAM/O,QAAQ,GAAGD,IAAI,CAAC4E,SAAL,CAAeoB,WAAf,CAAjB;AACA,QAAMiJ,MAAM,GAAG3N,eAAe,CAACrB,QAAD,CAA9B;AACA,QAAMiP,aAAa,GAAG1N,mBAAmB,CAACxB,IAAD,EAAOgP,iBAAP,EAA0B/O,QAA1B,EAAoCzB,CAApC,CAAzC;AAEAkG,IAAAA,SAAS,CAACyK,iBAAV,CAA4BD,aAA5B;AACA,QAAME,UAAU,GAAGrP,eAAe,CAACC,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,CAAlC;AACA,QAAMmP,YAAY,GAAG,IAAIC,mBAAJ,CAAiBlG,SAAS,CAACD,MAA3B,EAAmCiG,UAAU,CAACnO,UAA9C,EAA0DsO,kBAAW,CAACC,MAAtE,CAArB;AACAH,IAAAA,YAAY,CAACI,OAAb,CAAqBL,UAArB;AACA1K,IAAAA,SAAS,CAACgL,uBAAV,CAAkC,IAAIC,0BAAJ,CAAwBN,YAAxB,EAAsCJ,MAAtC,CAAlC,EAAiFzQ,CAAC,EAAlF,EAVwD;;AAaxD,QAAI0Q,aAAa,CAACzN,QAAd,IAA0B,UAA9B,EAA0C;AACxC,UAAMmO,QAAQ,GAAG,IAAIlN,cAAJ,EAAjB;AACA,UAAM6D,WAAW,GAAG6I,UAAU,CAAClS,MAAX,GAAoB,CAAxC;AAFwC,yBAGnB6R,IAAI,CAACc,MAHc;AAAA,UAGhCC,GAHgC,gBAGhCA,GAHgC;AAAA,UAG3BC,GAH2B,gBAG3BA,GAH2B;;AAIxC,WAAK,IAAIvR,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG+H,WAApB,EAAiC/H,GAAC,EAAlC,EAAsC;AACpC,YAAMwR,MAAM,GAAGxR,GAAC,GAAG,CAAnB;AACAoR,QAAAA,QAAQ,CAAC5B,QAAT,CAAkBoB,UAAU,CAACY,MAAD,CAA5B,EAAsCZ,UAAU,CAACY,MAAM,GAAG,CAAV,CAAhD,EAA8DZ,UAAU,CAACY,MAAM,GAAG,CAAV,CAAxE;AACAtN,QAAAA,cAAO,CAACoN,GAAR,CAAYA,GAAZ,EAAiBF,QAAjB,EAA2BE,GAA3B;AACApN,QAAAA,cAAO,CAACqN,GAAR,CAAYA,GAAZ,EAAiBH,QAAjB,EAA2BG,GAA3B;AACD;AACF;AACF,GA3B2F;;;AA8B5F,MAAM1K,aAAa,GAAGrF,IAAI,CAAC4E,SAAL,CAAeD,aAAa,CAACW,OAA7B,CAAtB;AACA,MAAM2K,SAAS,GAAGlQ,eAAe,CAACC,IAAD,EAAOqF,aAAP,EAAsBnF,OAAtB,CAAjC;AAEA,MAAMsG,UAAU,GAAGnB,aAAa,CAAC1E,KAAjC;AACA,MAAMuP,WAAW,GAAGrO,cAAc,CAACwD,aAAa,CAACvF,aAAf,CAAlC;AACA,MAAMqQ,aAAa,GAAGD,WAAW,IAAIlO,kBAAW,CAACK,MAA3B,GAAoC,CAApC,GAAwC6N,WAAW,IAAIlO,kBAAW,CAACG,MAA3B,GAAoC,CAApC,GAAwC,CAAtG;AACA,MAAMuE,WAAW,GAAG,IAAI0J,kBAAJ,CAAgBhH,SAAS,CAACD,MAA1B,EAAkC3C,UAAU,GAAG2J,aAA/C,EAA8DZ,kBAAW,CAACC,MAA1E,CAApB;AAEA9I,EAAAA,WAAW,CAAC+I,OAAZ,CAAoBQ,SAApB;AACAvL,EAAAA,SAAS,CAAC2L,qBAAV,CAAgC3J,WAAhC,EAA6CwJ,WAA7C;AACAxL,EAAAA,SAAS,CAAC4L,UAAV,GAAuB,CAAvB;AACA5L,EAAAA,SAAS,CAAC6L,SAAV,GAAsB/J,UAAtB;AACA,SAAOxD,OAAO,CAACnG,OAAR,CAAgB6H,SAAhB,CAAP;AACD;;AAgDD,SAAS8L,sBAAT,CAAgC9L,SAAhC,EAA2CC,aAA3C,EAA0DyE,SAA1D,EAAqE;AACnE;AACA,MAAIzE,aAAa,CAACwG,QAAd,KAA2BhG,SAA/B,EAA0C;AACxC,QAAIgG,QAAQ,GAAGiB,YAAY,CAAC,WAAD,EAAczH,aAAa,CAACwG,QAA5B,EAAsC/B,SAAtC,CAA3B;;AACA,QAAI+B,QAAQ,CAACsF,WAAT,CAAqBC,aAAzB,EAAwC;AACtC;AACAvF,MAAAA,QAAQ,GAAGA,QAAQ,CAACwF,KAAT,EAAX;AACD;;AACDjM,IAAAA,SAAS,CAACkM,aAAV,GAA0BjM,aAAa,CAACwG,QAAxC;AACAzG,IAAAA,SAAS,CAACyG,QAAV,GAAqBA,QAArB;AACD,GARD,MAQO;AACLzG,IAAAA,SAAS,CAACyG,QAAV,GAAqBhE,kBAAkB,EAAvC;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,AAAO,SAASyC,SAAT,CAAmBiH,QAAnB,EAA6BzH,SAA7B,EAAwC;AAAA,MACrCpJ,IADqC,GACnBoJ,SADmB,CACrCpJ,IADqC;AAAA,MAC/BE,OAD+B,GACnBkJ,SADmB,CAC/BlJ,OAD+B;AAG7C,MAAM6O,IAAI,GAAG,IAAI+B,WAAJ,CAASD,QAAQ,CAAC3R,IAAlB,CAAb;AACA6P,EAAAA,IAAI,CAACpR,IAAL,GAAYyL,SAAS,CAAC2H,SAAtB,CAJ6C;AAM7C;;AACA,MAAMC,iBAAiB,GAAG,EAA1B;;AAP6C,6BAQpCxS,CARoC;AAS3CwS,IAAAA,iBAAiB,CAAC9K,IAAlB,CACE,IAAIlD,OAAJ,CAAY,UAACnG,OAAD,EAAUoG,MAAV,EAAqB;AAC/B,UAAM0B,aAAa,GAAGkM,QAAQ,CAACI,UAAT,CAAoBzS,CAApB,CAAtB,CAD+B;;AAG/B,UAAMkG,SAAS,GAAG,IAAIwM,gBAAJ,CAAcvM,aAAa,CAACzF,IAAd,IAAsB2R,QAAQ,CAAC3R,IAA/B,IAAuCV,CAArD,CAAlB;AACAkG,MAAAA,SAAS,CAAC/G,IAAV,GAAiByL,SAAS,CAAC2H,SAA3B;AACArM,MAAAA,SAAS,CAACyM,iBAAV,GAA8BxM,aAAa,CAACyM,IAAd,IAAsB,IAAtB,GAA6BC,wBAAiB,CAACC,SAA/C,GAA2D3M,aAAa,CAACyM,IAAvG;;AACA,UAAIzM,aAAa,CAACpE,cAAd,CAA6B,SAA7B,CAAJ,EAA6C;AAC3CmE,QAAAA,SAAS,CAAC6M,OAAV,GAAoB,EAApB;AACCxC,QAAAA,IAAD,CAAchI,OAAd,GAAwB8J,QAAQ,CAAC9J,OAAT,IAAoB,IAAIyK,KAAJ,CAAU7M,aAAa,CAAC4M,OAAd,CAAsBrU,MAAhC,EAAwCuU,IAAxC,CAA6C,CAA7C,CAA5C;AACD;;AACD,UAAIC,aAAJ;;AACA,UAAI/M,aAAa,CAACuF,UAAd,IAA4BvF,aAAa,CAACuF,UAAd,CAAyB3C,iBAAiB,CAACM,0BAA3C,CAAhC,EAAwG;AACtG,YAAM8J,eAAe,GAAG7J,gBAAgB,CAACD,0BAAzC;AACA,YAAMpD,SAAS,GAAGE,aAAa,CAACuF,UAAd,CAAyB3C,iBAAiB,CAACM,0BAA3C,CAAlB;AACA6J,QAAAA,aAAa,GAAGC,eAAe,CAACnN,KAAhB,CAAsBC,SAAtB,EAAiCC,SAAjC,EAA4CC,aAA5C,EAA2D3E,IAA3D,EAAiEE,OAAjE,CAAhB;AACD,OAJD,MAIO;AACLwR,QAAAA,aAAa,GAAG5C,oBAAoB,CAACC,IAAD,EAAOrK,SAAP,EAAkBC,aAAlB,EAAiC3E,IAAjC,EAAuCE,OAAvC,EAAgDkJ,SAAhD,CAApC;AACD;;AACDsI,MAAAA,aAAa,CACV9L,IADH,CACQ,UAACgM,kBAAD,EAAwB;AAC5BC,AACArB,QAAAA,sBAAsB,CAACoB,kBAAD,EAAqBjN,aAArB,EAAoCyE,SAApC,CAAtB;AACAvM,QAAAA,OAAO,CAAC+U,kBAAD,CAAP;AACD,OALH,WAMS,UAACE,CAAD,EAAO;AACZ7O,QAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,OARH;AASD,KA3BD,CADF;AAT2C;;AAQ7C,OAAK,IAAItT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqS,QAAQ,CAACI,UAAT,CAAoB/T,MAAxC,EAAgDsB,CAAC,EAAjD,EAAqD;AAAA,UAA5CA,CAA4C;AA+BpD;;AACD,SAAOwE,OAAO,CAACgI,GAAR,CAAYgG,iBAAZ,EAA+BpL,IAA/B,CAAoC,UAACqL,UAAD,EAAgB;AACzD,SAAK,IAAIzS,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGyS,UAAU,CAAC/T,MAA/B,EAAuCsB,GAAC,EAAxC,EAA4C;AAC1CuQ,MAAAA,IAAI,CAACkC,UAAL,CAAgB/K,IAAhB,CAAqB+K,UAAU,CAACzS,GAAD,CAA/B;AACD;;AACD,WAAOuQ,IAAP;AACD,GALM,CAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAAS/E,cAAT,CAAwB+H,aAAxB,EAAuC3I,SAAvC,EAAkD;AAAA,MAC/CpJ,IAD+C,GAC7BoJ,SAD6B,CAC/CpJ,IAD+C;AAAA,MACzCE,OADyC,GAC7BkJ,SAD6B,CACzClJ,OADyC;AAEvD,MAAM8R,YAAY,GAAGD,aAAa,CAACE,QAAd,IAA0B,EAA/C;AACA,MAAMC,YAAY,GAAGH,aAAa,CAACI,QAAd,IAA0B,EAA/C;AAEA,MAAMC,YAAY,GAAGpS,IAAI,CAAC4I,UAAL,CAAgB2B,OAAhB,CAAwBwH,aAAxB,CAArB;AACA,MAAMM,aAAa,GAAG,IAAIC,oBAAJ,CAAkBP,aAAa,CAAC7S,IAAd,uBAAkCkT,YAAlC,CAAlB,CAAtB;AAEA,MAAIG,QAAQ,GAAG,CAAC,CAAhB;AACA,MAAIC,aAAa,GAAG,CAAC,CAArB,CATuD;;AAWvD,OAAK,IAAIhU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwT,YAAY,CAAC9U,MAAjC,EAAyCsB,CAAC,EAA1C,EAA8C;AAC5C,QAAMiU,WAAW,GAAGT,YAAY,CAACxT,CAAD,CAAhC,CAD4C;;AAG5C,QAAMkU,aAAa,GAAG1S,IAAI,CAAC4E,SAAL,CAAe6N,WAAW,CAACE,KAA3B,CAAtB;AACA,QAAMC,cAAc,GAAG5S,IAAI,CAAC4E,SAAL,CAAe6N,WAAW,CAACI,MAA3B,CAAvB;AACA,QAAMF,KAAK,GAAG5S,eAAe,CAACC,IAAD,EAAO0S,aAAP,EAAsBxS,OAAtB,CAA7B;AACA,QAAM2S,MAAM,GAAG9S,eAAe,CAACC,IAAD,EAAO4S,cAAP,EAAuB1S,OAAvB,CAA9B;AACA,QAAI4S,kBAAkB,GAAG3T,mBAAmB,CAACyT,cAAc,CAACjV,IAAhB,CAA5C;AACA,QAAImV,kBAAkB,GAAGH,KAAK,CAACzV,MAA3B,KAAsC2V,MAAM,CAAC3V,MAAjD,EAAyD4V,kBAAkB,GAAGD,MAAM,CAAC3V,MAAP,GAAgByV,KAAK,CAACzV,MAA3C,CARb;AAW5C;;AACA,QAAI6V,oBAAoB,GAAGC,wBAAiB,CAACC,MAA7C;;AACA,YAAQR,WAAW,CAACS,aAApB;AACE,WAAK,aAAL;AACEH,QAAAA,oBAAoB,GAAGC,wBAAiB,CAACG,WAAzC;AACA;;AACF,WAAK,MAAL;AACEJ,QAAAA,oBAAoB,GAAGC,wBAAiB,CAACI,IAAzC;AACA;AANJ;;AAQA,QAAMC,OAAO,GAAGV,KAAK,CAACA,KAAK,CAACzV,MAAN,GAAe,CAAhB,CAArB;;AACA,QAAImW,OAAO,GAAGd,QAAd,EAAwB;AACtBA,MAAAA,QAAQ,GAAGc,OAAX;AACAb,MAAAA,aAAa,GAAGhU,CAAhB;AACD;;AACD6T,IAAAA,aAAa,CAACiB,UAAd,CAAyBX,KAAzB,EAAgCE,MAAhC,EAAwCC,kBAAxC,EAA4DC,oBAA5D;AACD;;AAEDV,EAAAA,aAAa,CAACG,aAAd,GAA8BA,aAA9B;AACAH,EAAAA,aAAa,CAACE,QAAd,GAAyBA,QAAzB;;AAEA,OAAK,IAAI/T,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG0T,YAAY,CAAChV,MAAjC,EAAyCsB,GAAC,EAA1C,EAA8C;AAC5C,QAAM+U,WAAW,GAAGrB,YAAY,CAAC1T,GAAD,CAAhC;AACA,QAAMgV,MAAM,GAAGD,WAAW,CAACC,MAA3B;AACA,QAAMC,YAAY,GAAGF,WAAW,CAACG,OAAjC;AACA,QAAMC,UAAU,GAAGvH,YAAY,CAAC,OAAD,EAAUoH,MAAM,CAAC5E,IAAjB,EAAuBxF,SAAvB,CAA/B;AACA,QAAMwK,UAAU,GAAGjN,eAAe,CAAC6M,MAAM,CAACK,IAAR,CAAlC;AAEAxB,IAAAA,aAAa,CAACyB,UAAd,CAAyBL,YAAzB,EAAuCE,UAAU,CAACzU,IAAlD,EAAwD0U,UAAxD;AACD;;AAED,SAAO5Q,OAAO,CAACnG,OAAR,CAAgBwV,aAAhB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASxI,SAAT,CAAmBkK,QAAnB,EAA6B3K,SAA7B,EAAwC;AAC7C;AACA,MAAM4K,MAAM,GAAG,IAAIC,aAAJ,CAAWF,QAAQ,CAAC7U,IAAT,wBAA8B8H,SAAS,EAAvC,CAAX,EAAwDoC,SAAS,CAACD,MAAlE,CAAf;;AAEA,MAAI4K,QAAQ,CAACxT,cAAT,CAAwB,QAAxB,CAAJ,EAAuC;AACrC,QAAM2T,CAAC,GAAGH,QAAQ,CAACI,MAAnB;AACA,QAAMC,GAAG,GAAG,IAAI1F,aAAJ,EAAZ;AACA0F,IAAAA,GAAG,CAACC,eAAJ,CAAoBH,CAApB;AACA,QAAMI,GAAG,GAAG,IAAI5R,cAAJ,EAAZ;AACA,QAAMoE,KAAK,GAAG,IAAIpE,cAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAd;AACA,QAAM6R,GAAG,GAAG,IAAIC,iBAAJ,EAAZ;AACAJ,IAAAA,GAAG,CAACK,SAAJ,CAAcH,GAAd,EAAmBC,GAAnB,EAAwBzN,KAAxB;AAEAkN,IAAAA,MAAM,CAACpE,QAAP,GAAkB0E,GAAlB;AACAN,IAAAA,MAAM,CAACnN,QAAP,GAAkB0N,GAAlB;AACAP,IAAAA,MAAM,CAAClN,KAAP,GAAeA,KAAf;AACD,GAZD,MAYO;AACL,SAAK,IAAM9H,GAAX,IAAkB2H,eAAlB,EAAmC;AACjC,UAAIoN,QAAQ,CAACxT,cAAT,CAAwBvB,GAAxB,CAAJ,EAAkC;AAChC,YAAM0V,MAAM,GAAG/N,eAAe,CAAC3H,GAAD,CAA9B;;AACA,YAAI0V,MAAM,KAAK,SAAf,EAA0B;AACxBV,UAAAA,MAAM,CAACU,MAAD,CAAN,GAAiBX,QAAQ,CAAC/U,GAAD,CAAzB;AACD,SAFD,MAEO;AACL,cAAM2V,GAAG,GAAGZ,QAAQ,CAAC/U,GAAD,CAApB;AACA,cAAM4V,GAAG,GAAGD,GAAG,CAACzX,MAAhB;AACA,cAAM6B,GAAG,GAAGiV,MAAM,CAACU,MAAD,CAAlB;;AACA,cAAIE,GAAG,KAAK,CAAZ,EAAe;AACb7V,YAAAA,GAAG,CAACiP,QAAJ,CAAa2G,GAAG,CAAC,CAAD,CAAhB,EAAqBA,GAAG,CAAC,CAAD,CAAxB;AACD,WAFD,MAEO,IAAIC,GAAG,KAAK,CAAZ,EAAe;AACpB7V,YAAAA,GAAG,CAACiP,QAAJ,CAAa2G,GAAG,CAAC,CAAD,CAAhB,EAAqBA,GAAG,CAAC,CAAD,CAAxB,EAA6BA,GAAG,CAAC,CAAD,CAAhC;AACD,WAFM,MAEA,IAAIC,GAAG,KAAK,CAAZ,EAAe;AACpB7V,YAAAA,GAAG,CAACiP,QAAJ,CAAa2G,GAAG,CAAC,CAAD,CAAhB,EAAqBA,GAAG,CAAC,CAAD,CAAxB,EAA6BA,GAAG,CAAC,CAAD,CAAhC,EAAqCA,GAAG,CAAC,CAAD,CAAxC;AACD;;AACDX,UAAAA,MAAM,CAACU,MAAD,CAAN,GAAiB3V,GAAjB;AACD;AACF;AACF;AACF;;AAED,MAAIgV,QAAQ,CAAC7J,UAAb,EAAyB;AACvB,QAAIzC,UAAU,IAAIsM,QAAQ,CAAC7J,UAAT,CAAoBzC,UAAtC,EAAkD;AAChD,UAAMoN,QAAQ,GAAGd,QAAQ,CAAC7J,UAAT,CAAoBzC,UAApB,CAA+BqN,KAAhD;;AACA,UAAID,QAAQ,KAAK1P,SAAjB,EAA4B;AAC1B,YAAM2P,KAAK,GAAG1I,YAAY,CAAC,QAAD,EAAWyI,QAAX,EAAqBzL,SAArB,CAA1B;AACA,YAAI0L,KAAJ,EAAWd,MAAM,CAACe,YAAP,CAAoBD,KAAK,CAACE,OAA1B,EAAmCF,KAAK,CAACG,KAAzC;AACZ;AACF;AACF;;AAED,SAAOjS,OAAO,CAACnG,OAAR,CAAgBmX,MAAhB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASlK,UAAT,CAAoBoL,SAApB,EAA+B9L,SAA/B,EAA0C;AAC/C,MAAM+L,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAI3W,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0W,SAAS,CAACE,KAAV,CAAgBlY,MAApC,EAA4CsB,CAAC,EAA7C,EAAiD;AAC/C,QAAMoQ,IAAI,GAAGxC,YAAY,CAAC,OAAD,EAAU8I,SAAS,CAACE,KAAV,CAAgB5W,CAAhB,CAAV,EAA8B4K,SAA9B,CAAzB;AACA+L,IAAAA,UAAU,CAACjP,IAAX,CAAgB0I,IAAhB;AACD;;AAED,MAAIsG,SAAS,CAAChL,UAAd,EAA0B;AACxB,QAAIzC,UAAU,IAAIyN,SAAS,CAAChL,UAAV,CAAqBzC,UAAvC,EAAmD;AACjD,UAAMoN,QAAQ,GAAGK,SAAS,CAAChL,UAAV,CAAqBzC,UAArB,CAAgCqN,KAAjD;;AACA,UAAID,QAAQ,KAAK1P,SAAjB,EAA4B;AAC1B,YAAM2P,KAAK,GAAG1I,YAAY,CAAC,QAAD,EAAWyI,QAAX,EAAqBzL,SAArB,CAA1B;AACA,YAAI0L,KAAJ,EAAWK,UAAU,CAAC,CAAD,CAAV,CAAcJ,YAAd,CAA2BD,KAAK,CAACE,OAAjC,EAA0CF,KAAK,CAACG,KAAhD;AACZ;AACF;AACF;;AAED,SAAOjS,OAAO,CAACnG,OAAR,CAAgB;AACrBuY,IAAAA,KAAK,EAAED;AADc,GAAhB,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAAS/I,YAAT,CAAsBlN,IAAtB,EAA4BmW,GAA5B,EAAiCjM,SAAjC,EAAqE;AAAA,MAAzBkM,OAAyB,uEAAN,IAAM;AAAA,MAClEjM,KADkE,GACxDD,SADwD,CAClEC,KADkE;AAG1E,MAAMkM,OAAO,GAAGD,OAAO,GAAGjM,KAAK,CAACnK,IAAD,CAAL,CAAYhC,MAAZ,GAAqBmY,GAArB,GAA2B,CAA9B,GAAkCA,GAAzD;AACA,SAAOhM,KAAK,CAACnK,IAAD,CAAL,CAAYqW,OAAZ,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,AAAO,SAAStL,eAAT,CAAyBb,SAAzB,EAA8D;AAAA;;AAAA,MAC3DC,KAD2D,GAC3CD,SAD2C,CAC3DC,KAD2D;AAAA,MACpDrJ,IADoD,GAC3CoJ,SAD2C,CACpDpJ,IADoD;AAGnE,MAAMwV,SAAS,GAAGxV,IAAI,CAACoV,KAAL,IAAc,EAAhC;AAEA/L,EAAAA,KAAK,CAACZ,YAAN,GAAqB2D,YAAY,CAAC,QAAD,iBAAWpM,IAAI,CAACyV,KAAhB,qDAAyB,CAAzB,EAA4BrM,SAA5B,CAAjC;;AAEA,OAAK,IAAI5K,CAAC,GAAGgX,SAAS,CAACtY,MAAV,GAAmB,CAAhC,EAAmCsB,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;AAC9C,QAAMuV,QAAQ,GAAGyB,SAAS,CAAChX,CAAD,CAA1B;AACA,QAAMoQ,IAAI,GAAGxC,YAAY,CAAC,OAAD,EAAU5N,CAAV,EAAa4K,SAAb,CAAzB;;AAEA,QAAI2K,QAAQ,CAACxT,cAAT,CAAwB,UAAxB,CAAJ,EAAyC;AACvC,UAAMmV,QAAQ,GAAG3B,QAAQ,CAAC2B,QAAT,IAAqB,EAAtC;;AACA,WAAK,IAAItU,CAAC,GAAGsU,QAAQ,CAACxY,MAAT,GAAkB,CAA/B,EAAkCkE,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7C,YAAMuU,SAAS,GAAGvJ,YAAY,CAAC,OAAD,EAAUsJ,QAAQ,CAACtU,CAAD,CAAlB,EAAuBgI,SAAvB,CAA9B;AAEAwF,QAAAA,IAAI,CAACgH,QAAL,CAAcD,SAAd;AACD;AACF,KAX6C;;;AAc9C,QAAI5B,QAAQ,CAACxT,cAAT,CAAwB,MAAxB,CAAJ,EAAqC;AACnC;AACA,UAAMwO,IAAI,GAAG3C,YAAY,CAAC,QAAD,EAAW2H,QAAQ,CAAChF,IAApB,EAA0B3F,SAA1B,CAAzB;;AAEA,UAAI2K,QAAQ,CAACxT,cAAT,CAAwB,MAAxB,KAAmCwO,IAAI,CAACxO,cAAL,CAAoB,SAApB,CAAvC,EAAuE;AACrE,YAAM6N,IAAI,GAAGhC,YAAY,CAAC,OAAD,EAAU2H,QAAQ,CAAC3F,IAAnB,EAAyBhF,SAAzB,CAAzB;AACA,YAAMrC,OAAO,GAAGgI,IAAI,CAAChI,OAArB;AACA6H,QAAAA,IAAI,CAACmG,YAAL,CAAkBc,0BAAlB,EAAuC;AAAEzH,UAAAA,IAAI,EAAJA,IAAF;AAAQW,UAAAA,IAAI,EAAJA,IAAR;AAAchI,UAAAA,OAAO,EAAPA;AAAd,SAAvC;AACD,OAJD,MAIO;AACL6H,QAAAA,IAAI,CAACmG,YAAL,CAAkBe,mBAAlB,EAAgC;AAAE/G,UAAAA,IAAI,EAAJA;AAAF,SAAhC;AACD;AACF;AACF,GAjCkE;;;AAoCnE,MAAMqG,KAAK,GAAG/L,KAAK,CAACZ,YAAN,CAAmB2M,KAAjC;;AACA,MAAIA,KAAK,CAAClY,MAAN,KAAiB,CAArB,EAAwB;AACtBmM,IAAAA,KAAK,CAACb,gBAAN,GAAyB4M,KAAK,CAAC,CAAD,CAA9B;AACD,GAFD,MAEO;AACL,QAAMW,QAAQ,GAAG,IAAI9B,aAAJ,CAAW,IAAX,EAAiB7K,SAAS,CAACD,MAA3B,CAAjB;;AACA,SAAK,IAAI3K,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG4W,KAAK,CAAClY,MAA1B,EAAkCsB,GAAC,EAAnC,EAAuC;AACrCuX,MAAAA,QAAQ,CAACH,QAAT,CAAkBR,KAAK,CAAC5W,GAAD,CAAvB;AACD;;AACD6K,IAAAA,KAAK,CAACb,gBAAN,GAAyBuN,QAAzB;AACD;;AAED,MAAMC,QAAQ,GAAG3M,KAAK,CAACb,gBAAN,CAAuBuM,YAAvB,CAAoCkB,gBAApC,CAAjB;AACA,MAAMrN,UAAU,GAAGS,KAAK,CAACT,UAAzB;;AACA,MAAIA,UAAJ,EAAgB;AACdA,IAAAA,UAAU,CAACR,OAAX,CAAmB,UAAC8N,IAAD,EAAyB;AAC1CF,MAAAA,QAAQ,CAACG,gBAAT,CAA0BD,IAA1B,EAAgCA,IAAI,CAAChX,IAArC;AACD,KAFD;AAGD;;AACD,SAAOkK,SAAS,CAACC,KAAjB;AACD;;AC9yBD;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAAS+M,QAAT,CAAkBC,GAAlB,EAAuB;AAC5B,MAAMC,aAAa,GAAG,CAAtB;AACA,MAAMC,gBAAgB,GAAG,UAAzB,CAF4B;;AAG5B,MAAMC,iBAAiB,GAAG,EAA1B;AACA,MAAMC,eAAe,GAAG;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,GAAG,EAAE;AAAzB,GAAxB;AAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaR,GAAb,CAAjB,CAN4B;;AAS5B,MAAMS,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEH,QAAQ,CAACI,SAAT,CAAmB,CAAnB,EAAsB,IAAtB,CADM;AAEb1N,IAAAA,OAAO,EAAEsN,QAAQ,CAACI,SAAT,CAAmBV,aAAnB,EAAkC,IAAlC,CAFI;AAGbpZ,IAAAA,MAAM,EAAE0Z,QAAQ,CAACI,SAAT,CAAmB,IAAIV,aAAvB,EAAsC,IAAtC;AAHK,GAAf;;AAMA,MAAIQ,MAAM,CAACC,KAAP,KAAiBR,gBAArB,EAAuC;AACrCU,IAAAA,OAAO,CAACxM,KAAR,CAAc,4DAA4DqM,MAAM,CAACC,KAAP,CAAaG,QAAb,CAAsB,EAAtB,CAA1E;AACA,WAAO,IAAP;AACD,GAlB2B;;;AAqB5B,MAAIC,WAAW,GAAGP,QAAQ,CAACI,SAAT,CAAmBR,iBAAnB,EAAsC,IAAtC,CAAlB;AACA,MAAIY,SAAS,GAAGR,QAAQ,CAACI,SAAT,CAAmBR,iBAAiB,GAAGF,aAAvC,EAAsD,IAAtD,CAAhB,CAtB4B;;AAyB5B,MAAIc,SAAS,KAAKX,eAAe,CAACC,IAAlC,EAAwC;AACtCO,IAAAA,OAAO,CAACxM,KAAR,CAAc,0DAA0D2M,SAAS,CAACF,QAAV,CAAmB,EAAnB,CAAxE;AACA,WAAO,IAAP;AACD;;AAED,MAAMG,QAAQ,GAAG,IAAIja,UAAJ,CAAeiZ,GAAf,EAAoBG,iBAAiB,GAAG,IAAIF,aAA5C,EAA2Da,WAA3D,CAAjB;AACA,MAAMnX,IAAI,GAAG0W,IAAI,CAAClS,KAAL,CAAWrG,UAAU,CAACkZ,QAAD,CAArB,CAAb,CA/B4B;;AAkC5B,MAAMnX,OAAO,GAAG,EAAhB;AACA,MAAIM,UAAU,GAAGgW,iBAAiB,GAAG,IAAIF,aAAxB,GAAwCa,WAAzD;;AAEA,SAAO3W,UAAU,GAAGsW,MAAM,CAAC5Z,MAA3B,EAAmC;AACjCia,IAAAA,WAAW,GAAGP,QAAQ,CAACI,SAAT,CAAmBxW,UAAnB,EAA+B,IAA/B,CAAd;AACA4W,IAAAA,SAAS,GAAGR,QAAQ,CAACI,SAAT,CAAmBxW,UAAU,GAAG8V,aAAhC,EAA+C,IAA/C,CAAZ;;AAEA,QAAIc,SAAS,KAAKX,eAAe,CAACE,GAAlC,EAAuC;AACrCM,MAAAA,OAAO,CAACxM,KAAR,CAAc,0DAA0D2M,SAAS,CAACF,QAAV,CAAmB,EAAnB,CAAxE;AACA,aAAO,IAAP;AACD;;AAED,QAAMI,aAAa,GAAG9W,UAAU,GAAG,IAAI8V,aAAvC;AACA,QAAM7Y,MAAM,GAAG4Y,GAAG,CAACtZ,KAAJ,CAAUua,aAAV,EAAyBA,aAAa,GAAGH,WAAzC,CAAf;AACAjX,IAAAA,OAAO,CAACgG,IAAR,CAAazI,MAAb;AAEA+C,IAAAA,UAAU,IAAI2W,WAAW,GAAG,IAAIb,aAAhC;AACD,GAnD2B;;;AAsD5B,SAAO;AACLtW,IAAAA,IAAI,EAAJA,IADK;AAELE,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;;;IC3DYqX,UAAb,aADC/a,qBAAc,CAACC,gBAAS,CAAC+a,MAAX,EAAmB,CAAC,MAAD,EAAS,KAAT,CAAnB,CACf;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACUxT,OADV;;AAAA,UAkBUyT,WAlBV,GAkBwB,UAAC9a,IAAD,EAAiB+a,eAAjB,EAAmF;AACvG,aAAO,MAAKha,OAAL,CAAmBf,IAAI,CAACN,GAAxB,oCACFM,IADE;AAELgB,QAAAA,IAAI,EAAE;AAFD,UAGJiI,IAHI,CAGC,UAAC+R,GAAD;AAAA,eAAS,MAAKC,kBAAL,CAAwBjb,IAAxB,EAA8Bgb,GAA9B,EAAmCD,eAAnC,CAAT;AAAA,OAHD,CAAP;AAID,KAvBH;;AAAA,UAyBUG,UAzBV,GAyBuB,UAAClb,IAAD,EAAiB+a,eAAjB,EAAmF;AACtG,aAAO,MAAKha,OAAL,CAAmBf,IAAI,CAACN,GAAxB,oCACFM,IADE;AAELgB,QAAAA,IAAI,EAAE;AAFD,UAIJiI,IAJI,CAICwQ,QAJD,EAKJxQ,IALI,CAKC,UAAC+R,GAAD,EAAS;AACb,iDAAYA,GAAZ;AAAiB3T,UAAAA,OAAO,EAAErH,IAAI,CAACN,GAA/B;AAAoCqb,UAAAA,eAAe,EAAfA;AAApC;AACD,OAPI,EAQJ9R,IARI,CAQC,MAAKkS,WARN,CAAP;AASD,KAnCH;;AAAA,UA0EUA,WA1EV,GA0EwB,gBAK0E;AAAA,UAJ9F9X,IAI8F,QAJ9FA,IAI8F;AAAA,UAH9FE,OAG8F,QAH9FA,OAG8F;AAAA,UAF9F8D,OAE8F,QAF9FA,OAE8F;AAAA,UAD9F0T,eAC8F,QAD9FA,eAC8F;;AAC9F,UAAI1X,IAAI,CAAC+X,MAAT,EAAiB;AACf,eAAO/U,OAAO,CAACgI,GAAR,CACLhL,IAAI,CAAC+X,MAAL,CAAYC,GAAZ,CAAgB,iBAAoD;AAAA,cAAjDC,GAAiD,SAAjDA,GAAiD;AAAA,cAAhCpT,eAAgC,SAA5C1E,UAA4C;AAAA,cAAf+X,QAAe,SAAfA,QAAe;;AAClE,cAAID,GAAJ,EAAS;AACP;AACA,mBAAOP,eAAe,CAACS,IAAhB,CAAqB;AAAE9b,cAAAA,GAAG,EAAE0H,gBAAgB,CAACC,OAAD,EAAUiU,GAAV,CAAvB;AAAuCta,cAAAA,IAAI,EAAElB,gBAAS,CAAC2b;AAAvD,aAArB,CAAP;AACD,WAHD,MAGO;AACL;AACA,gBAAMjY,UAAU,GAAGH,IAAI,CAACI,WAAL,CAAiByE,eAAjB,CAAnB;AACA,gBAAMuK,UAAU,GAAG/N,aAAa,CAAClB,UAAD,EAAaD,OAAb,CAAhC;AACA,mBAAO4C,eAAe,CAACsM,UAAD,EAAa8I,QAAb,CAAf,CAAsCtS,IAAtC,CAA2C,UAACyS,KAAD,EAAW;AAC3D,kBAAMC,GAAG,GAAG,IAAIF,gBAAJ,CAAcC,KAAK,CAACE,KAApB,EAA2BF,KAAK,CAACG,MAAjC,EAAyCrT,SAAzC,EAAoDA,SAApD,EAA+DuS,eAAe,CAACvO,MAA/E,CAAZ;AACAmP,cAAAA,GAAG,CAACG,cAAJ,CAAmBJ,KAAnB;AACAC,cAAAA,GAAG,CAACI,eAAJ;AACA,qBAAOJ,GAAP;AACD,aALM,CAAP;AAMD;AACF,SAfD,CADK,EAiBL1S,IAjBK,CAiBA,UAAC+C,QAAD,EAAc;AACnB,iBAAO;AAAE3I,YAAAA,IAAI,EAAJA,IAAF;AAAQE,YAAAA,OAAO,EAAPA,OAAR;AAAiByI,YAAAA,QAAQ,EAARA;AAAjB,WAAP;AACD,SAnBM,CAAP;AAoBD;;AACD,aAAO3F,OAAO,CAACnG,OAAR,CAAgB;AAAEmD,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,OAAO,EAAPA;AAAR,OAAhB,CAAP;AACD,KAvGH;;AAAA;AAAA;;AAAA;AAAA;AAAA,yBAEOvD,IAFP,EAEuB+a,eAFvB,EAEqF;AAAA;;AACjF,aAAO,IAAI9a,mBAAJ,CAAiB,UAACC,OAAD,EAAUoG,MAAV,EAAqB;AAC3C,YAAM0V,mBAAmB,GAAG,MAAI,CAACC,KAAL,CAAWjc,IAAI,CAACN,GAAhB,IAAuB,MAAI,CAACwb,UAA5B,GAAyC,MAAI,CAACJ,WAA1E;AACAkB,QAAAA,mBAAmB,CAAChc,IAAD,EAAO+a,eAAP,CAAnB,CACG9R,IADH,CACQ,UAAC+R,GAAD,EAAS;AACb1O,UAAAA,SAAS,CAAC0O,GAAD,EAAMD,eAAe,CAACvO,MAAtB,CAAT,CAAuCvD,IAAvC,CAA4C,UAAC5F,IAAD,EAAU;AACpDnD,YAAAA,OAAO,CAACmD,IAAD,CAAP;AACD,WAFD;AAGD,SALH,WAMS,UAAC8R,CAAD,EAAO;AACZmF,UAAAA,OAAO,CAACxM,KAAR,CAAcqH,CAAd;AACA7O,UAAAA,MAAM,CAAC,kCAAkCtG,IAAI,CAACN,GAAxC,CAAN;AACD,SATH;AAUD,OAZM,CAAP;AAaD;AAhBH;AAAA;AAAA,0BAqCgBA,GArChB,EAqCsC;AAClC,aAAOA,GAAG,CAAC6H,SAAJ,CAAc7H,GAAG,CAAC8H,WAAJ,CAAgB,GAAhB,IAAuB,CAArC,MAA4C,KAAnD;AACD;AAED;AACF;AACA;AACA;AACA;;AA7CA;AAAA;AAAA,uCA+CIxH,IA/CJ,EAgDIqD,IAhDJ,EAiDI0X,eAjDJ,EAkDiC;AAC7B;AACA,aAAO,KAAKmB,YAAL,CAAkBlc,IAAI,CAACN,GAAvB,EAA4B2D,IAA5B,EAAkC0X,eAAlC,EAAmD9R,IAAnD,CAAwD,KAAKkS,WAA7D,CAAP;AACD;AArDH;AAAA;AAAA,iCAuDuB9T,OAvDvB,EAuDwChE,IAvDxC,EAuDoD0X,eAvDpD,EAuDmH;AAC/G,UAAI1X,IAAI,CAACE,OAAT,EAAkB;AAChB,eAAO8C,OAAO,CAACgI,GAAR,CACLhL,IAAI,CAACE,OAAL,CAAa8X,GAAb,CAAiB,UAACrb,IAAD,EAAU;AACzB,cAAIA,IAAI,YAAYmc,WAApB,EAAiC;AAC/B,mBAAO9V,OAAO,CAACnG,OAAR,CAAgBF,IAAhB,CAAP;AACD;;AACD,iBAAO+a,eAAe,CAACS,IAAhB,CAAkC;AACvC9b,YAAAA,GAAG,EAAE0H,gBAAgB,CAACC,OAAD,EAAUrH,IAAI,CAACsb,GAAf,CADkB;AAEvCta,YAAAA,IAAI,EAAElB,gBAAS,CAACC;AAFuB,WAAlC,CAAP;AAID,SARD,CADK,EAULkJ,IAVK,CAUA,UAAC1F,OAAD,EAAa;AAClB,iBAAO;AAAEA,YAAAA,OAAO,EAAPA,OAAF;AAAWF,YAAAA,IAAI,EAAJA,IAAX;AAAiBgE,YAAAA,OAAO,EAAPA,OAAjB;AAA0B0T,YAAAA,eAAe,EAAfA;AAA1B,WAAP;AACD,SAZM,CAAP;AAaD;;AACD,aAAO1U,OAAO,CAACnG,OAAR,CAAgB;AAAEmH,QAAAA,OAAO,EAAPA,OAAF;AAAWhE,QAAAA,IAAI,EAAJA,IAAX;AAAiB0X,QAAAA,eAAe,EAAfA;AAAjB,OAAhB,CAAP;AACD;AAxEH;;AAAA;AAAA,EAAgC9Z,aAAhC;;;ICJMmb,uBADLvc,qBAAc,CAACC,gBAAS,CAACia,IAAX,EAAiB,CAAC,MAAD,CAAjB,EAA2B,KAA3B;;;;;;;;;;;;;yBAER/Z,MAAsC;AACzC,aAAO,KAAKe,OAAL,CAAaf,IAAI,CAACN,GAAlB,oCACFM,IADE;AAELgB,QAAAA,IAAI,EAAE;AAFD,SAAP;AAID;;;;EANsBC;;ACHzB;AACA;AACA;AACA;AAGA,AAEA,IAAMob,UAAU,GAAG,KAAK,KAAK,CAA7B;AAEA;;AACA,IAAMC,aAAa,GAAG,CAAtB;;AAKA,SAASC,UAAT,CAAoBC,YAApB,EAAgDC,WAAhD,EAAgF;AAC9E,MAAMC,OAAO,GAAG,EAAhB,CAD8E;;AAI9E,MAAIC,UAAU,GAAGN,UAAU,GAAGG,YAAY,CAACI,mBAA3C;AACA,MAAIhB,KAAK,GAAGY,YAAY,CAACK,UAAzB;AACA,MAAIhB,MAAM,GAAGW,YAAY,CAACM,WAA1B;AACA,MAAIC,WAAW,GAAGN,WAAW,GAAGD,YAAY,CAACQ,oBAAhB,GAAuC,CAApE;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,WAA5B,EAAyCE,KAAK,EAA9C,EAAkD;AAChD,QAAIC,SAAS,GAAG,IAAIC,UAAJ,CAAeX,YAAY,CAAC1b,MAA5B,EAAoC6b,UAApC,EAAgD,CAAhD,EAAmD,CAAnD,CAAhB,CADgD;;AAEhDA,IAAAA,UAAU,IAAI,CAAd,CAFgD;;AAIhD,SAAK,IAAIS,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGZ,YAAY,CAACa,aAAvC,EAAsDD,IAAI,EAA1D,EAA8D;AAC5D,UAAIE,SAAS,GAAG,IAAI7c,UAAJ,CAAe+b,YAAY,CAAC1b,MAA5B,EAAoC6b,UAApC,EAAgDO,SAAhD,CAAhB;AAEAR,MAAAA,OAAO,CAACnT,IAAR,CAAa;AAAEgD,QAAAA,IAAI,EAAE+Q,SAAR;AAAmB1B,QAAAA,KAAK,EAAEA,KAA1B;AAAiCC,QAAAA,MAAM,EAAEA;AAAzC,OAAb;AAEAc,MAAAA,UAAU,IAAIO,SAAd;AACAP,MAAAA,UAAU,IAAI,IAAK,CAACO,SAAS,GAAG,CAAb,IAAkB,CAArC,CAN4D;AAO7D;;AACDtB,IAAAA,KAAK,GAAG2B,IAAI,CAACnK,GAAL,CAAS,GAAT,EAAcwI,KAAK,GAAG,GAAtB,CAAR;AACAC,IAAAA,MAAM,GAAG0B,IAAI,CAACnK,GAAL,CAAS,GAAT,EAAcyI,MAAM,GAAG,GAAvB,CAAT;AACD;;AAED,SAAOa,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASc,OAAT,CAAiBjR,IAAjB,EAA6C;AAC3C,MAAIA,IAAI,CAACjI,UAAL,IAAmB,EAAvB,EAA2B;AACzB;AACA,QAAMmZ,UAAU,GAAG,IAAIhd,UAAJ,CAAe8L,IAAf,EAAqB,CAArB,EAAwB,EAAxB,CAAnB;;AACA,QACEkR,UAAU,CAAC,CAAD,CAAV,KAAkB,IAAlB,IACAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IADlB,IAEAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IAFlB,IAGAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IAHlB,IAIAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IAJlB,IAKAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IALlB,IAMAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IANlB,IAOAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IAPlB,IAQAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IARlB,IASAA,UAAU,CAAC,CAAD,CAAV,KAAkB,IATlB,IAUAA,UAAU,CAAC,EAAD,CAAV,KAAmB,IAVnB,IAWAA,UAAU,CAAC,EAAD,CAAV,KAAmB,IAZrB,EAaE;AACA,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;;AAED,SAASC,eAAT,CAAyBC,cAAzB,EAA+D;AAC7D,UAAQA,cAAR;AACE;AACA;AACA;AACA,SAAKC,wCAAiC,CAACC,iBAAvC;AACE,aAAOC,oBAAa,CAACC,IAArB;;AACF,SAAKH,wCAAiC,CAACI,kBAAvC;AACE,aAAOF,oBAAa,CAACG,IAArB;;AACF,SAAKL,wCAAiC,CAACM,cAAvC;AACE,aAAOJ,oBAAa,CAACK,QAArB;;AACF,SAAKP,wCAAiC,CAACQ,SAAvC;AACE,aAAON,oBAAa,CAACO,QAArB;;AACF,SAAKT,wCAAiC,CAACU,6BAAvC;AACE,aAAOR,oBAAa,CAACS,UAArB;;AACF,SAAKX,wCAAiC,CAACY,cAAvC;AACE,aAAOV,oBAAa,CAACW,UAArB;;AACF,SAAKb,wCAAiC,CAACc,oBAAvC;AACE,aAAOZ,oBAAa,CAACa,UAArB;;AACF,SAAKf,wCAAiC,CAACgB,qBAAvC;AACE,aAAOd,oBAAa,CAACe,WAArB;;AACF,SAAKjB,wCAAiC,CAACkB,oBAAvC;AACE,aAAOhB,oBAAa,CAACiB,UAArB;;AACF,SAAKnB,wCAAiC,CAACoB,qBAAvC;AACE,aAAOlB,oBAAa,CAACmB,WAArB;;AACF,SAAKrB,wCAAiC,CAACsB,iBAAvC;AACE,aAAOpB,oBAAa,CAACqB,QAArB;;AACF,SAAKvB,wCAAiC,CAACwB,iBAAvC;AACE,aAAOtB,oBAAa,CAACuB,QAArB;;AACF,SAAKzB,wCAAiC,CAAC0B,iBAAvC;AACE,aAAOxB,oBAAa,CAACyB,QAArB;;AACF,SAAK3B,wCAAiC,CAAC4B,iBAAvC;AACE,aAAO1B,oBAAa,CAAC2B,QAArB;;AACF,SAAK7B,wCAAiC,CAAC8B,mBAAvC;AACE,aAAO5B,oBAAa,CAAC6B,UAArB;;AACF,SAAK/B,wCAAiC,CAACgC,mBAAvC;AACE,aAAO9B,oBAAa,CAAC+B,UAArB;;AACF;AACE,UAAMC,UAAe,GAAGlC,wCAAiC,CAACD,cAAD,CAAzD;AACA,YAAM,IAAI1W,KAAJ,yDAA2D6Y,UAA3D,EAAN;AAtCJ;AAwCD;AACD;AACA;AACA;AACA;;;AACA,AAAO,IAAMC,6BAA6B,GAAG;AAC3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACElY,EAAAA,KAT2C,iBAUzC/G,MAVyC,EAWzCkf,aAXyC,EAYzCC,WAZyC,EAc3B;AAAA,QADdC,eACc,uEADa,KACb;;AACd,QAAI,CAAC1C,OAAO,CAAC1c,MAAD,CAAZ,EAAsB;AACpB,YAAM,IAAImG,KAAJ,CAAU,iFAAV,CAAN;AACD,KAHa;;;AAMd,QAAMkZ,QAAQ,GAAG7e,WAAW,CAAC8C,iBAA7B;AACA,QAAMgc,cAAc,GAAG,IAAIlG,QAAJ,CAAapZ,MAAb,EAAqB,EAArB,EAAyB,KAAKqf,QAA9B,CAAvB;AACA,QAAME,UAAU,GAAGD,cAAc,CAAC/F,SAAf,CAAyB,CAAzB,EAA4B,IAA5B,CAAnB;AACA,QAAMiG,YAAY,GAAGD,UAAU,KAAK,UAApC;AAEA,QAAME,YAA0B,GAAG;AACjCzf,MAAAA,MAAM,EAAEA,MADyB;AAEjC0f,MAAAA,MAAM,EAAEJ,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CAFyB;AAE6B;AAC9DG,MAAAA,UAAU,EAAEL,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CAHqB;AAGiC;AAClEI,MAAAA,QAAQ,EAAEN,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CAJuB;AAI+B;AAChEK,MAAAA,gBAAgB,EAAEP,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CALe;AAKuC;AACxEM,MAAAA,oBAAoB,EAAER,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CANW;AAM2C;AAC5EzD,MAAAA,UAAU,EAAEuD,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CAPqB;AAOiC;AAClExD,MAAAA,WAAW,EAAEsD,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CARoB;AAQkC;AACnEO,MAAAA,UAAU,EAAET,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CATqB;AASiC;AAClEQ,MAAAA,qBAAqB,EAAEV,cAAc,CAAC/F,SAAf,CAAyB,IAAI8F,QAA7B,EAAuCG,YAAvC,CAVU;AAU4C;AAC7EjD,MAAAA,aAAa,EAAE+C,cAAc,CAAC/F,SAAf,CAAyB,KAAK8F,QAA9B,EAAwCG,YAAxC,CAXkB;AAWqC;AACtEtD,MAAAA,oBAAoB,EAAEoD,cAAc,CAAC/F,SAAf,CAAyB,KAAK8F,QAA9B,EAAwCG,YAAxC,CAZW;AAY4C;AAC7E1D,MAAAA,mBAAmB,EAAEwD,cAAc,CAAC/F,SAAf,CAAyB,KAAK8F,QAA9B,EAAwCG,YAAxC,CAbY;AAa2C;AAC5E;AACAS,MAAAA,QAAQ,EAAEzE;AAfuB,KAAnC,CAXc;;AA8Bd,QAAIiE,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,YAAM,IAAIvZ,KAAJ,CAAU,6CAAV,CAAN;AACD,KAFD,MAEO;AACL;AACAsZ,MAAAA,YAAY,CAACvD,oBAAb,GAAoCO,IAAI,CAACnK,GAAL,CAAS,CAAT,EAAYmN,YAAY,CAACvD,oBAAzB,CAApC;AACD;;AAED,QAAIuD,YAAY,CAACzD,WAAb,KAA6B,CAA7B,IAAkCyD,YAAY,CAACM,UAAb,KAA4B,CAAlE,EAAqE;AACnE,YAAM,IAAI5Z,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,QAAIsZ,YAAY,CAACO,qBAAb,KAAuC,CAA3C,EAA8C;AAC5C,YAAM,IAAI7Z,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,QAAIsZ,YAAY,CAAClD,aAAb,KAA+B2C,aAAnC,EAAkD;AAChD,YAAM,IAAI/Y,KAAJ,CAAU,6BAA6B+Y,aAA7B,GAA6C,cAA7C,GAA8DO,YAAY,CAAClD,aAArF,CAAN;AACD;;AAED,QAAI4C,WAAJ,EAAiB;AACfM,MAAAA,YAAY,CAAC7D,OAAb,GAAuBH,UAAU,CAACgE,YAAD,EAAe,IAAf,CAAjC;AACD;;AAED,QAAIL,eAAJ,EAAqB;AACnBK,MAAAA,YAAY,CAACS,YAAb,GAA4BtD,eAAe,CAAC6C,YAAY,CAACI,gBAAd,CAA3C;AACD;;AACD,WAAOJ,YAAP;AACD;AAvE0C,CAAtC;;ACpHA,SAASU,cAAT,CAAwB1U,IAAxB,EAAkE;AACvE,MAAM2U,GAAG,GAAGnB,6BAA6B,CAAClY,KAA9B,CAAoC0E,IAApC,EAA0C,CAA1C,EAA6C,IAA7C,EAAmD,IAAnD,CAAZ;AACA,SAAO;AACLmQ,IAAAA,OAAO,EAAEwE,GAAG,CAACxE,OADR;AAELsE,IAAAA,YAAY,EAAEE,GAAG,CAACF,YAFb;AAGLrD,IAAAA,cAAc,EAAEuD,GAAG,CAACP,gBAHf;AAIL/E,IAAAA,KAAK,EAAEsF,GAAG,CAACrE,UAJN;AAKLhB,IAAAA,MAAM,EAAEqF,GAAG,CAACpE;AALP,GAAP;AAOD;AAED,AAAO,SAASqE,YAAT,CAAsBC,SAAtB,EAAoE;AACzE,MAAMC,YAAY,GAAG,EAArB;AACA,MAAI1D,cAAJ;AACA,MAAIqD,YAAJ;AACA,MAAIpF,KAAJ;AACA,MAAIC,MAAJ;;AACA,OAAK,IAAIha,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuf,SAAS,CAAC7gB,MAA9B,EAAsCsB,CAAC,EAAvC,EAA2C;AACzC,QAAMqf,GAAG,GAAGnB,6BAA6B,CAAClY,KAA9B,CAAoCuZ,SAAS,CAACvf,CAAD,CAA7C,EAAkD,CAAlD,EAAqD,IAArD,EAA2D,IAA3D,CAAZ;AACAwf,IAAAA,YAAY,CAAC9X,IAAb,CAAkB2X,GAAG,CAACxE,OAAtB;;AACA,QAAI7a,CAAC,KAAK,CAAV,EAAa;AACX+Z,MAAAA,KAAK,GAAGsF,GAAG,CAACrE,UAAZ;AACAhB,MAAAA,MAAM,GAAGqF,GAAG,CAACpE,WAAb;AACAa,MAAAA,cAAc,GAAGuD,GAAG,CAACP,gBAArB;AACAK,MAAAA,YAAY,GAAGE,GAAG,CAACF,YAAnB;AACD;AACF;;AACD,SAAO;AACLK,IAAAA,YAAY,EAAZA,YADK;AAELL,IAAAA,YAAY,EAAZA,YAFK;AAGLrD,IAAAA,cAAc,EAAdA,cAHK;AAIL/B,IAAAA,KAAK,EAALA,KAJK;AAKLC,IAAAA,MAAM,EAANA;AALK,GAAP;AAOD;;;ICzBKyF,0BADLzhB,qBAAc,CAACC,gBAAS,CAACyhB,OAAX,EAAoB,EAApB;;;;;;;;;;;;;yBAERvhB,MAAgB+a,iBAAgE;AAAA;;AACnF,aAAO,IAAI9a,mBAAJ,CAAiB,UAACC,OAAD,EAAUoG,MAAV,EAAqB;AAC3CD,QAAAA,OAAO,CAACgI,GAAR,CACErO,IAAI,CAACwhB,IAAL,CAAUnG,GAAV,CAAc,UAAC3b,GAAD;AAAA,iBACZ,KAAI,CAACqB,OAAL,CAA0BrB,GAA1B,oCACKM,IADL;AAEEgB,YAAAA,IAAI,EAAE;AAFR,aADY;AAAA,SAAd,CADF,EAQGiI,IARH,CAQQ,UAACsD,IAAD,EAAU;AACd,cAAMkV,UAAU,GAAGN,YAAY,CAAC5U,IAAD,CAA/B;AADc,cAENqP,KAFM,GAEgC6F,UAFhC,CAEN7F,KAFM;AAAA,cAECyF,YAFD,GAEgCI,UAFhC,CAECJ,YAFD;AAAA,cAEeL,YAFf,GAEgCS,UAFhC,CAEeT,YAFf;AAGd,cAAMU,MAAM,GAAGL,YAAY,CAAC,CAAD,CAAZ,CAAgB9gB,MAAhB,GAAyB,CAAxC;AACA,cAAM6Q,OAAO,GAAG,IAAIuQ,qBAAJ,CAAmB/F,KAAnB,EAA0BoF,YAA1B,EAAwCU,MAAxC,EAAgD3G,eAAe,CAACvO,MAAhE,CAAhB;;AAEA,eAAK,IAAI4Q,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG,CAA1B,EAA6BA,IAAI,EAAjC,EAAqC;AACnC,gBAAM7c,MAAM,GAAG8gB,YAAY,CAACjE,IAAD,CAAZ,CAAmB7c,MAAlC;;AAEA,iBAAK,IAAIqhB,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGrhB,MAAlC,EAA0CqhB,QAAQ,EAAlD,EAAsD;AAAA,0CACpBP,YAAY,CAACjE,IAAD,CAAZ,CAAmBwE,QAAnB,CADoB;AAAA,kBAC5CrV,KAD4C,yBAC5CA,IAD4C;AAAA,kBACtCqP,MADsC,yBACtCA,KADsC;AAAA,kBAC/BC,MAD+B,yBAC/BA,MAD+B;AAGpDzK,cAAAA,OAAO,CAACyQ,cAAR,CAAuBC,sBAAe,CAACC,SAAhB,GAA4B3E,IAAnD,EAAyD7Q,KAAzD,EAA+DqV,QAA/D,EAAyE,CAAzE,EAA4E,CAA5E,EAA+EhG,MAA/E,EAAsFC,MAAtF;AACD;AACF;;AAED3b,UAAAA,OAAO,CAACkR,OAAD,CAAP;AACD,SAzBH,WA0BS,UAAC+D,CAAD,EAAO;AACZ7O,UAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,SA5BH;AA6BD,OA9BM,CAAP;AA+BD;;;;EAjCyBlU;;;ICTf+gB,SAAb,aADCniB,qBAAc,CAACC,gBAAS,CAACmiB,GAAX,EAAgB,CAAC,KAAD,CAAhB,CACf;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACOjiB,IADP,EACuB+a,eADvB,EACkF;AAAA;;AAC9E,aAAO,IAAI9a,mBAAJ,CAAiB,UAACC,OAAD,EAAUoG,MAAV,EAAqB;AAC3C,QAAA,KAAI,CAACvF,OAAL,CAA0Bf,IAAI,CAACN,GAA/B,oCACKM,IADL;AAEEgB,UAAAA,IAAI,EAAE;AAFR,YAIGiI,IAJH,CAIQ,UAACiZ,GAAD,EAAS;AACb,cAAMT,UAAU,GAAGR,cAAc,CAACiB,GAAD,CAAjC;AADa,cAELtG,KAFK,GAEoC6F,UAFpC,CAEL7F,KAFK;AAAA,cAEEC,MAFF,GAEoC4F,UAFpC,CAEE5F,MAFF;AAAA,cAEUa,OAFV,GAEoC+E,UAFpC,CAEU/E,OAFV;AAAA,cAEmBsE,YAFnB,GAEoCS,UAFpC,CAEmBT,YAFnB;AAGb,cAAMU,MAAM,GAAGhF,OAAO,CAACnc,MAAR,GAAiB,CAAhC;AACA,cAAM6Q,OAAO,GAAG,IAAIqK,gBAAJ,CAAcG,KAAd,EAAqBC,MAArB,EAA6BmF,YAA7B,EAA2CU,MAA3C,EAAmD3G,eAAe,CAACvO,MAAnE,CAAhB;;AAEA,eAAK,IAAIoV,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGlF,OAAO,CAACnc,MAA1C,EAAkDqhB,QAAQ,EAA1D,EAA8D;AAAA,oCAC5BlF,OAAO,CAACkF,QAAD,CADqB;AAAA,gBACpDhG,MADoD,qBACpDA,KADoD;AAAA,gBAC7CC,OAD6C,qBAC7CA,MAD6C;AAAA,gBACrCtP,IADqC,qBACrCA,IADqC;AAE5D6E,YAAAA,OAAO,CAACyQ,cAAR,CAAuBtV,IAAvB,EAA6BqV,QAA7B,EAAuC,CAAvC,EAA0C,CAA1C,EAA6ChG,MAA7C,EAAoDC,OAApD;AACD;;AAED3b,UAAAA,OAAO,CAACkR,OAAD,CAAP;AACD,SAhBH,WAiBS,UAAC+D,CAAD,EAAO;AACZ7O,UAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,SAnBH;AAoBD,OArBM,CAAP;AAsBD;AAxBH;;AAAA;AAAA,EAA+BlU,aAA/B;;;ICDMkhB,4BADLtiB,qBAAc,CAACC,gBAAS,CAAC2b,SAAX,EAAsB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAtB;;;;;;;;;;;;;yBAERzb,MAAgB+a,iBAA2D;AAAA;;AAC9E,aAAO,IAAI9a,mBAAJ,CAAiB,UAACC,OAAD,EAAUoG,MAAV,EAAqB;AAC3C,QAAA,KAAI,CAACvF,OAAL,CAA+Bf,IAAI,CAACN,GAApC,oCACKM,IADL;AAEEgB,UAAAA,IAAI,EAAE;AAFR,YAIGiI,IAJH,CAIQ,UAACyS,KAAD,EAAW;AACf,cAAMtK,OAAO,GAAG,IAAIqK,gBAAJ,CAAcC,KAAK,CAACE,KAApB,EAA2BF,KAAK,CAACG,MAAjC,EAAyCrT,SAAzC,EAAoDA,SAApD,EAA+DuS,eAAe,CAACvO,MAA/E,CAAhB;AACA,cAAI,CAAC4E,OAAO,CAACgR,UAAb,EAAyB;AACzBhR,UAAAA,OAAO,CAAC0K,cAAR,CAAuBJ,KAAvB;AACAtK,UAAAA,OAAO,CAAC2K,eAAR;AAEA7b,UAAAA,OAAO,CAACkR,OAAD,CAAP;AACD,SAXH,WAYS,UAAC+D,CAAD,EAAO;AACZ7O,UAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,SAdH;AAeD,OAhBM,CAAP;AAiBD;;;;EAnB2BlU;;;ICSxBohB,8BADLxiB,qBAAc,CAACC,gBAAS,CAACwiB,WAAX,EAAwB,CAAC,EAAD,CAAxB;;;;;;;;;;;;;yBAERtiB,MAAgB+a,iBAAgE;AAAA;;AACnF,aAAO,IAAI9a,mBAAJ,CAAiB,UAACC,OAAD,EAAUoG,MAAV,EAAqB;AAC3CD,QAAAA,OAAO,CAACgI,GAAR,CACErO,IAAI,CAACwhB,IAAL,CAAUnG,GAAV,CAAc,UAAC3b,GAAD;AAAA,iBACZ,KAAI,CAACqB,OAAL,CAA+BrB,GAA/B,oCACKM,IADL;AAEEgB,YAAAA,IAAI,EAAE;AAFR,aADY;AAAA,SAAd,CADF,EAQGiI,IARH,CAQQ,UAACmS,MAAD,EAAY;AAAA,yBACUA,MAAM,CAAC,CAAD,CADhB;AAAA,cACRQ,KADQ,YACRA,KADQ;AAAA,cACDC,MADC,YACDA,MADC;;AAGhB,cAAID,KAAK,KAAKC,MAAd,EAAsB;AACpBvB,YAAAA,OAAO,CAACxM,KAAR,CAAc,sDAAd;AACA;AACD;;AAED,cAAM6N,GAAG,GAAG,IAAIgG,qBAAJ,CAAmB/F,KAAnB,EAA0BpT,SAA1B,EAAqCA,SAArC,EAAgDuS,eAAe,CAACvO,MAAhE,CAAZ;AAEA,cAAI,CAACmP,GAAG,CAACyG,UAAT,EAAqB;;AAErB,eAAK,IAAIG,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAG,CAApC,EAAuCA,SAAS,EAAhD,EAAoD;AAClD5G,YAAAA,GAAG,CAACG,cAAJ,CAAmBgG,sBAAe,CAACC,SAAhB,GAA4BQ,SAA/C,EAA0DnH,MAAM,CAACmH,SAAD,CAAhE,EAA6E,CAA7E;AACD;;AAED5G,UAAAA,GAAG,CAACI,eAAJ;AACA7b,UAAAA,OAAO,CAACyb,GAAD,CAAP;AACD,SA1BH,WA2BS,UAACxG,CAAD,EAAO;AACZ7O,UAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,SA7BH;AA8BD,OA/BM,CAAP;AAgCD;;;;EAlC6BlU;;ACThC;AACA;AACA;AACA;AACA;AACA,IAAauhB,SAAb;AAAA;;AAAA;;AAAA;AAAA;AAAA,wBACc;AACV,aAAO,KAAKC,MAAZ;AACD,KAHH;AAAA,sBAKYngB,KALZ,EAKiC;AAC7B,UAAIA,KAAK,IAAIA,KAAK,CAACuJ,gBAAN,KAA2B,KAAK6W,QAA7C,EAAuD;AACrD;AACD;;AACD,UAAI,CAAC,KAAKC,aAAV,EAAyB;AACtB,aAAKD,QAAN,CAAuBE,aAAvB;;AACA,YAAItgB,KAAK,KAAK,IAAd,EAAoB;AAClB,cAAI,KAAKogB,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAcG,OAAd;AACD;;AACD,eAAKH,QAAL,GAAgBpgB,KAAK,CAACuJ,gBAAN,CAAuBmI,KAAvB,EAAhB;AACA,eAAK8O,SAAL,GAAiB,KAAKJ,QAAL,CAAcK,YAAd,CAA2BzJ,gBAA3B,CAAjB;AACA,eAAKjC,MAAL,CAAY4B,QAAZ,CAAqB,KAAKyJ,QAA1B;AACD;AACF;;AACD,WAAKD,MAAL,GAAcngB,KAAd;AACD;AArBH;AAAA;AAAA,wBAuBiB;AACb,aAAO,KAAKwgB,SAAZ;AACD;AAzBH;AAAA;AAAA,wBA2BiB;AACb,aAAO,KAAKE,SAAZ;AACD,KA7BH;AAAA,sBA+Be1gB,KA/Bf,EA+B8B;AAC1B,UAAI,KAAKwgB,SAAT,EAAoB;AAClB;AACA,YAAIxgB,KAAJ,EAAW;AACT,eAAKwgB,SAAL,CAAeG,iBAAf,CAAiC3gB,KAAjC,EAAwC;AACtC4gB,YAAAA,QAAQ,EAAE,KAAKC;AADuB,WAAxC;AAGD,SAJD,MAIO;AACL,eAAKL,SAAL,CAAeM,IAAf,CAAoB,KAApB;AACD;AACF;;AACD,WAAKJ,SAAL,GAAiB1gB,KAAjB;AACD;AA3CH;AAAA;AAAA,wBA6Ca;AACT,aAAO,KAAK6gB,KAAZ;AACD,KA/CH;AAAA,sBAiDW7gB,KAjDX,EAiD4B;AACxB,UAAI,KAAKwgB,SAAL,IAAkB,KAAKO,QAA3B,EAAqC;AACnC;AACA,aAAKP,SAAL,CAAeG,iBAAf,CAAiC,KAAKD,SAAtC,EAAiD;AAC/CE,UAAAA,QAAQ,EAAE5gB;AADqC,SAAjD;AAGD;;AACD,WAAK6gB,KAAL,GAAa7gB,KAAb;AACD;AAzDH;;AAoEE,qBAAY+U,MAAZ,EAAoBiB,KAApB,EAA2B;AAAA;;AAAA;;AACzB,8BAAMjB,MAAN,EAAciB,KAAd;AADyB,UATpBwK,SASoB;AAAA,UARpBQ,eAQoB;AAAA,UANnBb,MAMmB;AAAA,UALnBC,QAKmB;AAAA,UAJnBS,KAImB;AAAA,UAHnBH,SAGmB;AAAA,UAFnBL,aAEmB,GAFM,KAEN;AAAA,uBAGyBrK,KAHzB,CAGjB5L,KAHiB;AAAA,QAGjBA,KAHiB,6BAGT,IAHS;AAAA,QAGH2W,QAHG,GAGyB/K,KAHzB,CAGH+K,QAHG;AAAA,QAGOE,IAHP,GAGyBjL,KAHzB,CAGOiL,IAHP;AAAA,QAGaC,OAHb,GAGyBlL,KAHzB,CAGakL,OAHb;;AAIzB,QAAIA,OAAJ,EAAa;AACX,UAAMC,QAAQ,GAAI,MAAKC,MAAN,CAAqBC,YAAtC;;AACA,UAAIF,QAAJ,EAAc;AACZ,cAAKf,QAAL,GAAgB,MAAKrL,MAAL,CAAYuM,UAAZ,CAAuBH,QAAvB,CAAhB;AACD;AACF;;AACD,QAAI,CAAC,MAAKf,QAAV,EAAoB;AAClB,UAAMe,SAAQ,kBAAWI,IAAI,CAACC,GAAL,EAAX,CAAd;;AACC,YAAKJ,MAAN,CAAqBC,YAArB,GAAoCF,SAApC;AACA,YAAKf,QAAL,GAAgB,MAAKrL,MAAL,CAAY0M,WAAZ,CAAwBN,SAAxB,CAAhB;AACA,YAAKd,aAAL,GAAqB,KAArB;AACD,KALD,MAKO;AACL,YAAKA,aAAL,GAAqB,IAArB;AACD;;AAED,UAAKjW,KAAL,GAAaA,KAAb;AACA,UAAK6W,IAAL,GAAYA,IAAZ;AACA,UAAKF,QAAL,GAAgBA,QAAhB;;AAEA,UAAKW,gBAAL,CAAsB,SAAtB,EAAiC,YAAM;AACrC,YAAKtB,QAAL,CAAcuB,QAAd,GAAyB,IAAzB;AACD,KAFD;;AAGA,UAAKD,gBAAL,CAAsB,UAAtB,EAAkC,YAAM;AACtC,YAAKtB,QAAL,CAAcuB,QAAd,GAAyB,KAAzB;AACD,KAFD;;AA1ByB;AA6B1B;;AAjGH;AAAA,EAA+BC,gBAA/B;;ICJaC,aAAb;AAAA;AAAA;;AAAA,SACUC,iBADV,GAC2C,IAAIC,GAAJ,EAD3C;AAAA,SAEUC,OAFV,GAEkC,EAFlC;AAAA;;AAAA;AAAA;AAAA,6BAIWC,MAJX,EAI2B;AACvB,WAAKH,iBAAL,CAAuBI,GAAvB,CAA2BD,MAA3B;AACD;AANH;AAAA;AAAA,yBAQOE,KARP,EAQqB;AAAA,iDACE,KAAKL,iBAAL,CAAuBvT,MAAvB,EADF;AAAA;;AAAA;AACjB,4DAAoD;AAAA,cAA3C0T,MAA2C;;AAClD,cAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,YAAAA,MAAM,GAAGA,MAAM,CAACE,KAAD,CAAf;AACD;;AACD,eAAKH,OAAL,CAAa/a,IAAb,CAAkBgb,MAAlB;AACD;AANgB;AAAA;AAAA;AAAA;AAAA;AAOlB;AAfH;AAAA;AAAA,4BAiBU;AACN,WAAKH,iBAAL,CAAuBM,KAAvB;AACA,WAAKJ,OAAL,GAAe,EAAf;AACD;AApBH;AAAA;AAAA,8BAsBYjN,MAtBZ,EAsB4B;AACxB,WAAKsN,cAAL,CAAoB,WAApB,EAAiCtN,MAAjC;AACD;AAxBH;AAAA;AAAA,mCA0ByB9U,IA1BzB,EA0B0D;AAAA,wCAANqiB,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACtD,WAAKN,OAAL,CAAa7Y,OAAb,CAAqB,UAAC8Y,MAAD;AAAA,eAAYA,MAAM,CAAChiB,IAAD,CAAN,IAAiBgiB,MAAM,CAAChiB,IAAD,CAAP,OAACgiB,MAAD,EAAyBK,IAAzB,CAA5B;AAAA,OAArB;AACD;AA5BH;;AAAA;AAAA;AAoDA,AAAO,SAASC,UAAT,CAAoBC,OAApB,EAA8G;AACnH,SAAO,UAAUjO,MAAV,EAAuBkO,YAAvB,EAA6CC,UAA7C,EAAuF;AAC5F,QAAMC,MAAM,GAAGD,UAAU,CAAC1iB,KAA1B;;AAEA0iB,IAAAA,UAAU,CAAC1iB,KAAX,GAAmB,YAA0B;AAAA;AAAA;;AAAA,yCAAbsiB,IAAa;AAAbA,QAAAA,IAAa;AAAA;;AAC3CE,MAAAA,OAAO,CAACI,MAAR,IAAkB,8BAAKT,KAAL,CAAWU,aAAX,EAAyBR,cAAzB,+BAAwCG,OAAO,CAACI,MAAhD,SAA2DN,IAA3D,EAAlB;AACA,aAAOve,OAAO,CAACnG,OAAR,CAAgB+kB,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAhB,EAA+Cpc,IAA/C,CAAoD,UAACqc,SAAD,EAAe;AACxER,QAAAA,OAAO,CAACS,KAAR,IAAiB,KAAI,CAACd,KAAL,CAAWU,aAAX,CAAyBR,cAAzB,CAAwCG,OAAO,CAACS,KAAhD,EAAuDD,SAAvD,CAAjB;AACA,eAAOA,SAAP;AACD,OAHM,CAAP;AAID,KAND;AAOD,GAVD;AAWD;;ACpEM,SAASE,mBAAT,CAA6BC,QAA7B,EAA8CC,YAA9C,EAAoEC,WAApE,EAAyF;AAC9F,MAAID,YAAY,KAAKC,WAAjB,IAAgCA,WAAW,KAAK,IAAhD,IAAwDA,WAAW,KAAKnd,SAA5E,EAAuF;AACrF;AACD;;AAH6F,aAI5C,CAACid,QAAQ,CAACE,WAAD,CAAT,EAAwBF,QAAQ,CAACC,YAAD,CAAhC,CAJ4C;AAI7FD,EAAAA,QAAQ,CAACC,YAAD,CAJqF;AAIrED,EAAAA,QAAQ,CAACE,WAAD,CAJ6D;AAK/F;AAED,AAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAuC;AAC5C,SAAOA,MAAM,IAAIA,MAAM,CAAC7kB,IAAP,KAAgB,OAAjC;AACD;AAED,AAAO,SAAS8kB,aAAT,CAAuB1jB,GAAvB,EAAgD;AACrD,MAAM5B,MAAM,GAAG,EAAf;AACA,MAAMulB,SAAS,GAAGxa,MAAM,CAACya,cAAP,CAAsB5jB,GAAtB,CAAlB;AACA,MAAM6jB,8BAA8B,GAAG1a,MAAM,CAAC2a,yBAAP,CAAiCH,SAAjC,CAAvC;;AACA,qCAAqCxa,MAAM,CAAC4a,OAAP,CAAeF,8BAAf,CAArC,qCAAqF;AAAA;AAAA,QAAzEG,QAAyE;AAAA,QAA/DpB,UAA+D;;AACnF,QAAI,OAAOA,UAAU,CAACqB,GAAlB,KAA0B,UAA9B,EAA0C;AACxC7lB,MAAAA,MAAM,CAAC+I,IAAP,CAAY6c,QAAZ;AACD;AACF;;AACD,SAAO5lB,MAAP;AACD;AAQD;AACA;AACA;AACA;AACA;;AACA,AAAO,IAAM8lB,0BAA0B,GAAG;AACxCC,EAAAA,IAAI,EAAE,CADkC;AAExCC,EAAAA,IAAI,EAAE,CAFkC;AAGxCC,EAAAA,KAAK,EAAE,CAHiC;AAIxCC,EAAAA,GAAG,EAAE,CAJmC;AAKxCC,EAAAA,IAAI,EAAE;AALkC,CAAnC;;ICrBeC,cAAtB;AAAA;AAAA;AAAA,8BAmBsB;AAnBtB;AAAA;;AAIE;AACF;AACA;AANA,wBAOiB;AACb,aAAO,KAAKC,SAAZ;AACD;AATH;AAAA;AAAA,wBAW4B;AACxB,aAAO,KAAKC,KAAZ;AACD;AAbH;AAAA;AAAA,wBAe0B;AACtB,aAAO,KAAKC,kBAAZ;AACD;AAjBH;;AAqBE,0BAAsBhM,eAAtB,EAAwE8L,SAAxE,EAAyF;AAAA;;AAAA,SAAnE9L,eAAmE,GAAnEA,eAAmE;AAAA,SAAjB8L,SAAiB,GAAjBA,SAAiB;AAAA,SApB/EC,KAoB+E,GApBxD,EAoBwD;AAAA,SAnB/EC,kBAmB+E,GAnBnC,EAmBmC;AACvF,SAAKC,OAAL;AACD;;AAvBH;AAAA;AAAA,8CA2BInnB,cA3BJ,EA4BIonB,WA5BJ,EA6BIxC,KA7BJ,EA8ByC;AAAA;;AACrC,aAAO,IAAIpe,OAAJ,CAAY,UAACnG,OAAD,EAAUoG,MAAV,EAAqB;AACtC,QAAA,KAAI,CAACkV,IAAL,CAAU3b,cAAV,EAA0BonB,WAA1B,EAAuCxC,KAAvC,EACGxb,IADH,CACQ,YAAM;AACV/I,UAAAA,OAAO,CAAC;AACNuM,YAAAA,SAAS,EAAE,CAAC,KAAD,CADL;AAENya,YAAAA,SAAS,EAAE;AACTniB,cAAAA,KAAK,EAAE,CADE;AAETuT,cAAAA,KAAK,EAAE;AAFE;AAFL,WAAD,CAAP;AAOD,SATH,WAUS,UAACnD,CAAD,EAAO;AACZ7O,UAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,SAZH;AAaD,OAdM,CAAP;AAeD;AA9CH;AAAA;AAAA,+BAgDkB;AACd,aAAO,EAAP;AACD;AAlDH;AAAA;AAAA,2BAoDe;AApDf;AAAA;AAAA,6BAqDiB;AArDjB;AAAA;AAAA,2BAuDS9S,GAvDT,EAuDsBC,KAvDtB,EAuDkC;AAC9B,UAAIsjB,OAAO,CAACtjB,KAAD,CAAX,EAAoB;AAClB,YAAM6kB,QAAQ,GAAG,KAAKpM,eAAL,CAAqBsL,GAArB,CAAyB/jB,KAAK,CAAC8kB,EAA/B,CAAjB;;AACA,YAAID,QAAJ,EAAc;AACZ,eAAKN,SAAL,CAAexkB,GAAf,IAAsB8kB,QAAQ,CAACA,QAA/B;AACD,SAFD,MAEO;AACLzZ,UAAAA,aAAM,CAACG,IAAP,2BAA+B,KAAKwZ,IAAL,CAAU9kB,IAAzC,6CAAgFD,KAAK,CAAC8kB,EAAtF;AACD;AACF,OAPD,MAOO;AACL,aAAKP,SAAL,CAAexkB,GAAf,IAAsBC,KAAtB;AACD;AACF;AAlEH;AAAA;AAAA,+BAoEaD,GApEb,EAoE0BC,KApE1B,EAoEsC;AAClC,WAAKwkB,KAAL,CAAWzkB,GAAX,IAAkBC,KAAlB;AACD;AAtEH;AAAA;AAAA,gCAwEc;AAxEd;;AAAA;AAAA;;ICPaglB,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACOvM,eADP,EACyCkM,WADzC,EACmExC,KADnE,EAC2G;AAAA;;AACvG,aAAO,IAAIpe,OAAJ,CAAY,UAACnG,OAAD,EAAUoG,MAAV,EAAqB;AAAA;;AACtC,YAAI5G,GAAJ;;AACA,YAAI,KAAI,CAACqb,eAAL,CAAqBwM,oBAArB,KAA6CN,WAA7C,aAA6CA,WAA7C,6CAA6CA,WAAW,CAAE3O,KAA1D,gFAA6C,mBAAoBkP,WAAjE,0DAA6C,sBAAiCC,YAAjC,CAA8ClnB,MAA3F,CAAJ,EAAuG;AACrG,cAAMmnB,GAAG,GAAGjD,KAAK,CAACjY,MAAN,CAAamb,iBAAzB;AACA,cAAMF,YAAY,GAAGR,WAAW,CAAC3O,KAAZ,CAAkBkP,WAAlB,CAA8BC,YAAnD;AACAA,UAAAA,YAAY,CAACG,IAAb,CAAkB,UAACC,CAAD,EAASC,CAAT;AAAA,mBAAoBxB,0BAA0B,CAACuB,CAAC,CAAC7mB,IAAH,CAA1B,GAAqCslB,0BAA0B,CAACwB,CAAC,CAAC9mB,IAAH,CAAnF;AAAA,WAAlB;;AACA,eAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4lB,YAAY,CAAClnB,MAAjC,EAAyCsB,CAAC,EAA1C,EAA8C;AAC5C,gBAAM2lB,WAAW,GAAGC,YAAY,CAAC5lB,CAAD,CAAhC;;AACA,gBAAI2lB,WAAW,CAACO,SAAZ,KAA0B,KAA1B,IAAmCL,GAAG,CAACM,OAAJ,CAAYC,uBAAgB,CAACT,WAAW,CAACxmB,IAAb,CAA5B,CAAvC,EAAwF;AACtFtB,cAAAA,GAAG,GAAG8nB,WAAW,CAAC9nB,GAAlB;AACA;AACD;AACF;AACF;;AAEDA,QAAAA,GAAG,WAAGA,GAAH,uCAAUunB,WAAW,CAACvnB,GAAzB;AAEAqb,QAAAA,eAAe,CACZS,IADH,CACQ9b,GADR,EAEGuJ,IAFH,CAEQ,UAAC+R,GAAD,EAAS;AACb,UAAA,KAAI,CAAC6L,SAAL,GAAiB7L,GAAjB;AACA9a,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD,SALH,WAMS,UAACiV,CAAD,EAAO;AACZ7O,UAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,SARH;AASD,OA1BM,CAAP;AA2BD;AA7BH;AAAA;AAAA,8BA+BY;AACR,UAAI,KAAKgS,QAAT,EAAmB;AACjB,aAAKL,KAAL,CAAWvkB,IAAX,GAAkB,KAAK4kB,QAAL,CAAc5kB,IAAhC;;AACA,YAAI,KAAK4kB,QAAL,CAAczL,KAAlB,EAAyB;AACvB,eAAKoL,KAAL,CAAWpnB,GAAX,GAAiB,KAAKynB,QAAL,CAAczL,KAAd,CAAoB9U,GAArC;AACD;AACF;AACF;AAtCH;;AAAA;AAAA,EAAqCggB,cAArC;;ICAasB,mBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACUC,WADV;AAAA;AAAA;;AAAA;AAAA;AAAA,yBAGOpN,eAHP,EAGyCkM,WAHzC,EAGiG;AAAA;;AAC7F,aAAO,IAAI5gB,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B,YAAMkoB,QAAQ,GAAG,IAAIvd,kBAAJ,CAAgBoc,WAAW,CAAC1kB,IAA5B,CAAjB;AACA,QAAA,MAAI,CAAC4lB,WAAL,GAAmBlB,WAAW,CAAC3O,KAA/B;;AAEA,aAAK,IAAI+P,CAAT,IAAc,MAAI,CAACF,WAAnB,EAAgC;AAC9B,cAAI,CAACvC,OAAO,CAAC,MAAI,CAACuC,WAAL,CAAiBE,CAAjB,CAAD,CAAZ,EAAmC;AACjCD,YAAAA,QAAQ,CAACC,CAAD,CAAR,GAAc,MAAI,CAACF,WAAL,CAAiBE,CAAjB,CAAd;AACD;AACF;;AACD,QAAA,MAAI,CAACxB,SAAL,GAAiBuB,QAAjB;;AACA,QAAA,MAAI,CAACpB,OAAL;;AACA9mB,QAAAA,OAAO,CAAC,MAAD,CAAP;AACD,OAZM,CAAP;AAaD;AAjBH;AAAA;AAAA,8CAoBI6a,eApBJ,EAqBIkM,WArBJ,EAsByC;AAAA;;AACrC,aAAO,IAAI5gB,OAAJ,CAAY,UAACnG,OAAD,EAAUoG,MAAV,EAAqB;AACtC,YAAIgiB,WAAJ;;AACA,YAAIrB,WAAW,CAACE,QAAZ,YAAgCtc,kBAApC,EAAiD;AAC/Cyd,UAAAA,WAAW,GAAG,IAAIjiB,OAAJ,CAAY,UAACnG,OAAD,EAAa;AACrC,YAAA,MAAI,CAAC2mB,SAAL,GAAiBI,WAAW,CAACE,QAA7B;;AACA,YAAA,MAAI,CAACH,OAAL;;AACA9mB,YAAAA,OAAO,CAAC,MAAD,CAAP;AACD,WAJa,CAAd;AAKD,SAND,MAMO,IAAI+mB,WAAW,CAAC3O,KAAhB,EAAuB;AAC5BgQ,UAAAA,WAAW,GAAG,MAAI,CAAC9M,IAAL,CAAUT,eAAV,EAA2BkM,WAA3B,CAAd;AACD,SAFM,MAEA;AACL3gB,UAAAA,MAAM,CAAC,wBAAD,CAAN;AACD;;AACD,YAAIgiB,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAACrf,IAAZ,CAAiB,YAAM;AACrB,gBAAMzI,MAAW,GAAG;AAClBiM,cAAAA,SAAS,EAAE,CAAC,MAAD,CADO;AAElBya,cAAAA,SAAS,EAAE;AACTniB,gBAAAA,KAAK,EAAE,CADE;AAETuT,gBAAAA,KAAK,EAAE;AAFE;AAFO,aAApB;AAQA,gBAAM9J,QAAQ,GAAG,MAAI,CAACqY,SAAtB;AACAf,YAAAA,aAAa,CAAC,MAAI,CAACe,SAAN,CAAb,CAA8Bpb,OAA9B,CAAsC,UAAC8c,IAAD,EAAU;AAC9C,kBAAI,EAAE/Z,QAAQ,CAAC+Z,IAAD,CAAR,YAA0BC,cAA5B,CAAJ,EAA0C;AAC1C,kBAAMC,eAAe,GAAG,IAAInB,eAAJ,CAAoB,MAAI,CAACvM,eAAzB,EAA0CvM,QAAQ,CAAC+Z,IAAD,CAAlD,CAAxB;;AACA,cAAA,MAAI,CAACG,iBAAL,CAAuBnf,IAAvB,CAA4Bkf,eAA5B;;AACAjoB,cAAAA,MAAM,CAACiM,SAAP,CAAiBlD,IAAjB,CAAsBkf,eAAtB;AACAjoB,cAAAA,MAAM,CAAC0mB,SAAP,CAAiB5O,KAAjB,CAAuBiQ,IAAvB,IAA+B;AAC7BxjB,gBAAAA,KAAK,EAAEvE,MAAM,CAACiM,SAAP,CAAiBlM,MAAjB,GAA0B;AADJ,eAA/B;AAGD,aARD;AASAL,YAAAA,OAAO,CAACM,MAAD,CAAP;AACD,WApBD;AAqBD;AACF,OApCM,CAAP;AAqCD;AA5DH;AAAA;AAAA,8BA8DY;AACR,UAAI,KAAK2mB,QAAT,EAAmB;AACjB,aAAKE,IAAL,CAAU9kB,IAAV,GAAiB,KAAK4kB,QAAL,CAAc5kB,IAA/B;AACD;AACF;AAlEH;AAAA;AAAA,+BAoEa;AAAA;;AACT,UAAM/B,MAAM,GAAG,EAAf;AACA,UAAM8X,KAAK,GAAGwN,aAAa,CAAC,KAAKqB,QAAN,CAA3B;AACA7O,MAAAA,KAAK,CAAC7M,OAAN,CAAc,UAACkd,IAAD;AAAA,eAAWnoB,MAAM,CAACmoB,IAAD,CAAN,GAAe,MAAI,CAACxB,QAAL,CAAcwB,IAAd,CAA1B;AAAA,OAAd;AACA,aAAOnoB,MAAP;AACD;AAzEH;AAAA;AAAA,2BA2ES;AAAA;;AACL;AACA,UAAM2mB,QAAQ,GAAG,KAAKN,SAAtB;AACAtb,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAK2c,WAAjB,EAA8B1c,OAA9B,CAAsC,UAAC8c,IAAD,EAAU;AAC9C,YAAMjmB,KAAK,GAAG,MAAI,CAAC6lB,WAAL,CAAiBI,IAAjB,CAAd;;AACA,YAAI3C,OAAO,CAACtjB,KAAD,CAAX,EAAoB;AAClB,cAAMmmB,eAAe,GAAG,MAAI,CAAC1N,eAAL,CAAqBsL,GAArB,CAAyB/jB,KAAK,CAAC8kB,EAA/B,CAAxB;;AACA,cAAIqB,eAAe,IAAIA,eAAe,YAAYnB,eAAlD,EAAmE;AACjEH,YAAAA,QAAQ,CAACoB,IAAD,CAAR,GAAiBE,eAAe,CAACtB,QAAjC;;AACA,YAAA,MAAI,CAACJ,kBAAL,CAAwBxd,IAAxB,CAA6Bkf,eAA7B;AACD,WAHD,MAGO;AACLtB,YAAAA,QAAQ,CAACoB,IAAD,CAAR,GAAiB,IAAjB;AACA7a,YAAAA,aAAM,CAACG,IAAP,gCAAoC,MAAI,CAACwZ,IAAL,CAAU9kB,IAA9C,iCAAwEgmB,IAAxE,8BAA+FjmB,KAAK,CAAC8kB,EAArG;AACD;AACF,SATD,MASO;AACL,cAAImB,IAAI,KAAK,MAAb,EAAqB;AACnB;AACD;;AAEDpB,UAAAA,QAAQ,CAACoB,IAAD,CAAR,GAAiBjmB,KAAjB;AACD;AACF,OAlBD;AAmBD;AAjGH;;AAAA;AAAA,EAAyCskB,cAAzC;;ICAahb,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACOmP,eADP,EACyCkM,WADzC,EACmExC,KADnE,EAC+F;AAAA;;AAC3F,aAAO1J,eAAe,CACnBS,IADI,CACM;AAAE9b,QAAAA,GAAG,EAAEunB,WAAW,CAACvnB,GAAnB;AAAwBsB,QAAAA,IAAI,EAAElB,gBAAS,CAAC+a;AAAxC,OADN,EAEJ5R,IAFI,CAEC,UAAC+R,GAAD,EAAS;AACb,YAAM3X,IAAI,GAAG2X,GAAb;;AACA,YAAIiM,WAAW,CAAC3O,KAAhB,EAAuB;AACrBjV,UAAAA,IAAI,CAACulB,WAAL,GAAoB3B,WAAW,CAAC3O,KAAb,CAA2BsQ,WAA9C;AACD;;AACD,QAAA,KAAI,CAAC/B,SAAL,GAAiBxjB,IAAjB;AACD,OARI,CAAP;AASD;AAXH;AAAA;AAAA,8CAcI0X,eAdJ,EAeIkM,WAfJ,EAgBIxC,KAhBJ,EAiByC;AAAA;;AACrC,aAAO,IAAIpe,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B,QAAA,MAAI,CAACsb,IAAL,CAAUT,eAAV,EAA2BkM,WAA3B,EAAwCxC,KAAxC,EAA+Cxb,IAA/C,CAAoD,YAAM;AACxD,cAAM5F,IAAI,GAAG,MAAI,CAAC8jB,QAAlB;AADwD,cAEhDjb,SAFgD,GAElC7I,IAFkC,CAEhD6I,SAFgD;AAGxD,cAAM2c,YAAY,GAAG,EAArB;AACA,cAAMroB,MAAM,GAAG;AACbiM,YAAAA,SAAS,EAAE,CAAC,MAAD,CADE;AAEbya,YAAAA,SAAS,EAAE;AACTniB,cAAAA,KAAK,EAAE,CADE;AAETuT,cAAAA,KAAK,EAAE;AACLsQ,gBAAAA,WAAW,EAAE;AADR;AAFE;AAFE,WAAf;;AASA,eAAK,IAAI/mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqK,SAAS,CAAC3L,MAA9B,EAAsCsB,CAAC,EAAvC,EAA2C;AACzC,gBAAM2M,QAAQ,GAAGtC,SAAS,CAACrK,CAAD,CAA1B;AAEA,gBAAMinB,gBAAgB,GAAG,IAAIZ,mBAAJ,CAAwB,MAAI,CAACnN,eAA7B,CAAzB;;AACA,YAAA,MAAI,CAACgM,kBAAL,CAAwBxd,IAAxB,CAA6Buf,gBAA7B;;AACAD,YAAAA,YAAY,CAACtf,IAAb,CACEuf,gBAAgB,CAACC,yBAAjB,CAA2ChO,eAA3C,EAA4D;AAC1D/Z,cAAAA,IAAI,EAAE,aADoD;AAE1DuB,cAAAA,IAAI,EAAEiM,QAAQ,CAACjM,IAF2C;AAG1D4kB,cAAAA,QAAQ,EAAE3Y;AAHgD,aAA5D,CADF;AAOD;;AACDnI,UAAAA,OAAO,CAACgI,GAAR,CAAYwa,YAAZ,EAA0B5f,IAA1B,CAA+B,UAAC+R,GAAD,EAAS;AACtC,gBAAM4N,WAAW,GAAGpoB,MAAM,CAAC0mB,SAAP,CAAiB5O,KAAjB,CAAuBsQ,WAA3C;AACA5N,YAAAA,GAAG,CAACvP,OAAJ,CAAY,UAACgM,GAAD,EAAS;AACnB,kBAAMuR,YAAY,GAAGvR,GAAG,CAACyP,SAAzB;AACA,kBAAM+B,WAAW,GAAGxR,GAAG,CAAChL,SAAJ,CAAcuc,YAAY,CAACjkB,KAA3B,CAApB;AACAvE,cAAAA,MAAM,CAACiM,SAAP,CAAiBlD,IAAjB,CAAsB0f,WAAtB;AACAD,cAAAA,YAAY,CAACjkB,KAAb,GAAqBvE,MAAM,CAACiM,SAAP,CAAiBlM,MAAjB,GAA0B,CAA/C;;AACA,mBAAK,IAAM8B,GAAX,IAAkB2mB,YAAY,CAAC1Q,KAA/B,EAAsC;AACpC,oBAAI0Q,YAAY,CAAC1Q,KAAb,CAAmB1U,cAAnB,CAAkCvB,GAAlC,CAAJ,EAA4C;AAC1C,sBAAM6mB,gBAAgB,GAAGF,YAAY,CAAC1Q,KAAb,CAAmBjW,GAAnB,CAAzB;AACA,sBAAMomB,eAAe,GAAGhR,GAAG,CAAChL,SAAJ,CAAcyc,gBAAgB,CAACnkB,KAA/B,CAAxB;AACAvE,kBAAAA,MAAM,CAACiM,SAAP,CAAiBlD,IAAjB,CAAsBkf,eAAtB;AACAS,kBAAAA,gBAAgB,CAACnkB,KAAjB,GAAyBvE,MAAM,CAACiM,SAAP,CAAiBlM,MAAjB,GAA0B,CAAnD;AACD;AACF;;AACDqoB,cAAAA,WAAW,CAACrf,IAAZ,CAAiByf,YAAjB;AACD,aAdD;AAeA9oB,YAAAA,OAAO,CAACM,MAAD,CAAP;AACD,WAlBD;AAmBD,SA7CD;AA8CD,OA/CM,CAAP;AAgDD;AAlEH;AAAA;AAAA,4BAoEUymB,WApEV,EAoEqC;AACjC,UAAIA,WAAJ,EAAiB;AACf,aAAKI,IAAL,CAAU9kB,IAAV,GAAiB0kB,WAAW,CAAC1kB,IAA7B;AACD;AACF;AAxEH;AAAA;AAAA,2BA0ES;AACL,UAAM4kB,QAAQ,GAAG,KAAKN,SAAtB;AACA,WAAKsC,aAAL,CAAmBhC,QAAQ,CAACyB,WAA5B;AACD;AA7EH;AAAA;AAAA,2BA+ESvmB,GA/ET,EA+EsBC,KA/EtB,EA+EkC;AAC9B,UAAID,GAAG,KAAK,aAAZ,EAA2B;AACzB,aAAK8mB,aAAL,CAAmB7mB,KAAnB;AACD,OAFD,MAEO;AACL,aAAKukB,SAAL,CAAexkB,GAAf,IAAsBC,KAAtB;AACD;AACF;AArFH;AAAA;AAAA,kCAuFwB4J,SAvFxB,EAuFmC;AAC/B,UAAI,CAACA,SAAD,IAAc,CAACA,SAAS,CAAC3L,MAA7B,EAAqC;AACnC;AACD;;AACD,UAAM8C,IAAI,GAAG,KAAKwjB,SAAlB;AACA,UAAM1a,MAAM,GAAG9I,IAAI,CAAC8I,MAApB,CAL+B;AAO/B;AACA;;AACA,UAAID,SAAS,CAAC3L,MAAV,KAAqB8C,IAAI,CAAC6I,SAAL,CAAe3L,MAAxC,EAAgD;AAC9C,aAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqK,SAAS,CAAC3L,MAA9B,EAAsCsB,CAAC,EAAvC,EAA2C;AACzC,cAAMonB,WAAW,GAAG,KAAKlO,eAAL,CAAqBsL,GAArB,CAAyBna,SAAS,CAACrK,CAAD,CAAT,CAAaulB,EAAtC,CAApB;;AACA,cAAI6B,WAAJ,EAAiB;AACf5lB,YAAAA,IAAI,CAAC6I,SAAL,CAAerK,CAAf,IAAoB,KAAKkZ,eAAL,CAAqBsL,GAArB,CAAyBna,SAAS,CAACrK,CAAD,CAAT,CAAaulB,EAAtC,EAA0CD,QAA9D;AACD;AACF;;AACD,YAAIpiB,KAAK,GAAG,CAAZ;;AACA,aAAK,IAAIlD,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGsK,MAAM,CAAC5L,MAA3B,EAAmCsB,EAAC,EAApC,EAAwC;AACtC,eAAK,IAAI4C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0H,MAAM,CAACtK,EAAD,CAAN,CAAUyS,UAAV,CAAqB/T,MAAzC,EAAiDkE,CAAC,EAAlD,EAAsD;AACpD,gBAAM2kB,gBAAgB,GAAG,KAAKrO,eAAL,CAAqBsL,GAArB,CAAyBna,SAAS,CAACnH,KAAD,CAAT,CAAiBqiB,EAA1C,CAAzB;;AACA,gBAAIgC,gBAAJ,EAAsB;AACpB,mBAAKrC,kBAAL,CAAwBxd,IAAxB,CAA6B6f,gBAA7B;;AACAjd,cAAAA,MAAM,CAACtK,EAAD,CAAN,CAAUyS,UAAV,CAAqB7P,CAArB,EAAwB+J,QAAxB,GAAmC4a,gBAAgB,CAACjC,QAApD;AACD;;AACDpiB,YAAAA,KAAK;AACN;AACF;AACF,OAlBD,MAkBO;AACL,aAAK,IAAIlD,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGqK,SAAS,CAAC3L,MAA9B,EAAsCsB,GAAC,EAAvC,EAA2C;AACzC,cAAMwnB,WAAW,GAAG,KAAKtO,eAAL,CAAqBsL,GAArB,CAAyBna,SAAS,CAACrK,GAAD,CAAT,CAAaulB,EAAtC,CAApB;;AACA,cAAIiC,WAAJ,EAAiB;AACf,iBAAKtC,kBAAL,CAAwBxd,IAAxB,CAA6B8f,WAA7B;;AACAhmB,YAAAA,IAAI,CAAC6I,SAAL,CAAerK,GAAf,IAAoBwnB,WAAW,CAAClC,QAAhC;AACD,WAHD,MAGO;AACLzZ,YAAAA,aAAM,CAACG,IAAP,yBAA6B,KAAKwZ,IAAL,CAAU9kB,IAAvC,0DAAyF2J,SAAS,CAACrK,GAAD,CAAT,CAAaulB,EAAtG;AACD;AACF;;AACD,aAAK,IAAI3iB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG0H,MAAM,CAAC5L,MAA3B,EAAmCkE,EAAC,EAApC,EAAwC;AACtC,eAAK,IAAI4jB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlc,MAAM,CAAC1H,EAAD,CAAN,CAAU6P,UAAV,CAAqB/T,MAAzC,EAAiD8nB,CAAC,EAAlD,EAAsD;AACpD,gBAAIlc,MAAM,CAAC1H,EAAD,CAAN,CAAU6P,UAAV,CAAqB+T,CAArB,EAAwBpU,aAAxB,KAA0CzL,SAA9C,EAAyD;AACvD;AACA,kBAAMzD,MAAK,GAAG1B,IAAI,CAAC6I,SAAL,CAAe3L,MAAf,GAAwB,CAAxB,GAA4B4L,MAAM,CAAC1H,EAAD,CAAN,CAAU6P,UAAV,CAAqB+T,CAArB,EAAwBpU,aAAlE;;AACA9H,cAAAA,MAAM,CAAC1H,EAAD,CAAN,CAAU6P,UAAV,CAAqB+T,CAArB,EAAwB7Z,QAAxB,GAAmCnL,IAAI,CAAC6I,SAAL,CAAenH,MAAf,CAAnC;AACD;AACF;AACF;AACF;AACF;AAtIH;;AAAA;AAAA,EAAkC6hB,cAAlC;;ICKa0C,sBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACUC,OADV;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAG2B9E,KAH3B,EAG0C;AAAA;;AACtC,aAAO,IAAIpe,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B,YAAMqC,IAAI,GAAG,MAAI,CAACgnB,OAAL,CAAa,CAAb,EAAgBhnB,IAA7B;;AACA,YAAI,MAAI,CAACwY,eAAL,CAAqByO,OAAzB,EAAkC;AAAA;;AAChCtpB,UAAAA,OAAO,4CAACukB,KAAK,CAACK,OAAP,mDAAC,eAAeyE,OAAf,CAAuBhnB,IAAvB,CAAD,yEAAiC,EAAjC,CAAP;AACD,SAFD,MAEO;AACL,cAAMknB,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwBpnB,IAAxB,CAArB;;AACA,cAAIknB,YAAJ,EAAkB;AAChBC,YAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,YAA1B;AACD;;AAED,cAAMK,SAAS,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,QAAvB,CAAlB;AACAD,UAAAA,SAAS,CAAC/iB,WAAV,GAAwB,WAAxB;;AACA+iB,UAAAA,SAAS,CAAC5iB,MAAV,GAAmB,YAAM;AAAA;;AACvB,gBAAMqiB,OAAO,GAAI/iB,MAAD,CAAgBwjB,SAAhC;AACA9pB,YAAAA,OAAO,SAAEqpB,OAAO,IAAIA,OAAO,CAAChnB,IAAD,CAApB,uCAA+B,EAA/B,CAAP;AACD,WAHD;;AAIAunB,UAAAA,SAAS,CAAC1C,EAAV,GAAe7kB,IAAf;AACAunB,UAAAA,SAAS,CAACljB,GAAV,GAAgB,MAAI,CAACkgB,KAAL,CAAWpnB,GAA3B;AACAgqB,UAAAA,QAAQ,CAACE,IAAT,CAAcK,WAAd,CAA0BH,SAA1B;AACD;AACF,OApBM,EAoBJ7gB,IApBI,CAoBC,UAACihB,oBAAD,EAAgD;AAAA,oCAOlDA,oBAPkD,CAEpDC,YAFoD;AAAA,YAEpDA,YAFoD,sCAErC,EAFqC;AAAA,qCAOlDD,oBAPkD,CAGpDE,cAHoD;AAAA,YAGpDA,cAHoD,uCAGnC,EAHmC;AAAA,qCAOlDF,oBAPkD,CAIpDG,MAJoD;AAAA,YAIpDA,MAJoD,uCAI3C,EAJ2C;AAAA,qCAOlDH,oBAPkD,CAKpDnZ,QALoD;AAAA,YAKpDA,QALoD,uCAKzC,EALyC;AAAA,qCAOlDmZ,oBAPkD,CAMpD9hB,UANoD;AAAA,YAMpDA,UANoD,uCAMvC,EANuC;AAQtD,QAAA,MAAI,CAACye,SAAL,CAAe9V,QAAf,GAA0BA,QAA1B;AACA,QAAA,MAAI,CAAC8V,SAAL,CAAeze,UAAf,GAA4BA,UAA5B;AACA,QAAA,MAAI,CAACye,SAAL,CAAesD,YAAf,GAA8BA,YAA9B;AACA,QAAA,MAAI,CAACtD,SAAL,CAAeuD,cAAf,GAAgCA,cAAhC;AACA,QAAA,MAAI,CAACvD,SAAL,CAAeyD,YAAf,GAA8BD,MAA9B;AACD,OAjCM,CAAP;AAkCD;AAtCH;AAAA;AAAA,qCAwC2B;AACvB,UAAM7b,QAAQ,GAAG,IAAI+b,qBAAJ,CAAmB,KAAKlD,IAAL,CAAU9kB,IAAV,IAAkB,YAArC,CAAjB;AACA,WAAKskB,SAAL,GAAiBrY,QAAjB;AACD;AA3CH;AAAA;AAAA,yBA6CO3O,cA7CP,EA6C4BonB,WA7C5B,EA6CsDxC,KA7CtD,EA6CqG;AAAA;;AACjG,WAAKuC,OAAL,CAAaC,WAAb;AACA,WAAKsC,OAAL,GAAetC,WAAW,CAAC3O,KAAZ,CAAkBiR,OAAjC;AACA,WAAKiB,cAAL;AAEA,aAAO,KAAKC,gBAAL,CAAsBhG,KAAtB,EAA6Bxb,IAA7B,CACL;AAAA,eACE,IAAI5C,OAAJ,CAAY,UAACnG,OAAD,EAAUoG,MAAV,EAAqB;AAC/B,cAAI;AACF,iBAAK,IAAI+hB,CAAT,IAAcpB,WAAW,CAAC3O,KAA1B,EAAiC;AAC/B,cAAA,MAAI,CAACuO,SAAL,CAAewB,CAAf,IAAoBpB,WAAW,CAAC3O,KAAZ,CAAkB+P,CAAlB,CAApB;AACD;;AACD,YAAA,MAAI,CAACxB,SAAL,CAAe6D,eAAf;;AACAxqB,YAAAA,OAAO,CAAC,MAAD,CAAP;AACD,WAND,CAME,gBAAM;AACNoG,YAAAA,MAAM,CAAC,yCAAD,CAAN;AACD;AACF,SAVD,CADF;AAAA,OADK,CAAP;AAcD;AAhEH;AAAA;AAAA,4BAkEU2gB,WAlEV,EAkEqC;AACjC,UAAIA,WAAJ,EAAiB;AACf,aAAKH,KAAL,CAAWvkB,IAAX,GAAkB0kB,WAAW,CAAC1kB,IAA9B;AACA,aAAKukB,KAAL,CAAWpnB,GAAX,GAAiBunB,WAAW,CAACvnB,GAA7B;AACA,aAAKonB,KAAL,CAAW6D,MAAX,GAAoB1D,WAAW,CAAC0D,MAAhC;AACD;AACF;AAxEH;AAAA;AAAA,+BA0EatoB,GA1Eb,EA0E0BC,KA1E1B,EA0EsC;AAAA;;AAClC,6FAAiBD,GAAjB,EAAsBC,KAAtB;;AACA,UAAID,GAAG,KAAK,KAAZ,EAAmB;AACjB,aAAKooB,gBAAL,GAAwBxhB,IAAxB,CAA6B,YAAM;AACjC,cAAI;AACF,YAAA,MAAI,CAAC4d,SAAL,CAAe6D,eAAf;AACD,WAFD,CAEE,iBAAM;AACNpQ,YAAAA,OAAO,CAACxM,KAAR,CAAc,yCAAd;AACD;AACF,SAND;AAOD;AACF;AArFH;AAAA;AAAA,2BAuFSzL,GAvFT,EAuFsBC,KAvFtB,EAuFkC;AAC9B,WAAKukB,SAAL,CAAexkB,GAAf,IAAsBC,KAAtB;;AACA,WAAKukB,SAAL,CAAe6D,eAAf;AACD;AA1FH;;AAAA;AAAA,EAA4C9D,cAA5C;;ACNO,IAAMgE,aAAa,GAAG,EAAtB;AACP,AAAO,SAASC,MAAT,CAAgBtoB,IAAhB,EAA8B;AACnC,SAAO,UAACsU,MAAD,EAAiB;AACtB+T,IAAAA,aAAa,CAACroB,IAAD,CAAb,GAAsBsU,MAAtB;AACD,GAFD;AAGD;AACD,IAAaiU,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACUC,MADV,GACmB,KADnB;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAG8B;AAC1B,UAAI,KAAKA,MAAT,EAAiB;AACf;AACD;;AACD,WAAKA,MAAL,GAAc,IAAd;AACCvkB,MAAAA,MAAD,CAAgBwkB,qBAAhB,GAAwC;AACtCC,QAAAA,EAAE,EAAEC,MAAM,CAACC,WAAP,CAAmB,IAAnB,CADkC;AAEtCN,QAAAA,MAAM,EAAE,gBAACtoB,IAAD,EAAkB;AACxB,iBAAO,UAACsU,MAAD,EAAiB;AACtB+T,YAAAA,aAAa,CAACroB,IAAD,CAAb,GAAsBsU,MAAtB;AACD,WAFD;AAGD;AANqC,OAAxC;AAQD;AAhBH;AAAA;AAAA,yBAkBOhX,cAlBP,EAkBuBonB,WAlBvB,EAkBiDxC,KAlBjD,EAkBwF;AAAA;;AACpF,WAAK2G,iBAAL;AACA,aAAO,IAAI/kB,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B,YAAM2lB,MAAM,GAAGoB,WAAf;AACA,YAAMsC,OAAO,GAAG1D,MAAM,CAACvN,KAAP,CAAaiR,OAA7B;;AAEA,YAAI,CAAC,MAAI,CAACxO,eAAL,CAAqByO,OAA1B,EAAmC;AACjC,cAAMM,SAAS,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,QAAvB,CAAlB;AACAD,UAAAA,SAAS,CAAC/iB,WAAV,GAAwB,WAAxB;;AACA,UAAA,MAAI,CAACigB,OAAL,CAAaC,WAAb;;AACA6C,UAAAA,SAAS,CAAC5iB,MAAV,GAAmB,YAAM;AACvB,gBAAM8iB,SAAS,GAAIxjB,MAAD,CAAgBwjB,SAAlC;;AACA,iBAAK,IAAInoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0nB,OAAO,CAAChpB,MAA5B,EAAoCsB,CAAC,EAArC,EAAyC;AACvC,kBAAMU,IAAI,GAAGgnB,OAAO,CAAC1nB,CAAD,CAAP,CAAWU,IAAxB;AACA,cAAA,MAAI,CAACskB,SAAL,GAAiBmD,SAAS,IAAIA,SAAS,CAACznB,IAAD,CAAvC;AACAqoB,cAAAA,aAAa,CAACroB,IAAD,CAAb,GAAsB,MAAI,CAACskB,SAA3B;AACD;;AACD3mB,YAAAA,OAAO,CAAC,MAAD,CAAP;AACD,WARD;;AASA4pB,UAAAA,SAAS,CAACljB,GAAV,GAAgBqgB,WAAW,CAACvnB,GAA5B;AACAgqB,UAAAA,QAAQ,CAACE,IAAT,CAAcK,WAAd,CAA0BH,SAA1B;AACD,SAfD,MAeO;AACL,eAAK,IAAIjoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0nB,OAAO,CAAChpB,MAA5B,EAAoCsB,CAAC,EAArC,EAAyC;AAAA;;AACvC,gBAAMU,IAAI,GAAGgnB,OAAO,CAAC1nB,CAAD,CAAP,CAAWU,IAAxB;AACAqoB,YAAAA,aAAa,CAACroB,IAAD,CAAb,qBAAsBkiB,KAAK,CAACK,OAA5B,mDAAsB,eAAeyE,OAAf,CAAuBhnB,IAAvB,CAAtB;AACD;;AACDrC,UAAAA,OAAO,CAAC,MAAD,CAAP;AACD;AACF,OA1BM,CAAP;AA2BD;AA/CH;AAAA;AAAA,4BAiDU+mB,WAjDV,EAiDqC;AACjC,UAAIA,WAAJ,EAAiB;AACf,aAAKH,KAAL,CAAWvkB,IAAX,GAAkB0kB,WAAW,CAAC1kB,IAA9B;AACA,aAAKukB,KAAL,CAAWpnB,GAAX,GAAiBunB,WAAW,CAACvnB,GAA7B;AACA,aAAKonB,KAAL,CAAW6D,MAAX,GAAoB1D,WAAW,CAAC0D,MAAhC;AACD;AACF;AAvDH;;AAAA;AAAA,EAAoC/D,cAApC;;ICPayE,0BAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACOtQ,eADP,EACyCkM,WADzC,EACwG;AAAA;;AACpG,aAAO,IAAI5gB,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B,YAAMkoB,QAAQ,GAAG,IAAIkD,yBAAJ,CAAuBrE,WAAW,CAAC1kB,IAAnC,CAAjB;;AACA,aAAK,IAAI8lB,CAAT,IAAcpB,WAAW,CAAC3O,KAA1B,EAAiC;AAC/B8P,UAAAA,QAAQ,CAACC,CAAD,CAAR,GAAcpB,WAAW,CAAC3O,KAAZ,CAAkB+P,CAAlB,CAAd;AACD;;AACD,QAAA,KAAI,CAACxB,SAAL,GAAiBuB,QAAjB;;AACA,QAAA,KAAI,CAACpB,OAAL;;AACA9mB,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OARM,CAAP;AASD;AAXH;AAAA;AAAA,8BAaY;AACR,UAAI,KAAKinB,QAAT,EAAmB;AACjB,aAAKE,IAAL,CAAU9kB,IAAV,GAAiB,KAAK4kB,QAAL,CAAc5kB,IAA/B;AACD;AACF;AAjBH;;AAAA;AAAA,EAAgDqkB,cAAhD;;ACEA,IAAM2E,aAAa,GAAG;AACpBC,EAAAA,EAAE,EAAE,CADgB;AAEpBC,EAAAA,EAAE,EAAE,CAFgB;AAGpBC,EAAAA,EAAE,EAAE,CAHgB;AAIpBC,EAAAA,EAAE,EAAE,CAJgB;AAKpBC,EAAAA,EAAE,EAAE,CALgB;AAMpBC,EAAAA,EAAE,EAAE;AANgB,CAAtB;AASA,IAAaC,sBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACO/Q,eADP,EACyCkM,WADzC,EACmExC,KADnE,EACkH;AAAA;;AAC9G,aAAO,IAAIpe,OAAJ,CAAY,UAACnG,OAAD,EAAUoG,MAAV,EAAqB;AAAA;;AACtC,YAAMylB,SAAS,GAAG,EAAlB;AACA,YAAI/qB,IAAI,GAAGlB,gBAAS,CAACwiB,WAArB;;AACA,YAAI,KAAI,CAACvH,eAAL,CAAqBwM,oBAArB,KAA6CN,WAA7C,aAA6CA,WAA7C,6CAA6CA,WAAW,CAAE3O,KAA1D,gFAA6C,mBAAoBkP,WAAjE,0DAA6C,sBAAiCC,YAAjC,CAA8ClnB,MAA3F,CAAJ,EAAuG;AACrG,cAAMmnB,GAAG,GAAGjD,KAAK,CAACjY,MAAN,CAAamb,iBAAzB;AACA,cAAMF,YAAY,GAAGR,WAAW,CAAC3O,KAAZ,CAAkBkP,WAAlB,CAA8BC,YAAnD;AACAA,UAAAA,YAAY,CAACG,IAAb,CAAkB,UAACC,CAAD,EAASC,CAAT,EAAoB;AACpC,mBAAOxB,0BAA0B,CAACuB,CAAC,CAAC7mB,IAAH,CAA1B,GAAqCslB,0BAA0B,CAACwB,CAAC,CAAC9mB,IAAH,CAAtE;AACD,WAFD;;AAGA,eAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4lB,YAAY,CAAClnB,MAAjC,EAAyCsB,CAAC,EAA1C,EAA8C;AAC5C,gBAAM2lB,WAAW,GAAGC,YAAY,CAAC5lB,CAAD,CAAhC;;AACA,gBAAI2lB,WAAW,CAACO,SAAZ,KAA0B,KAA1B,IAAmCL,GAAG,CAACM,OAAJ,CAAYC,uBAAgB,CAACT,WAAW,CAACxmB,IAAb,CAA5B,CAAvC,EAAwF;AACtF,mBAAK,IAAMqB,GAAX,IAAkBmlB,WAAW,CAACwE,KAA9B,EAAqC;AACnC,oBAAIxE,WAAW,CAACwE,KAAZ,CAAkBpoB,cAAlB,CAAiCvB,GAAjC,CAAJ,EAA2C;AACzC,sBAAMqZ,KAAK,GAAG8L,WAAW,CAACwE,KAAZ,CAAkB3pB,GAAlB,CAAd;AACA0pB,kBAAAA,SAAS,CAACR,aAAa,CAAClpB,GAAD,CAAd,CAAT,GAAgCqZ,KAAK,CAAChc,GAAtC;AACD;AACF;;AACD4a,cAAAA,OAAO,CAACzM,IAAR,CAAa2Z,WAAW,CAACxmB,IAAzB;AACAA,cAAAA,IAAI,GAAGlB,gBAAS,CAACyhB,OAAjB;AACA;AACD;AACF;AACF;;AAED,YAAIvgB,IAAI,KAAKlB,gBAAS,CAACwiB,WAAvB,EAAoC;AAClC,eAAK,IAAMjgB,IAAX,IAAkB4kB,WAAW,CAAC3O,KAAZ,CAAkB8C,MAApC,EAA4C;AAC1C,gBAAI6L,WAAW,CAAC3O,KAAZ,CAAkB8C,MAAlB,CAAyBxX,cAAzB,CAAwCvB,IAAxC,CAAJ,EAAkD;AAChD,kBAAMqZ,MAAK,GAAGuL,WAAW,CAAC3O,KAAZ,CAAkB8C,MAAlB,CAAyB/Y,IAAzB,CAAd;AACA0pB,cAAAA,SAAS,CAACR,aAAa,CAAClpB,IAAD,CAAd,CAAT,GAAgCqZ,MAAK,CAAChc,GAAtC;AACD;AACF;AACF;;AAEDqb,QAAAA,eAAe,CACZS,IADH,CACQ;AACJgG,UAAAA,IAAI,EAAEuK,SADF;AAEJ/qB,UAAAA,IAAI,EAAEA;AAFF,SADR,EAKGiI,IALH,CAKQ,UAAC+R,GAAD,EAAS;AACb,UAAA,KAAI,CAAC6L,SAAL,GAAiB7L,GAAjB;AACA9a,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD,SARH,WASS,UAACiV,CAAD,EAAO;AACZ7O,UAAAA,MAAM,CAAC6O,CAAD,CAAN;AACD,SAXH;AAYD,OA9CM,CAAP;AA+CD;AAjDH;AAAA;AAAA,8BAmDY;AACR,UAAI,KAAKgS,QAAT,EAAmB;AACjB,aAAKE,IAAL,CAAU9kB,IAAV,GAAiB,KAAK4kB,QAAL,CAAc5kB,IAA/B;AACD;AACF;AAvDH;;AAAA;AAAA,EAA4CqkB,cAA5C;;ICZaqF,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACOpsB,cADP,EACuBonB,WADvB,EACwE;AAAA;;AACpE,aAAO,IAAI5gB,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B,QAAA,KAAI,CAAC2mB,SAAL,GAAiBI,WAAjB;;AACA,QAAA,KAAI,CAACiF,WAAL,CAAiB,MAAjB,EAAyB,KAAI,CAAC/E,QAAL,CAAc5kB,IAAvC;;AACA,QAAA,KAAI,CAAC2pB,WAAL,CAAiB,KAAjB,EAAwB,KAAI,CAAC/E,QAAL,CAAcznB,GAAtC;;AACAQ,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OALM,CAAP;AAMD;AARH;AAAA;AAAA,gCAUcmC,GAVd,EAUmBC,KAVnB,EAU0B;AACtB,WAAKwkB,KAAL,CAAWzkB,GAAX,IAAkBC,KAAlB;AACD;AAZH;;AAAA;AAAA,EAAkCskB,cAAlC;;;ICKauF,cAAb,aAKGtH,UAAU,CAAC;AAAEU,EAAAA,KAAK,EAAE,cAAT;AAAyBL,EAAAA,MAAM,EAAE;AAAjC,CAAD,CALb,UAwCGL,UAAU,CAAC;AAAEK,EAAAA,MAAM,EAAE,sBAAV;AAAkCK,EAAAA,KAAK,EAAE;AAAzC,CAAD,CAxCb,UAsDGV,UAAU,CAAC;AAAEU,EAAAA,KAAK,EAAE,gBAAT;AAA2BL,EAAAA,MAAM,EAAE;AAAnC,CAAD,CAtDb;AAGE,0BAAoBT,KAApB,EAAkC;AAAA;;AAAA,SAAdA,KAAc,GAAdA,KAAc;AAAA,SAF1B2H,UAE0B,GAFgB,EAEhB;AAAE;;AAHtC;AAAA;AAAA,wBAMaC,aANb,EAM2C;AAAA,UAC/BrrB,IAD+B,GACUqrB,aADV,CAC/BrrB,IAD+B;AAAA,UACnBsrB,MADmB,GACUD,aADV,CACzBpa,IADyB;AAAA,UACXqG,KADW,GACU+T,aADV,CACX/T,KADW;AAAA,UACJ8O,EADI,GACUiF,aADV,CACJjF,EADI;AAAA,UACAriB,KADA,GACUsnB,aADV,CACAtnB,KADA;AAGvC,UAAMkN,IAAI,GAAG,KAAKwS,KAAL,CAAW8H,WAAX,CAAuBlG,GAAvB,CAA2BiG,MAA3B,CAAb;AACA,UAAME,kBAAkB,GAAG,KAAKC,kBAAL,CAAwBzrB,IAAxB,CAA3B;;AACA,UAAI,CAACwrB,kBAAL,EAAyB;AACvB9e,QAAAA,aAAM,CAACI,KAAP,WAAgB9M,IAAhB;AACA;AACD;;AACD,UAAM0rB,YAAY,GAAG,KAAKC,uBAAL,CAA6BrU,KAA7B,CAArB,CATuC;AAWvC;AACA;;AACA,UAAMD,OAAO,GAAGpG,IAAI,CAACmG,YAAL,CAAkBoU,kBAAlB,EAAsCE,YAAtC,CAAhB;AAbuC,UAc/BE,OAd+B,GAcnBF,YAdmB,CAc/BE,OAd+B;;AAevC,UAAIA,OAAO,KAAKpkB,SAAhB,EAA2B;AACzB6P,QAAAA,OAAO,CAACuU,OAAR,GAAkBA,OAAlB;AACD;;AAED,WAAK,IAAIvE,CAAT,IAAcqE,YAAd,EAA4B;AAC1B,YAAIA,YAAY,CAACrE,CAAD,CAAZ,KAAoB,IAAxB,EAA8B;AAC5BhQ,UAAAA,OAAO,CAACgQ,CAAD,CAAP,GAAaqE,YAAY,CAACrE,CAAD,CAAzB;AACD;AACF,OAvBsC;;;AA0BvC,UAAMwE,YAAY,GAAG5a,IAAI,CAACkZ,WAA1B;AACA,UAAMzF,YAAY,GAAGmH,YAAY,CAACtsB,MAAb,GAAsB,CAA3C;AACAilB,MAAAA,mBAAmB,CAACqH,YAAD,EAAenH,YAAf,EAA6B3gB,KAA7B,CAAnB;AACCsT,MAAAA,OAAD,CAAiB+O,EAAjB,GAAsBA,EAAtB;AACA,WAAKgF,UAAL,CAAgBhF,EAAhB,IAAsB/O,OAAtB;AACA,aAAOA,OAAP;AACD;AAtCH;AAAA;AAAA,2BAyCgB+O,EAzChB,EAyC4B/kB,GAzC5B,EAyCyCC,KAzCzC,EAyCqD;AACjD,UAAIA,KAAK,IAAI,KAAKwqB,YAAL,CAAkBxqB,KAAlB,CAAb,EAAuC;AACrC,aAAK+jB,GAAL,CAASe,EAAT,EAAa/kB,GAAb,IAAoB,KAAKoiB,KAAL,CAAW1J,eAAX,CAA2BsL,GAA3B,CAA+B/jB,KAAK,CAAC8kB,EAArC,EAAyCD,QAA7D;AACD,OAFD,MAEO;AACL,aAAKd,GAAL,CAASe,EAAT,EAAa/kB,GAAb,IAAoBC,KAApB;AACD;;AACD,aAAO;AAAE8kB,QAAAA,EAAE,EAAFA,EAAF;AAAM/kB,QAAAA,GAAG,EAAHA,GAAN;AAAWC,QAAAA,KAAK,EAALA;AAAX,OAAP;AACD;AAhDH;AAAA;AAAA,wBAkDa8kB,EAlDb,EAkDoC;AAChC,aAAO,KAAKgF,UAAL,CAAgBhF,EAAhB,CAAP;AACD;AApDH;AAAA;AAAA,4BAuDgBA,EAvDhB,EAuD4B;AACxB,UAAM/O,OAAO,GAAG,KAAK+T,UAAL,CAAgBhF,EAAhB,CAAhB;AACA/O,MAAAA,OAAO,CAACwK,OAAR;AACA,aAAO,KAAKuJ,UAAL,CAAgBhF,EAAhB,CAAP;AACA,aAAOA,EAAP;AACD;AA5DH;AAAA;AAAA,uCA8D6BpmB,IA9D7B,EA8D2C;AACvC,UAAM+rB,MAAM,GAAG/rB,IAAI,CAACgsB,KAAL,CAAW,GAAX,CAAf,CADuC;;AAGvC,UAAID,MAAM,CAAC,CAAD,CAAN,KAAc,QAAlB,EAA4B;AAC1B,eAAOnC,aAAa,CAACmC,MAAM,CAAC,CAAD,CAAP,CAApB;AACD;;AAED,UAAMjZ,WAAW,GAAGoX,MAAM,CAACC,WAAP,CAAmB,IAAnB,EAAyBnqB,IAAzB,CAApB;;AACA,UAAI,CAAC8S,WAAL,EAAkB;AAChB,cAAM,IAAI7M,KAAJ,WAAajG,IAAb,qBAAN;AACD;;AACD,aAAO8S,WAAP;AACD;AA1EH;AAAA;AAAA,4CA4EkCwE,KA5ElC,EA4EgD;AAC5C,UAAM2U,aAAa,sBAAQ3U,KAAR,CAAnB;;AACA,WAAK,IAAI+P,CAAT,IAAc/P,KAAd,EAAqB;AACnB,YAAMqQ,IAAI,GAAGrQ,KAAK,CAAC+P,CAAD,CAAlB;;AACA,YAAIM,IAAI,IAAI,KAAKmE,YAAL,CAAkBnE,IAAlB,CAAZ,EAAqC;AACnC,cAAM3N,GAAG,GAAG,KAAKyJ,KAAL,CAAW1J,eAAX,CAA2BsL,GAA3B,CAA+BsC,IAAI,CAACvB,EAApC,CAAZ;;AACA,cAAIpM,GAAJ,EAAS;AACPiS,YAAAA,aAAa,CAAC5E,CAAD,CAAb,GAAmBrN,GAAG,CAACmM,QAAvB;AACD,WAFD,MAEO;AACL8F,YAAAA,aAAa,CAAC5E,CAAD,CAAb,GAAmB,IAAnB;AACA3a,YAAAA,aAAM,CAACG,IAAP,6CAAgDwa,CAAhD,6BAAmEM,IAAI,CAACvB,EAAxE;AACD;AACF;AACF;;AACD,aAAO6F,aAAP;AACD;AA3FH;AAAA;AAAA,iCA6FuBtE,IA7FvB,EA6F2C;AACvC,aAAOA,IAAI,CAAC3nB,IAAL,KAAc,OAArB;AACD;AA/FH;;AAAA;AAAA;;;ICDaksB,WAAb,aASGrI,UAAU,CAAC;AAAEU,EAAAA,KAAK,EAAE;AAAT,CAAD,CATb,YAgBGV,UAAU,CAAC;AAAEK,EAAAA,MAAM,EAAE,mBAAV;AAA+BK,EAAAA,KAAK,EAAE;AAAtC,CAAD,CAhBb,YA8BGV,UAAU,CAAC;AAAEK,EAAAA,MAAM,EAAE;AAAV,CAAD,CA9Bb;AAIE,uBAAoBT,KAApB,EAAkC;AAAA;;AAAA,SAAdA,KAAc,GAAdA,KAAc;AAAA,SAH1B0I,OAG0B,GAHU,EAGV;AAAA,SAFjBC,IAEiB;AAChC,SAAKA,IAAL,GAAY,IAAI9V,aAAJ,CAAW,MAAX,EAAmB,KAAKmN,KAAL,CAAWjY,MAA9B,CAAZ;AACA,SAAKiY,KAAL,CAAWjY,MAAX,CAAkB6gB,YAAlB,CAA+BC,WAA/B,CAA2CC,aAA3C,CAAyD,KAAKH,IAA9D;AACD;;AAPH;AAAA;AAAA,wBAUaI,UAVb,EAUqC;AACjC,WAAKC,MAAL,CAAYD,UAAZ;AACA,WAAKE,MAAL,CAAYF,UAAU,CAACpG,EAAvB,EAA2BoG,UAAU,CAACG,MAAtC,EAA8CH,UAAU,CAACzoB,KAAzD;AACA,aAAO,KAAKshB,GAAL,CAASmH,UAAU,CAACpG,EAApB,CAAP;AACD;AAdH;AAAA;AAAA,2BAiBgBA,EAjBhB,EAiB4B/kB,GAjB5B,EAiByCC,KAjBzC,EAiBqD;AACjD,WAAK+jB,GAAL,CAASe,EAAT,EAAa/kB,GAAb,IAAoBC,KAApB;AACA,aAAO;AAAE8kB,QAAAA,EAAE,EAAFA,EAAF;AAAM/kB,QAAAA,GAAG,EAAHA,GAAN;AAAWC,QAAAA,KAAK,EAALA;AAAX,OAAP;AACD;AApBH;AAAA;AAAA,wBAsBa8kB,EAtBb,EAsBiC;AAC7B,aAAO,KAAK+F,OAAL,CAAa/F,EAAb,CAAP;AACD;AAxBH;AAAA;AAAA,4BA0BiB;AACb,WAAK+F,OAAL,GAAe,EAAf;AACD;AA5BH;AAAA;AAAA,4BA+BgB/F,EA/BhB,EA+B4B;AACxB,WAAK+F,OAAL,CAAa/F,EAAb,EAAiBvE,OAAjB;AACA,aAAO,KAAKsK,OAAL,CAAa/F,EAAb,CAAP;AACD;AAED;AACF;AACA;AACA;;AAvCA;AAAA;AAAA,2BAwCiBoG,UAxCjB,EAwCiD;AAAA,UACrCvJ,QADqC,GACauJ,UADb,CACrCvJ,QADqC;AAAA,UAC3BhR,QAD2B,GACaua,UADb,CAC3Bva,QAD2B;AAAA,UACjB/I,QADiB,GACasjB,UADb,CACjBtjB,QADiB;AAAA,UACPC,KADO,GACaqjB,UADb,CACPrjB,KADO;AAAA,UACAid,EADA,GACaoG,UADb,CACApG,EADA;AAAA,UACI7kB,IADJ,GACairB,UADb,CACIjrB,IADJ;AAE7C,UAAM8U,MAAM,GAAG,IAAIC,aAAJ,CAAW/U,IAAX,EAAiB,KAAKkiB,KAAL,CAAWjY,MAA5B,CAAf;AACA6K,MAAAA,MAAM,CAAC4M,QAAP,GAAkBA,QAAlB;AACA5M,MAAAA,MAAM,CAACuW,SAAP,CAAiB3a,QAAjB,GAA4B,IAAIlN,cAAJ,CAAYkN,QAAQ,CAAC,CAAD,CAApB,EAAyBA,QAAQ,CAAC,CAAD,CAAjC,EAAsCA,QAAQ,CAAC,CAAD,CAA9C,CAA5B;AACAoE,MAAAA,MAAM,CAACuW,SAAP,CAAiB1jB,QAAjB,GAA4B,IAAInE,cAAJ,CAAYmE,QAAQ,CAAC,CAAD,CAApB,EAAyBA,QAAQ,CAAC,CAAD,CAAjC,EAAsCA,QAAQ,CAAC,CAAD,CAA9C,CAA5B;AACAmN,MAAAA,MAAM,CAACuW,SAAP,CAAiBzjB,KAAjB,GAAyB,IAAIpE,cAAJ,CAAYoE,KAAK,CAAC,CAAD,CAAjB,EAAsBA,KAAK,CAAC,CAAD,CAA3B,EAAgCA,KAAK,CAAC,CAAD,CAArC,CAAzB;AACCkN,MAAAA,MAAD,CAAgB+P,EAAhB,GAAqBA,EAArB;AACA,WAAK+F,OAAL,CAAa/F,EAAb,IAAmB/P,MAAnB;AACA,aAAOA,MAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AAzDA;AAAA;AAAA,2BA0DiBwW,OA1DjB,EA0DkCC,QA1DlC,EA0DoD/oB,KA1DpD,EA0DmE;AAC/D,UAAMgpB,KAAK,GAAG,KAAKZ,OAAL,CAAaU,OAAb,CAAd;AACA,UAAMF,MAAM,GAAG,KAAKR,OAAL,CAAaW,QAAb,KAA0B,KAAKV,IAA9C;AACAO,MAAAA,MAAM,CAAC1U,QAAP,CAAgB8U,KAAhB,EAH+D;;AAK/D,UAAMhV,QAAQ,GAAG4U,MAAM,CAACK,SAAxB;AACA,UAAMtI,YAAY,GAAG3M,QAAQ,CAACxY,MAAT,GAAkB,CAAvC;AACAilB,MAAAA,mBAAmB,CAACzM,QAAD,EAAW2M,YAAX,EAAyB3gB,KAAzB,CAAnB;AACD;AAlEH;;AAAA;AAAA;;;ACSO,IAAMkpB,cAAc,GAAG;AAC5BpD,EAAAA,MAAM,EAAEC,cADoB;AAE5BznB,EAAAA,IAAI,EAAEuI,cAFsB;AAG5BwF,EAAAA,OAAO,EAAEkW,eAHmB;AAI5B;AACA4G,EAAAA,WAAW,EAAEpC,sBALe;AAM5BjhB,EAAAA,WAAW,EAAEqd,mBANe;AAO5BiG,EAAAA,mBAAmB,EAAEjG,mBAPO;AAQ5BkG,EAAAA,aAAa,EAAElG,mBARa;AAS5BqC,EAAAA,cAAc,EAAEjB,sBATY;AAU5BgC,EAAAA,kBAAkB,EAAED,0BAVQ;AAW5B;AACAgD,EAAAA,IAAI,EAAEpC;AAZsB,CAAvB;AAeP,IAAMqC,aAA0C,GAAG,IAAIC,GAAJ,EAAnD;;AACA,KAAK,IAAMlsB,GAAX,IAAkB4rB,cAAlB,EAAkC;AAChC,MAAIA,cAAc,CAACrqB,cAAf,CAA8BvB,GAA9B,CAAJ,EAAwC;AACtC,QAAMmsB,OAAO,GAAGP,cAAc,CAAC5rB,GAAD,CAA9B,CADsC;;AAItC,QAAImsB,OAAO,KAAKtG,mBAAhB,EAAqC;AACnCoG,MAAAA,aAAa,CAACG,GAAd,CAAkBD,OAAlB,EAA2B,aAA3B;AACD,KAFD,MAEO;AACLF,MAAAA,aAAa,CAACG,GAAd,CAAkBD,OAAlB,EAA2BnsB,GAA3B;AACD;AACF;AACF;;AAED,IAAMqsB,eAAe,GAAG;AACtBC,EAAAA,cADsB,0BACP5T,eADO,EACiC/Z,IADjC,EAC+D;AACnF,WAAO,IAAIitB,cAAc,CAACjtB,IAAD,CAAlB,CAAyB+Z,eAAzB,CAAP;AACD;AAHqB,CAAxB;AAMA,AAAO,SAAS6T,gBAAT,CAA0B5tB,IAA1B,EAAwCmmB,QAAxC,EAAuD;AAC5D,MAAI,CAAC8G,cAAc,CAACrqB,cAAf,CAA8B5C,IAA9B,CAAL,EAA0C;AACxCitB,IAAAA,cAAc,CAACjtB,IAAD,CAAd,GAAuBmmB,QAAvB;AACAmH,IAAAA,aAAa,CAACG,GAAd,CAAkBtH,QAAlB,EAA4BnmB,IAA5B;AACD;AACF;AAED,IAAa6tB,qBAAb,aAkCGhK,UAAU,CAAC;AAAEK,EAAAA,MAAM,EAAE;AAAV,CAAD,CAlCb,YA6DGL,UAAU,CAAC;AAAEU,EAAAA,KAAK,EAAE,iBAAT;AAA4BL,EAAAA,MAAM,EAAE;AAApC,CAAD,CA7Db;AAME,iCAAoBT,KAApB,EAAkC;AAAA;;AAAA,SAAdA,KAAc,GAAdA,KAAc;AAAA,SAL1BqK,WAK0B,GALsB,EAKtB;AAAA,SAJ1BC,aAI0B,GAJuB,IAAIC,OAAJ,EAIvB;AAAA,SAH1BC,KAG0B,GAHlB,CAGkB;AAAA,SAFjBC,qBAEiB;AAChC,SAAKA,qBAAL,GAA6B,KAAKzK,KAAL,CAAWjY,MAAX,CAAkBuO,eAA/C;AACD,GARH;;;AAAA;AAAA;AAAA,yBAWOrO,KAXP,EAWoD;AAAA;;AAChD,UAAMya,QAAQ,GAAGuH,eAAe,CAACC,cAAhB,CAA+B,IAA/B,EAAqCjiB,KAAK,CAAC1L,IAA3C,CAAjB,CADgD;;AAGhD,UAAMsnB,WAAW,GAAGnB,QAAQ,CAAC3L,IAAT,CAAc,KAAKiJ,KAAL,CAAWjY,MAAX,CAAkBuO,eAAhC,EAAiDrO,KAAjD,EAAwD,KAAK+X,KAA7D,CAApB;AACA,WAAKwK,KAAL,GAAa1R,IAAI,CAACnK,GAAL,CAAS,CAAC1G,KAAK,CAAC0a,EAAhB,EAAoB,KAAK6H,KAAzB,CAAb;AACA3G,MAAAA,WAAW,CAACrf,IAAZ,CAAiB,YAAM;AACrB,QAAA,KAAI,CAAC6lB,WAAL,CAAiBpiB,KAAK,CAAC0a,EAAvB,IAA6BD,QAA7B;;AACA,QAAA,KAAI,CAAC4H,aAAL,CAAmBN,GAAnB,CAAuBtH,QAAvB,EAAiCza,KAAK,CAAC0a,EAAvC;AACD,OAHD;AAIA,aAAOkB,WAAP;AACD,KArBH;;AAAA;AAAA;AAAA,wBAwBM5b,KAxBN,EAwBwC;AAAA;;AACpC,UAAMya,QAAQ,GAAGuH,eAAe,CAACC,cAAhB,CAA+B,IAA/B,EAAqCjiB,KAAK,CAAC1L,IAA3C,CAAjB;AACA,aAAO,IAAIqF,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B;AACAinB,QAAAA,QAAQ,CAAC4B,yBAAT,CAAmC,MAAI,CAACtE,KAAL,CAAWjY,MAAX,CAAkBuO,eAArD,EAAsErO,KAAtE,EAA6E,MAAI,CAAC+X,KAAlF,EAAyFxb,IAAzF,CAA8F,UAACzI,MAAD,EAAY;AACxGN,UAAAA,OAAO,CAAC,MAAI,CAACivB,oBAAL,CAA0B3uB,MAAM,CAACiM,SAAjC,EAA4CjM,MAAM,CAAC0mB,SAAnD,CAAD,CAAP;AACD,SAFD;AAGD,OALM,CAAP;AAMD;AAhCH;AAAA;AAAA,2BAmCSE,EAnCT,EAmC6C;AAAA;;AACzC,aAAO,IAAI/gB,OAAJ,CAAY,UAACnG,OAAD,EAAa;AAC9B,YAAMinB,QAAQ,GAAG,MAAI,CAAC2H,WAAL,CAAiB1H,EAAjB,CAAjB;AACA,YAAM5mB,MAAM,GAAG,CAAC4mB,EAAD,CAAf;AACA,YAAIgI,mBAAmB,GAAG,KAA1B;AACA,eAAO,MAAI,CAACN,WAAL,CAAiB1H,EAAjB,CAAP;;AACA,YAAID,QAAJ,EAAc;AACZ,cAAMkI,QAAQ,GAAGlI,QAAQ,CAACuB,iBAA1B;;AACA,eAAK,IAAI3jB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGsqB,QAAQ,CAAC9uB,MAArC,EAA6CwE,KAAK,EAAlD,EAAsD;AACpD,gBAAMqkB,gBAAgB,GAAGiG,QAAQ,CAACtqB,KAAD,CAAjC;;AACA,gBAAMuqB,kBAAkB,GAAG,MAAI,CAACP,aAAL,CAAmB1I,GAAnB,CAAuB+C,gBAAvB,CAA3B;;AACA,gBAAIkG,kBAAJ,EAAwB;AACtBF,cAAAA,mBAAmB,GAAG,IAAtB;;AACA,cAAA,MAAI,CAACG,MAAL,CAAYD,kBAAZ,EAAgCrmB,IAAhC,CAAqC,UAACumB,4BAAD,EAAkC;AACrEhvB,gBAAAA,MAAM,CAAC+I,IAAP,OAAA/I,MAAM,qBAASgvB,4BAAT,EAAN;AACAtvB,gBAAAA,OAAO,CAACM,MAAD,CAAP;AACD,eAHD;AAID;AACF;AACF;;AACD,YAAI,CAAC4uB,mBAAL,EAA0B;AACxBlvB,UAAAA,OAAO,CAACM,MAAD,CAAP;AACD;AACF,OAtBM,CAAP;AAuBD;AA3DH;AAAA;AAAA,2BA8DS4mB,EA9DT,EA8DqB/kB,GA9DrB,EA8DkCC,KA9DlC,EA8D8C;AAC1C,UAAM6kB,QAAQ,GAAG,KAAKd,GAAL,CAASe,EAAT,CAAjB;;AACA,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACsI,MAAT,CAAgBptB,GAAhB,EAAqBC,KAArB;AACD;;AACD,aAAO;AACL6kB,QAAAA,QAAQ,EAARA,QADK;AAELC,QAAAA,EAAE,EAAFA,EAFK;AAGL/kB,QAAAA,GAAG,EAAHA,GAHK;AAILC,QAAAA,KAAK,EAALA;AAJK,OAAP;AAMD;AAzEH;AAAA;AAAA,+BA2Ea8kB,EA3Eb,EA2EyB/kB,GA3EzB,EA2EsCC,KA3EtC,EA2EkD;AAC9C,UAAM6kB,QAAQ,GAAG,KAAKd,GAAL,CAASe,EAAT,CAAjB;;AACA,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACuI,UAAT,CAAoBrtB,GAApB,EAAyBC,KAAzB;AACD;AACF;AAhFH;AAAA;AAAA,wBAkFM8kB,EAlFN,EAkFkC;AAC9B,aAAO,KAAK0H,WAAL,CAAiB1H,EAAjB,CAAP;AACD;AApFH;AAAA;AAAA,6BAsFkC;AAC9B,aAAO7b,MAAM,CAACsF,MAAP,CAAc,KAAKie,WAAnB,CAAP;AACD;AAxFH;AAAA;AAAA,yCA0F+BriB,SA1F/B,EA0F0Cya,SA1F1C,EA0FqD;AAAA;;AACjD,UAAMyI,iBAAsB,GAAG,EAA/B;AACA,UAAMxI,QAAQ,GAAG1a,SAAS,CAACya,SAAS,CAACniB,KAAX,CAA1B;AACA,UAAMqiB,EAAE,aAAM,EAAE,KAAK6H,KAAb,CAAR;AACA,WAAKH,WAAL,CAAiB1H,EAAjB,IAAuBD,QAAvB;AACA,WAAK4H,aAAL,CAAmBN,GAAnB,CAAuBtH,QAAvB,EAAiCC,EAAjC;AAEAuI,MAAAA,iBAAiB,CAACvI,EAAlB,GAAuB,KAAK6H,KAA5B;AACAU,MAAAA,iBAAiB,CAAC3uB,IAAlB,GAAyBstB,aAAa,CAACjI,GAAd,CAAkBc,QAAQ,CAACrT,WAA3B,CAAzB;AACA6b,MAAAA,iBAAiB,CAACtI,IAAlB,GAAyBF,QAAQ,CAACE,IAAlC;AACAsI,MAAAA,iBAAiB,CAACrX,KAAlB,GAA0B,EAA1B;;AACA,WAAK,IAAMjW,IAAX,IAAkB6kB,SAAS,CAAC5O,KAA5B,EAAmC;AACjC,YAAI4O,SAAS,CAAC5O,KAAV,CAAgB1U,cAAhB,CAA+BvB,IAA/B,CAAJ,EAAyC;AACvC,cAAMmsB,QAAO,GAAGtH,SAAS,CAAC5O,KAAV,CAAgBjW,IAAhB,CAAhB;;AACA,cAAImsB,QAAJ,EAAa;AACX,gBAAI3Z,KAAK,CAAC1D,OAAN,CAAcqd,QAAd,CAAJ,EAA4B;AAC1BmB,cAAAA,iBAAiB,CAACrX,KAAlB,CAAwBjW,IAAxB,IAA+BmsB,QAAO,CAACnT,GAAR,CAAY,UAAC0S,KAAD;AAAA,uBAAW,MAAI,CAACoB,oBAAL,CAA0B1iB,SAA1B,EAAqCshB,KAArC,CAAX;AAAA,eAAZ,CAA/B;AACD,aAFD,MAEO;AACL4B,cAAAA,iBAAiB,CAACrX,KAAlB,CAAwBjW,IAAxB,IAA+B,KAAK8sB,oBAAL,CAA0B1iB,SAA1B,EAAqC+hB,QAArC,CAA/B;AACD;AACF;AACF;AACF;;AACD,aAAOmB,iBAAP;AACD;AAlHH;AAAA;AAAA,wBAoHyB;AACrB,aAAO,KAAKlL,KAAL,CAAWK,OAAX,CAAmB8K,KAA1B;AACD;AAtHH;AAAA;AAAA,wBAwHsC;AAAA;;AAClC,sCAAO,KAAKnL,KAAL,CAAWK,OAAX,CAAmByC,oBAA1B,yEAAkD,IAAlD;AACD;AA1HH;;AAAA;AAAA;;;ICnDasI,KAAb,aA2CGhL,UAAU,CAAC;AAAEU,EAAAA,KAAK,EAAE;AAAT,CAAD,CA3Cb;AAAA;;AAAA;;AAO0B;AACxB;AAGA,iBAA4BuK,QAA5B,EAA+D3K,aAA/D,EAA6F;AAAA;;AAAA;;AAAA;;AAC3F;AAD2F,UAAjE2K,QAAiE,GAAjEA,QAAiE;AAAA,UAA9B3K,aAA8B,GAA9BA,aAA8B;AAAA,UAV7E3Y,MAU6E,GAV5D,IAU4D;AAAA,UAT7E+f,WAS6E;AAAA,UAR7EwD,cAQ6E;AAAA,UAPtFhV,eAOsF;AAAA,UANtFiV,OAMsF;AAAA,UALrFC,MAKqF;AAAA,UAJtFC,OAIsF;AAAA,UAFrFzL,KAEqF;AAE3F,UAAKjY,MAAL,GAAcsjB,QAAQ,CAACtjB,MAAvB;;AACA,UAAK2jB,YAAL;;AACA,UAAKF,MAAL,GAAcH,QAAQ,CAACjK,MAAvB;AACA,UAAKqK,OAAL,GAAeJ,QAAQ,CAACI,OAAxB;AACAJ,IAAAA,QAAQ,CAACvG,OAAT,uBAAmBuG,QAAQ,CAACvG,OAA5B,+DAAuC,EAAvC;AACA,UAAKgD,WAAL,GAAmB,IAAIW,WAAJ,+BAAnB;AACA,UAAK6C,cAAL,GAAsB,IAAI5D,cAAJ,+BAAtB;AACA,UAAKI,WAAL,CAAiB/H,GAAjB,GAAuB,MAAK+H,WAAL,CAAiB/H,GAAjB,CAAqB4L,IAArB,CAA0B,MAAK7D,WAA/B,CAAvB;AACA,UAAKwD,cAAL,CAAoBvL,GAApB,GAA0B,MAAKuL,cAAL,CAAoBvL,GAApB,CAAwB4L,IAAxB,CAA6B,MAAKL,cAAlC,CAA1B;AACA,UAAKhV,eAAL,GAAuB,IAAI8T,qBAAJ,+BAAvB;;AACA,QAAIiB,QAAQ,CAACO,GAAb,EAAkB;AAChB,YAAK7jB,MAAL,CAAY8jB,eAAZ,GAA8BR,QAAQ,CAACO,GAAvC;AACA,YAAK7jB,MAAL,CAAY+jB,UAAZ,GAAyB,CAAzB;AACD;;AAf0F;AAgB5F;;AA3BH;AAAA;AAAA,iCAqCsB1K,MArCtB,EAqC4C;AACxC,WAAKoK,MAAL,GAAcpK,MAAd;AAEA,WAAKle,IAAL;AACD;AAzCH;AAAA;AAAA,2BA4C+B;AAAA;;AAC3B,WAAKwd,aAAL,CAAmBqL,IAAnB,CAAwB,IAAxB;AAEA,aAAO,KAAKC,aAAL,GAAqBxnB,IAArB,CAA0B,YAAM;AACrC,QAAA,MAAI,CAACynB,aAAL;;AACA,QAAA,MAAI,CAACC,UAAL;;AACA,QAAA,MAAI,CAACC,kBAAL,GAHqC;;;AAKrC,QAAA,MAAI,CAACC,MAAL;AACD,OANM,CAAP;AAOD;AAED;AACF;AACA;;AA1DA;AAAA;AAAA,oCA2DwC;AAAA;;AAAA,gCACZ,KAAKZ,MADO,CAC5Ba,MAD4B;AAAA,UAC5BA,MAD4B,oCACnB,EADmB;AAGpC,UAAMC,eAAe,GAAGxlB,MAAM,CAACsF,MAAP,CAAcigB,MAAd,EACrBE,MADqB,CACd,UAACtkB,KAAD,EAAW;AACjB,YAAIuhB,cAAc,CAACvhB,KAAK,CAAC1L,IAAP,CAAlB,EAAgC;AAC9B,iBAAO,IAAP;AACD;;AACDsZ,QAAAA,OAAO,CAACzM,IAAR,WAAgBnB,KAAK,CAAC1L,IAAtB,yCAAyD0L,KAAK,CAAC1L,IAA/D;AACA,eAAO,KAAP;AACD,OAPqB,EAQrBqa,GARqB,CAQjB,UAAC3O,KAAD;AAAA,eAAW,MAAI,CAACqO,eAAL,CAAqBS,IAArB,CAA0B9O,KAA1B,CAAX;AAAA,OARiB,CAAxB;AAUA,aAAOrG,OAAO,CAACgI,GAAR,CAAY0iB,eAAZ,CAAP;AACD;AAED;AACF;AACA;;AA7EA;AAAA;AAAA,oCA8E0B;AACtB,WAAKhW,eAAL,CAAqBkW,MAArB,GAA8BxlB,OAA9B,CAAsC,UAAC0b,QAAD,EAAc;AAClDA,QAAAA,QAAQ,CAACiJ,IAAT;AACD,OAFD;AAGD;AAED;AACF;AACA;;AAtFA;AAAA;AAAA,iCAuF6B;AAAA,UACjB3X,KADiB,GACP,KAAKwX,MADE,CACjBxX,KADiB;AAEzB,UAAM9P,OAAO,GAAG,KAAKuoB,QAAL,EAAhB;AACAvoB,MAAAA,OAAO,CAAC0S,GAAR,CAAY,UAACtW,KAAD;AAAA,eAAW0T,KAAK,CAAC1T,KAAD,CAAhB;AAAA,OAAZ,EAAqC0G,OAArC,CAA6C,KAAK8gB,WAAL,CAAiB/H,GAA9D;AACD;AAED;AACF;AACA;;AA/FA;AAAA;AAAA,yCAgGqC;AAAA,UACzB2M,SADyB,GACX,KAAKlB,MADM,CACzBkB,SADyB;AAEjC5lB,MAAAA,MAAM,CAACC,IAAP,CAAY2lB,SAAZ,EACG9V,GADH,CACO,UAAC+L,EAAD;AAAA;AAAWA,UAAAA,EAAE,EAAFA;AAAX,WAAkB+J,SAAS,CAAC/J,EAAD,CAA3B;AAAA,OADP,EAEG3b,OAFH,CAEW,KAAKskB,cAAL,CAAoBvL,GAF/B;AAGD;AAED;AACF;AACA;;AAzGA;AAAA;AAAA,+BA0G+B;AAAA,UACnB/L,KADmB,GACT,KAAKwX,MADI,CACnBxX,KADmB;AAE3B,UAAM2Y,KAAK,GAAG7lB,MAAM,CAACsF,MAAP,CAAc4H,KAAd,EACXuY,MADW,CACJ,UAAC/e,IAAD;AAAA,eAAU,CAACwG,KAAK,CAACxG,IAAI,CAAC0b,MAAN,CAAhB;AAAA,OADI,EAEXtS,GAFW,CAEP,UAACpJ,IAAD;AAAA,eAAUA,IAAI,CAACmV,EAAf;AAAA,OAFO,CAAd;AAIA,UAAI5mB,MAAM,GAAG,EAAb;;AACA,UAAM6wB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,KAAD,EAAqB;AAC5C5wB,QAAAA,MAAM,GAAGA,MAAM,CAAC8wB,MAAP,CAAcF,KAAd,CAAT;AACAA,QAAAA,KAAK,CAAC3lB,OAAN,CAAc,UAAC2b,EAAD,EAAQ;AACpB,cAAMrO,QAAQ,GAAGN,KAAK,CAAC2O,EAAD,CAAL,CAAUrO,QAA3B;AACAA,UAAAA,QAAQ,IAAIsY,gBAAgB,CAACtY,QAAD,CAA5B;AACD,SAHD;AAID,OAND;;AAOAsY,MAAAA,gBAAgB,CAACD,KAAD,CAAhB;AACA,aAAO5wB,MAAP;AACD;AAED;AACF;AACA;;AA9HA;AAAA;AAAA,mCA+HyB;AACrB;AACA,UAAMsY,KAAK,GAAG,KAAKtM,MAAL,CAAY6gB,YAAZ,CAAyBC,WAAvC;AACAxU,MAAAA,KAAK,CAACyY,QAAN,CAAeC,MAAf,CAAsB,CAAtB,EAAyB,CAAzB;AACA1Y,MAAAA,KAAK,CAACyY,QAAN,CAAeC,MAAf,CAAsB,CAAtB,EAAyB,CAAzB;AACC1Y,MAAAA,KAAD,CAAe2Y,aAAf,GAA+BjpB,SAA/B;AACCsQ,MAAAA,KAAD,CAAe4Y,WAAf,GAA6BlpB,SAA7B;AACCsQ,MAAAA,KAAD,CAAe6Y,iBAAf,GAAmCnpB,SAAnC;AACD;AAvIH;AAAA;AAAA,6BAwImB;AACf,WAAKuS,eAAL,CAAqBkW,MAArB,GAA8BxlB,OAA9B,CAAsC,UAAC0b,QAAD,EAAc;AAClDA,QAAAA,QAAQ,CAAC0J,MAAT;AACD,OAFD;AAGD;AA5IH;AAAA;AAAA,wBA6ByC;AACrC,aAAO,KAAKf,QAAL,CAAc8B,MAArB;AACD;AA/BH;AAAA;AAAA,wBAiC0C;AACtC,aAAO,KAAK9B,QAAZ;AACD;AAnCH;AAAA;AAAA,2BA8IgBhL,OA9IhB,EA8IkCK,aA9IlC,EA8IgF;AAC5E,UAAMV,KAAK,GAAG,IAAIoL,KAAJ,CAAU/K,OAAV,EAAmBK,aAAnB,CAAd;AACA,aAAOV,KAAK,CAAC9c,IAAN,GAAasB,IAAb,CAAkB,YAAM;AAC7B6b,QAAAA,OAAO,CAACzB,QAAR,IAAoBoB,KAAK,CAACjY,MAAN,CAAaqlB,GAAb,EAApB;AACA,eAAOpN,KAAP;AACD,OAHM,CAAP;AAID;AApJH;;AAAA;AAAA,EAA2BqN,sBAA3B;;ACJA,IAAMC,cAAc,GAAG,CACrB,OADqB,EAErB,QAFqB,EAGrB,MAHqB,EAIrB,YAJqB,EAKrB,sBALqB,EAMrB,SANqB,EAOrB,YAPqB,EAQrB,sBARqB,EASrB,gBATqB,EAUrB,0BAVqB,EAWrB,SAXqB,CAAvB;AAcA;AACA;AACA;AACA;;AACA,AAAO,SAASC,cAAT,CAAwBnM,MAAxB,EAAgC;AAAA,0BACGA,MADH,CAC7BsL,SAD6B;AAAA,MAC7BA,SAD6B,kCACjB,EADiB;AAAA,uBACGtL,MADH,CACbiL,MADa;AAAA,MACbA,MADa,+BACJ,EADI;AAErC,MAAMmB,GAAG,GAAG1mB,MAAM,CAACC,IAAP,CAAY2lB,SAAZ,CAAZ;AACA,MAAMe,SAAS,GAAG3mB,MAAM,CAACC,IAAP,CAAYslB,MAAZ,CAAlB;;AAEA,OAAK,IAAIjvB,CAAC,GAAG,CAAR,EAAWswB,CAAC,GAAGF,GAAG,CAAC1xB,MAAxB,EAAgCsB,CAAC,GAAGswB,CAApC,EAAuC,EAAEtwB,CAAzC,EAA4C;AAC1CuwB,IAAAA,WAAW,CAACjB,SAAS,CAACc,GAAG,CAACpwB,CAAD,CAAJ,CAAT,CAAkByW,KAAnB,CAAX;AACD;;AAED,OAAK,IAAIzW,EAAC,GAAG,CAAR,EAAWswB,EAAC,GAAGD,SAAS,CAAC3xB,MAA9B,EAAsCsB,EAAC,GAAGswB,EAA1C,EAA6C,EAAEtwB,EAA/C,EAAkD;AAChDwwB,IAAAA,YAAY,CAACvB,MAAM,CAACoB,SAAS,CAACrwB,EAAD,CAAV,CAAN,CAAqByW,KAAtB,CAAZ;AACD;;AAED,SAAOuN,MAAP;AACD;;AAGD,SAASuM,WAAT,CAAqB9Z,KAArB,EAA4B;AAC1B,MAAM9M,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY8M,KAAZ,CAAb;;AACA,OAAK,IAAIzW,CAAC,GAAG,CAAR,EAAWswB,CAAC,GAAG3mB,IAAI,CAACjL,MAAzB,EAAiCsB,CAAC,GAAGswB,CAArC,EAAwC,EAAEtwB,CAA1C,EAA6C;AAC3C,QAAMwmB,CAAC,GAAG7c,IAAI,CAAC3J,CAAD,CAAd;AACA,QAAMywB,CAAC,GAAGha,KAAK,CAAC+P,CAAD,CAAf;;AAEA,QAAIiK,CAAC,KAAK,IAAN,IAAc,QAAOA,CAAP,MAAa,QAA3B,IAAuCA,CAAC,CAAC/xB,MAAF,GAAW,CAAtD,EAAyD;AACvD,UAAI8nB,CAAC,KAAK,iBAAN,IAA2BA,CAAC,KAAK,WAArC,EAAkD;AAChD/P,QAAAA,KAAK,CAAC+P,CAAD,CAAL,GAAW,IAAIriB,cAAJ,CAAYssB,CAAC,CAAC,CAAD,CAAb,EAAkBA,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,EAA8BA,CAAC,CAAC,CAAD,CAA/B,CAAX;AACD,OAFD,MAEO,IAAIP,cAAc,CAACnkB,OAAf,CAAuBya,CAAvB,MAA8B,CAAC,CAAnC,EAAsC;AAC3C/P,QAAAA,KAAK,CAAC+P,CAAD,CAAL,GAAW,IAAItiB,cAAJ,CAAYusB,CAAC,CAAC,CAAD,CAAb,EAAkBA,CAAC,CAAC,CAAD,CAAnB,EAAwBA,CAAC,CAAC,CAAD,CAAzB,CAAX;AACD;AACF;AACF;AACF;;AAED,SAASD,YAAT,GAAuC;AAAA,MAAjB/Z,KAAiB,uEAAJ,EAAI;;AACrC,MAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,MAAM9M,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY8M,KAAZ,CAAb;;AACA,OAAK,IAAIzW,CAAC,GAAG,CAAR,EAAWswB,CAAC,GAAG3mB,IAAI,CAACjL,MAAzB,EAAiCsB,CAAC,GAAGswB,CAArC,EAAwCtwB,CAAC,EAAzC,EAA6C;AAC3C,QAAMQ,GAAG,GAAGmJ,IAAI,CAAC3J,CAAD,CAAhB;AACA,QAAMS,KAAK,GAAGgW,KAAK,CAACjW,GAAD,CAAnB;;AACA,QAAIA,GAAG,KAAK,aAAR,IAAyBA,GAAG,KAAK,mBAAjC,IAAwDA,GAAG,KAAK,SAApE,EAA+E;AAC7E;AACD;;AACD,YAAQC,KAAR,aAAQA,KAAR,uBAAQA,KAAK,CAAE/B,MAAf;AACE,WAAK,CAAL;AACE+X,QAAAA,KAAK,CAACjW,GAAD,CAAL,GAAa,IAAIyD,cAAJ,CAAYxD,KAAK,CAAC,CAAD,CAAjB,EAAsBA,KAAK,CAAC,CAAD,CAA3B,CAAb;AACA;;AACF,WAAK,CAAL;AACEgW,QAAAA,KAAK,CAACjW,GAAD,CAAL,GAAa,IAAI0D,cAAJ,CAAYzD,KAAK,CAAC,CAAD,CAAjB,EAAsBA,KAAK,CAAC,CAAD,CAA3B,EAAgCA,KAAK,CAAC,CAAD,CAArC,CAAb;AACA;;AACF,WAAK,CAAL;AACEgW,QAAAA,KAAK,CAACjW,GAAD,CAAL,GAAa,IAAI2D,cAAJ,CAAY1D,KAAK,CAAC,CAAD,CAAjB,EAAsBA,KAAK,CAAC,CAAD,CAA3B,EAAgCA,KAAK,CAAC,CAAD,CAArC,EAA0CA,KAAK,CAAC,CAAD,CAA/C,CAAb;AACA;AATJ;AAWD;AACF;;ACtED,IAAMiwB,sBAAsB,GAAG,CAA/B;AAEA,IAAarH,MAAb;AAAA;AAAA;AAAA,0BAEepG,OAFf,EAEiD;AAAA;;AAC7C,UAAI,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,+BAAAA,OAAO,CAAEe,MAAT,oEAAiBlZ,OAAjB,MAA6B4lB,sBAAjC,EAAyD;AAAA;;AACvDjY,QAAAA,OAAO,CAACzM,IAAR,2CACoCiX,OADpC,aACoCA,OADpC,2CACoCA,OAAO,CAAEe,MAD7C,qDACoC,iBAAiBlZ,OADrD,2EAC4H4lB,sBAD5H;AAGD;;AACDP,MAAAA,cAAc,CAAClN,OAAO,CAACe,MAAT,CAAd;AACA,aAAOgK,KAAK,CAACpC,MAAN,CAAa3I,OAAb,EAAsB,KAAKK,aAA3B,CAAP;AACD;AAVH;AAAA;AAAA,6BAYWZ,MAZX,EAY2B;AACvB,WAAKY,aAAL,CAAmBqN,QAAnB,CAA4BjO,MAA5B;AACD;AAdH;AAAA;AAAA,mCAgBiB;AACb,WAAKY,aAAL,CAAmBsN,KAAnB;AACD;AAlBH;;AAoBE,oBAAsB;AAAA;;AAAA,SAnBdtN,aAmBc,GAnBiB,IAAIhB,aAAJ,EAmBjB;AAAE;;AApB1B;AAAA;AAAA,6BAsB0B;AACtB,UAAMuO,MAAM,GAAG,IAAIxH,MAAJ,EAAf;AACA,aAAOwH,MAAP;AACD;AAED;;AA3BF;AAAA;;AA6BE;AACF;AACA;AACA;AACA;AAjCA,uCAkC4BC,SAlC5B,EAkC+CC,UAlC/C,EAkCmF;AAC/E,UAAI,CAAC,KAAKzH,WAAL,CAAiBwH,SAAjB,CAAL,EAAkC;AAChC,aAAKxH,WAAL,CAAiBwH,SAAjB,IAA8B,EAA9B;AACD;;AACD,eAAc,KAAKxH,WAAL,CAAiBwH,SAAjB,CAAd,EAA2CC,UAA3C;AACD;AAvCH;;AAAA;AAAA;AAAa1H,OA4BGC,cAA0E;AAc1F,IAAauH,MAAM,GAAGxH,MAAM,CAACuC,MAAP,EAAf;;;;;;;;;;;;"}