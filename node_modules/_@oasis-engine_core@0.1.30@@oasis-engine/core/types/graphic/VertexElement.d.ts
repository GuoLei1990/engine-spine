import { VertexElementFormat } from "./enums/VertexElementFormat";
import { ElementInfo } from "./BufferUtil";
/**
 * 顶点元素。
 */
export declare class VertexElement {
    readonly normalized = false;
    _glElementInfo: ElementInfo;
    private _semantic;
    private _offset;
    private _format;
    private _bindingIndex;
    private _instanceStepRate;
    /**
     * 顶点输入签名。
     */
    get semantic(): string;
    /**
     * 顶点的偏移，以字节为单位。
     */
    get offset(): number;
    /**
     * 顶点元素格式。
     */
    get format(): VertexElementFormat;
    /**
     * 顶点缓冲绑定索引。
     */
    get bindingIndex(): number;
    /**
     * 实例步频，在缓冲中每前进一个顶点绘制的实例数量，非实例元素必须为 0。
     */
    get instanceStepRate(): number;
    /**
     * 构造顶点元素。
     * @param semantic - 顶点着色器输入签名
     * @param offset - 顶点的偏移，以字节为单位
     * @param format - 顶点元素格式
     * @param bindingIndex - 顶点缓冲绑定索引
     * @param instanceStepRate - 实例步频，在缓冲中每前进一个顶点绘制的实例数量，非实例元素必须为 0
     */
    constructor(semantic: string, offset: number, format: VertexElementFormat, bindingIndex: number, instanceStepRate?: number);
    /**
     * @deprecated
     */
    get elementInfo(): ElementInfo;
}
