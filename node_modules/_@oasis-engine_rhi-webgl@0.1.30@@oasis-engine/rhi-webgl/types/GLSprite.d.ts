import { Vector2, Vector3, Vector4 } from "@oasis-engine/math";
/**
 * 管理HUD控件Batch绘制时，需要处理的几何体数据
 * @private
 */
export declare class GLSprite {
    private gl;
    private _vbo;
    private _maxBatchCount;
    private _vertBuffer;
    private _vertCursor;
    private _drawSpriteCount;
    private _vertAttributes;
    constructor(gl: any);
    /**
     * 设置需要绘制的控件的个数
     * @param {NUMBER} count 控件的个数
     */
    setMaxBatchCount(count: any): void;
    /**
     * 开始绘制控件，清空内部状态
     */
    beginDraw(count: any): void;
    /**
     * 将一个2D Sprite绘制所需的矩形，Batch到内部的Vertex Buffer之中
     * @param {HUDWidget} screenRect 需要绘制的控件
     */
    drawSprite(positionQuad: any, uvRect: any, tintColor: any): void;
    /**
     * 执行真正的绘制
     */
    endDraw(): void;
    /**
     * 初始化内部的顶点属性，包括pos, uv, color
     * @param {WebGLRenderingContext} gl GL Context对象
     */
    _initVertexAttributes(gl: any): void;
    /**
     * 向当前的顶点缓冲中添加一个顶点
     * @param {Vector3} pos 位置坐标
     * @param {Vector2} uv 贴图坐标
     * @param {Vector4} color 颜色RGBA
     */
    _pushVertex(pos: Vector3, uv: Vector2, color: Vector4): void;
    finalize(): void;
}
