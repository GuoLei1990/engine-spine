import { IClone } from "@oasis-engine/design";
import { BoundingBox } from "./BoundingBox";
import { Vector3 } from "./Vector3";
/**
 * 包围球。
 * */
export declare class BoundingSphere implements IClone {
    private static _tempVec30;
    /**
     * 通过给出的顶点数组计算包围球。
     * @param points - 顶点数组
     * @param out - 包围球
     * @returns 计算包围球是否成功
     */
    static fromPoints(points: Vector3[], out: BoundingSphere): void;
    /**
     * 通过给出的包围盒计算包围球。
     * @param box - 包围盒
     * @param out - 包围球
     * @returns 计算包围球是否成功
     */
    static fromBox(box: BoundingBox, out: BoundingSphere): void;
    /** 包围球的中心。 */
    readonly center: Vector3;
    /** 包围球的半径。 */
    radius: number;
    /**
     * 创建一个包围球。
     * @param center - 包围球的中心
     * @param radius - 包围球的半径
     */
    constructor(center?: Vector3, radius?: number);
    /**
     * 克隆并返回一个新的包围盒对象。
     * @returns 新的包围盒对象
     */
    clone(): BoundingSphere;
    /**
     * 将当包围盒值拷贝给 out 包围盒。
     * @param out - 目标包围盒
     */
    cloneTo(out: BoundingSphere): BoundingSphere;
}
