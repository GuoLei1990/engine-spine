import { IClone } from "@oasis-engine/design";
/**
 * 颜色类。
 */
export declare class Color implements IClone {
    /**
     * gamma 空间值转换到线性空间。
     * @param value - gamma 空间值
     * @returns 线性空间值
     */
    static gammaToLinearSpace(value: number): number;
    /**
     * 线性空间值转换到 gamma 空间。
     * @param value - 线性空间值
     * @returns gamma 空间值
     */
    static linearToGammaSpace(value: number): number;
    /**
     * 判断两个颜色的值是否相等。
     * @param left - 颜色
     * @param right - 颜色
     * @returns 两个颜色值是否相等，是返回 true，否则返回 false
     */
    static equals(left: Color, right: Color): boolean;
    /** red 分量 0~1。 */
    r: number;
    /** green 分量 0~1。 */
    g: number;
    /** blue 分量 0~1。 */
    b: number;
    /** alpha 分量 0~1。 */
    a: number;
    constructor(r?: number, g?: number, b?: number, a?: number);
    /**
     * 创建一个新的颜色对象，并用当前颜色对象值初始化。
     * @returns 一个新的颜色对象，并且拷贝当前颜色对象的值
     */
    clone(): Color;
    /**
     * 将当前颜色对象值拷贝给 out 颜色对象。
     * @param out - 目标颜色对象
     * @returns out 颜色对象
     */
    cloneTo(out: Color): Color;
    /**
     * gamma 空间转换到线性空间。
     * @param out - 线性空间颜色
     * @returns 线性空间颜色
     */
    toLinear(out: Color): Color;
    /**
     * 线性空间转换到 gamma 空间。
     * @param out - gamma 空间颜色
     * @returns gamma 空间颜色
     */
    toGamma(out: Color): Color;
}
