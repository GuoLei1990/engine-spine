import { EngineObject } from "../base/EngineObject";
import { Engine } from "../Engine";
/**
 * 资产的基类，具有引用计数能力。
 */
export declare abstract class RefObject extends EngineObject {
    /** 是否忽略垃圾回收的检查,如果为 true 则不受 ResourceManager.gc() 影响。*/
    isGCIgnored: boolean;
    private _refCount;
    private _refChildren;
    private _refParent;
    private _destroyed;
    /**
     * 被有效引用计数。
     */
    get refCount(): number;
    /**
     * 是否已销毁。
     */
    get destroyed(): boolean;
    protected constructor(engine: Engine);
    /**
     * 销毁。
     * @param force - 是否强制销毁,如果为 fasle 则 refCount = 0 可释放成功
     * @returns 是否释放成功
     */
    destroy(force?: boolean): boolean;
    /**
     * 当资源销毁时调用。
     * 子类可重写该函数。
     */
    protected abstract _onDestroy(): void;
}
