{"version":3,"file":"main.js","sources":["../src/GLAssetsCache.ts","../src/GLCapability.ts","../src/GLExtensions.ts","../src/GLAsset.ts","../src/GLPrimitive.ts","../src/GLRenderStates.ts","../src/GLRenderTarget.ts","../src/GLSprite.ts","../src/GLSpriteMaterial.ts","../src/GLShaderProgram.ts","../src/GLTechnique.ts","../src/GLSpriteBatcher.ts","../src/GLVAOPrimitive.ts","../src/WebGLRenderer.ts","../src/WebCanvas.ts","../src/WebGLEngine.ts"],"sourcesContent":["import { InternalAssetType } from \"@alipay/o3-core\";\nimport { AssetObject } from \"@alipay/o3-core\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLAsset } from \"./GLAsset\";\n\ninterface ObjectSet {\n  [key: number]: GLAsset;\n}\n\n/**\n * 引擎的资源对象所需要的 GL 资源对象的 Cache 管理\n * @private\n */\nexport class GLAssetsCache {\n  private readonly _rhi: WebGLRenderer;\n  private _objectSet: ObjectSet;\n  private _checkList: GLAsset[];\n  private _nextID: number;\n  private readonly _enableCollect: boolean;\n\n  constructor(rhi: WebGLRenderer, props: any = {}) {\n    this._rhi = rhi;\n    this._objectSet = {}; // 所有资源对象的集合\n    this._checkList = []; // 需要检测生命周期的对象列表\n    this._nextID = 1;\n    // 是否启用回收机制\n    this._enableCollect = props.enableCollect === undefined ? true : !!props.enableCollect;\n  }\n\n  /**\n   * 为一个引擎资源对象创建对应的 GL 资源对象\n   * @param {object} asset\n   * @param {class} ctor\n   */\n  requireObject(asset: AssetObject, ctor: new (...args: any) => GLAsset) {\n    let cachedObject = null;\n\n    //-- 查找已有\n    if (asset.cacheID) {\n      cachedObject = this._objectSet[asset.cacheID];\n    }\n\n    if (!cachedObject || asset.needRecreate) {\n      const cacheID = this._nextID++;\n      const objectSet = this._objectSet;\n\n      //-- 创新新的\n      cachedObject = new ctor(this._rhi, asset);\n      objectSet[cacheID] = cachedObject;\n      cachedObject.cacheID = cacheID;\n      cachedObject.asset = asset;\n      asset.cacheID = cacheID;\n      asset.needRecreate = false;\n\n      //-- 处理运行时资源释放\n      if (this._enableCollect && asset.type === InternalAssetType.Cache) {\n        this._checkList.push(cachedObject);\n      }\n    }\n\n    cachedObject.activeFrame = this._rhi.frameCount;\n    asset.glAsset = cachedObject;\n    return cachedObject;\n  }\n\n  /**\n   * 清除 Cache 中没有用到的 GL 资源对象\n   */\n  compact() {\n    if (!this._enableCollect) return;\n\n    const currentFrame = this._rhi.frameCount;\n\n    const checkList = this._checkList;\n    const objectSet = this._objectSet;\n\n    for (let i = checkList.length - 1; i >= 0; i--) {\n      const cachedObject = checkList[i];\n      if (cachedObject.activeFrame < currentFrame) {\n        delete objectSet[cachedObject.cacheID];\n        checkList.splice(i, 1);\n\n        cachedObject.finalize();\n      }\n    }\n  }\n\n  /**\n   * 释放内部登记的所有对象\n   */\n  finalize() {\n    for (const name in this._objectSet) {\n      const obj = this._objectSet[name];\n      obj.finalize(true);\n    }\n    this._objectSet = {};\n    this._checkList = [];\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLCapabilityType, GLCompressedTextureInternalFormat } from \"@alipay/o3-core\";\n\ntype extensionKey = string;\n\n/**\n * GL 能力统一管理\n * */\nexport class GLCapability {\n  private _maxDrawBuffers: number;\n  private _maxAnisoLevel: number;\n  private _maxAntiAliasing: number;\n\n  _rhi: WebGLRenderer;\n  capabilityList: Map<GLCapabilityType, boolean>;\n\n  get maxDrawBuffers() {\n    if (!this._maxDrawBuffers) {\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        this._maxDrawBuffers = this._rhi.gl.getParameter(this._rhi.gl.MAX_DRAW_BUFFERS);\n      } else {\n        this._maxDrawBuffers = 1;\n      }\n    }\n    return this._maxDrawBuffers;\n  }\n\n  /**\n   * 最大各向异性过滤等级。\n   */\n  get maxAnisoLevel(): number {\n    if (!this._maxAnisoLevel) {\n      const ext = this._rhi.requireExtension(GLCapabilityType.textureFilterAnisotropic);\n      this._maxAnisoLevel = ext ? this._rhi.gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1;\n    }\n    return this._maxAnisoLevel;\n  }\n\n  /**\n   * 最大 MSAA 采样数量\n   */\n  get maxAntiAliasing(): number {\n    if (!this._maxAntiAliasing) {\n      const gl = this._rhi.gl;\n      const canMSAA = this.canIUse(GLCapabilityType.multipleSample);\n\n      this._maxAntiAliasing = canMSAA ? gl.getParameter(gl.MAX_SAMPLES) : 1;\n    }\n    return this._maxAntiAliasing;\n  }\n\n  get rhi() {\n    return this._rhi;\n  }\n\n  constructor(rhi: WebGLRenderer) {\n    this._rhi = rhi;\n    this.capabilityList = new Map();\n\n    this.init();\n    // 抹平接口差异\n    this.compatibleAllInterface();\n  }\n\n  /**\n   * 查询能否使用某些 GL 能力\n   * */\n  public canIUse(capabilityType: GLCapabilityType): boolean {\n    return this.capabilityList.get(capabilityType);\n  }\n\n  /**\n   * 查询能否使用某种压缩纹理格式\n   * */\n  public canIUseCompressedTextureInternalFormat(internalType: GLCompressedTextureInternalFormat): boolean {\n    const {\n      // astc\n      RGBA_ASTC_4X4_KHR,\n      RGBA_ASTC_12X12_KHR,\n      SRGB8_ALPHA8_ASTC_4X4_KHR,\n      SRGB8_ALPHA8_ASTC_12X12_KHR,\n      // etc1\n      RGB_ETC1_WEBGL,\n      // etc\n      R11_EAC,\n      SRGB8_ALPHA8_ETC2_EAC,\n      // pvrtc\n      RGB_PVRTC_4BPPV1_IMG,\n      RGBA_PVRTC_2BPPV1_IMG,\n      // s3tc\n      RGB_S3TC_DXT1_EXT,\n      RGBA_S3TC_DXT5_EXT\n    } = GLCompressedTextureInternalFormat;\n    if (\n      (internalType >= RGBA_ASTC_4X4_KHR && RGBA_ASTC_12X12_KHR <= RGBA_ASTC_12X12_KHR) ||\n      (internalType >= SRGB8_ALPHA8_ASTC_4X4_KHR && internalType <= SRGB8_ALPHA8_ASTC_12X12_KHR)\n    ) {\n      return this.canIUse(GLCapabilityType.astc);\n    } else if (internalType === RGB_ETC1_WEBGL) {\n      return this.canIUse(GLCapabilityType.etc1);\n    } else if (internalType >= R11_EAC && internalType <= SRGB8_ALPHA8_ETC2_EAC) {\n      return this.canIUse(GLCapabilityType.etc);\n    } else if (internalType >= RGB_PVRTC_4BPPV1_IMG && internalType <= RGBA_PVRTC_2BPPV1_IMG) {\n      return this.canIUse(GLCapabilityType.pvrtc);\n    } else if (internalType >= RGB_S3TC_DXT1_EXT && internalType <= RGBA_S3TC_DXT5_EXT) {\n      return this.canIUse(GLCapabilityType.s3tc);\n    }\n    return false;\n  }\n\n  /** 是否能使用更多骨骼关节 */\n  public get canIUseMoreJoints() {\n    return (\n      this.canIUse(GLCapabilityType.textureFloat) &&\n      this.rhi.renderStates.getParameter(this.rhi.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0\n    );\n  }\n\n  /**\n   *  初始化能力\n   * */\n  private init() {\n    const cap = this.capabilityList;\n    const { isWebGL2 } = this.rhi;\n    const requireExtension = this.rhi.requireExtension.bind(this.rhi);\n\n    const {\n      standardDerivatives,\n      shaderTextureLod,\n      elementIndexUint,\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      multipleSample,\n      drawBuffers,\n\n      astc,\n      astc_webkit,\n      etc,\n      etc_webkit,\n      etc1,\n      etc1_webkit,\n      pvrtc,\n      pvrtc_webkit,\n      s3tc,\n      s3tc_webkit,\n\n      textureFloat,\n      textureHalfFloat,\n      textureFloatLinear,\n      textureHalfFloatLinear,\n      WEBGL_colorBufferFloat,\n      colorBufferFloat,\n      colorBufferHalfFloat,\n      textureFilterAnisotropic\n    } = GLCapabilityType;\n    cap.set(standardDerivatives, isWebGL2 || !!requireExtension(standardDerivatives));\n    cap.set(shaderTextureLod, isWebGL2 || !!requireExtension(shaderTextureLod));\n    cap.set(elementIndexUint, isWebGL2 || !!requireExtension(elementIndexUint));\n    cap.set(depthTexture, isWebGL2 || !!requireExtension(depthTexture));\n    cap.set(vertexArrayObject, isWebGL2 || !!requireExtension(vertexArrayObject));\n    cap.set(instancedArrays, isWebGL2 || !!requireExtension(instancedArrays));\n    cap.set(multipleSample, isWebGL2);\n    cap.set(drawBuffers, isWebGL2 || !!requireExtension(drawBuffers));\n    cap.set(textureFloat, isWebGL2 || !!requireExtension(textureFloat));\n    cap.set(textureHalfFloat, isWebGL2 || !!requireExtension(textureHalfFloat));\n    cap.set(textureFloatLinear, !!requireExtension(textureFloatLinear));\n    cap.set(textureHalfFloatLinear, !!requireExtension(textureHalfFloatLinear));\n    cap.set(\n      colorBufferFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(WEBGL_colorBufferFloat)\n    );\n    cap.set(\n      colorBufferHalfFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(colorBufferHalfFloat)\n    );\n    cap.set(textureFilterAnisotropic, !!requireExtension(textureFilterAnisotropic));\n\n    cap.set(astc, !!(requireExtension(astc) || requireExtension(astc_webkit)));\n    cap.set(etc, !!(requireExtension(etc) || requireExtension(etc_webkit)));\n    cap.set(etc1, !!(requireExtension(etc1) || requireExtension(etc1_webkit)));\n    cap.set(pvrtc, !!(requireExtension(pvrtc) || requireExtension(pvrtc_webkit)));\n    cap.set(s3tc, !!(requireExtension(s3tc) || requireExtension(s3tc_webkit)));\n  }\n\n  /**\n   * 如果有插件能补充该能力，则抹平该差异\n   * @example\n   * compatible(GLCapabilityType.depthTexture,{\n   *    UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n   * })\n   * 满足条件时， gl.UNSIGNED_INT_24_8 = ext.UNSIGNED_INT_24_8_WEBGL\n   * */\n  private compatibleInterface(capabilityType: GLCapabilityType, flatItem: { [glKey: string]: extensionKey }) {\n    const rhi = this.rhi;\n    const gl = rhi.gl;\n    let ext = null;\n\n    /** 如果有插件能补充该能力，则抹平该差异 */\n    if ((ext = rhi.requireExtension(capabilityType))) {\n      for (let glKey in flatItem) {\n        const extensionKey = flatItem[glKey];\n        const extensionVal = ext[extensionKey];\n\n        if (extensionVal instanceof Function) {\n          gl[glKey] = extensionVal.bind(ext);\n        } else {\n          gl[glKey] = extensionVal;\n        }\n      }\n    }\n  }\n\n  /** 抹平接口差异 */\n  private compatibleAllInterface() {\n    // 需要兼容的能力\n    const {\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      drawBuffers,\n      textureFilterAnisotropic,\n      textureHalfFloat,\n      colorBufferHalfFloat,\n      WEBGL_colorBufferFloat\n    } = GLCapabilityType;\n    const { isWebGL2 } = this.rhi;\n\n    //  以下能力 WebGL2.0 必有，不需要插件\n    if (!isWebGL2) {\n      this.compatibleInterface(depthTexture, {\n        UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n      });\n      this.compatibleInterface(vertexArrayObject, {\n        createVertexArray: \"createVertexArrayOES\",\n        deleteVertexArray: \"deleteVertexArrayOES\",\n        isVertexArray: \"isVertexArrayOES\",\n        bindVertexArray: \"bindVertexArrayOES\"\n      });\n      this.compatibleInterface(instancedArrays, {\n        drawArraysInstanced: \"drawArraysInstancedANGLE\",\n        drawElementsInstanced: \"drawElementsInstancedANGLE\",\n        vertexAttribDivisor: \"vertexAttribDivisorANGLE\"\n      });\n      this.compatibleInterface(drawBuffers, {\n        MAX_DRAW_BUFFERS: \"MAX_DRAW_BUFFERS_WEBGL\"\n      });\n      const items = {};\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        for (let i = 0; i < this.rhi.requireExtension(drawBuffers).MAX_DRAW_BUFFERS_WEBGL; i++) {\n          i != 0 && (items[`COLOR_ATTACHMENT${i}`] = `COLOR_ATTACHMENT${i}_WEBGL`);\n          items[`DRAW_BUFFER0${i}`] = `DRAW_BUFFER${i}_WEBGL`;\n        }\n        this.compatibleInterface(drawBuffers, {\n          drawBuffers: \"drawBuffersWEBGL\",\n          ...items\n        });\n      }\n      this.compatibleInterface(textureHalfFloat, {\n        HAFL_FLOAT: \"HALF_FLOAT_OES\"\n      });\n      this.compatibleInterface(colorBufferHalfFloat, {\n        RGBA16F: \"RBGA16F_EXT\"\n      });\n      this.compatibleInterface(WEBGL_colorBufferFloat, {\n        RGBA32F: \"RBGA32F_EXT\"\n      });\n    }\n\n    // 以下能力依赖插件，不依赖 WebGL 环境\n    this.compatibleInterface(textureFilterAnisotropic, {\n      TEXTURE_MAX_ANISOTROPY_EXT: \"TEXTURE_MAX_ANISOTROPY_EXT\"\n    });\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLCapabilityType } from \"@alipay/o3-core\";\n\n/**\n * GLContext 扩展管理\n * @private\n */\nexport class GLExtensions {\n  private rhi: WebGLRenderer;\n  private _requireResult;\n\n  constructor(rhi: WebGLRenderer) {\n    this.rhi = rhi;\n    this._requireResult = {};\n  }\n\n  /**\n   * 请求扩展\n   * @param {String} ext 扩展名\n   * @returns {Object|null} 请求结果，返回插件对象或null\n   * @private\n   */\n  requireExtension(ext: GLCapabilityType) {\n    if (this._requireResult[ext] !== undefined) {\n      return this._requireResult[ext];\n    }\n\n    this._requireResult[ext] = this.rhi.gl.getExtension(ext);\n    return this._requireResult[ext];\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { AssetObject } from \"@alipay/o3-core\";\n\n/**\n * GL 资源对象，通过 GLAssetsCache 管理\n * */\nexport abstract class GLAsset {\n  private readonly _rhi: WebGLRenderer;\n\n  /** @member {AssetObject} -  引擎 js 部分的资源对象 */\n  public asset: AssetObject;\n  public activeFrame: number;\n  public cacheID: number;\n\n  /**\n   * @param {WebGLRenderer} rhi - GPU 硬件抽象层的 WebGL\n   * @param {AssetObject} asset - 引擎 js 部分的资源对象\n   * */\n  protected constructor(rhi: WebGLRenderer, asset: AssetObject) {\n    this._rhi = rhi;\n    this.asset = asset;\n  }\n\n  get rhi() {\n    return this._rhi;\n  }\n\n  /**\n   * 释放 GL 资源\n   * @param {boolean} force - 强制释放\n   */\n  abstract finalize(force?: boolean);\n}\n","import { GLCapabilityType, Logger, Primitive } from \"@alipay/o3-core\";\nimport { GLAsset } from \"./GLAsset\";\nimport { GLTechnique } from \"./GLTechnique\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Primtive 相关的 GL 资源管理，主要是 WebGLBuffer 对象\n * @private\n */\nexport class GLPrimitive extends GLAsset {\n  protected readonly _primitive: Primitive;\n  protected attribLocArray: number[];\n  protected readonly canUseInstancedArrays: boolean;\n\n  constructor(rhi: WebGLRenderer, primitive: Primitive) {\n    super(rhi, primitive);\n    this._primitive = primitive;\n    this.canUseInstancedArrays = this.rhi.canIUse(GLCapabilityType.instancedArrays);\n  }\n\n  /**\n   * 绑定 Buffer 和 attribute\n   */\n  protected bindBufferAndAttrib(tech: GLTechnique) {\n    const gl = this.rhi.gl;\n    const primitive = this._primitive;\n    const vertexBufferBindings = primitive.vertexBufferBindings;\n\n    this.attribLocArray = [];\n    const techAttributes = tech.attributes;\n    const attributes = primitive.attributes;\n\n    let vbo: WebGLBuffer;\n    let lastBoundVbo: WebGLBuffer;\n\n    for (const name in techAttributes) {\n      const loc = techAttributes[name].location;\n      if (loc === -1) continue;\n\n      const semantic = techAttributes[name].semantic;\n      const element = attributes[semantic];\n      if (element) {\n        const { buffer, stride } = vertexBufferBindings[element.vertexBufferIndex];\n        vbo = buffer._nativeBuffer;\n        // prevent binding the vbo which already bound at the last loop, e.g. a buffer with multiple attributes.\n        if (lastBoundVbo !== vbo) {\n          lastBoundVbo = vbo;\n          gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n        }\n\n        gl.enableVertexAttribArray(loc);\n        const { size, type } = element._glElementInfo;\n        gl.vertexAttribPointer(loc, size, type, element.normalized, stride, element.offset);\n        if (this.canUseInstancedArrays) {\n          gl.vertexAttribDivisor(loc, element.instanceDivisor);\n        }\n        this.attribLocArray.push(loc);\n      } else {\n        Logger.warn(\"vertex attribute not found: \" + name);\n      }\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  /**\n   * 执行绘制操作。\n   */\n  draw(tech: GLTechnique) {\n    const gl = this.rhi.gl;\n    const primitive = this._primitive;\n\n    // 绑定 Buffer 和 attribute\n    this.bindBufferAndAttrib(tech);\n\n    // draw\n    const { primitiveTopology, indexBufferBinding, drawOffset, drawCount, instanceCount, _glIndexType } = primitive;\n\n    if (!instanceCount) {\n      if (indexBufferBinding) {\n        const { _nativeBuffer } = indexBufferBinding.buffer;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n        gl.drawElements(primitiveTopology, drawCount, _glIndexType, drawOffset);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n      } else {\n        gl.drawArrays(primitiveTopology, drawOffset, drawCount);\n      }\n    } else {\n      if (this.canUseInstancedArrays) {\n        if (indexBufferBinding) {\n          const { _nativeBuffer } = indexBufferBinding.buffer;\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n          gl.drawElementsInstanced(primitiveTopology, drawCount, _glIndexType, drawOffset, instanceCount);\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        } else {\n          gl.drawArraysInstanced(primitiveTopology, drawOffset, drawCount, instanceCount);\n        }\n      } else {\n        Logger.error(\"ANGLE_instanced_arrays extension is not supported\");\n      }\n    }\n\n    /** unbind */\n    this.disableAttrib();\n  }\n\n  protected disableAttrib() {\n    const gl = this.rhi.gl;\n    for (let i = 0, l = this.attribLocArray.length; i < l; i++) {\n      gl.disableVertexAttribArray(this.attribLocArray[i]);\n    }\n  }\n\n  /**\n   * 释放 GL 资源\n   */\n  finalize() {}\n}\n","/**\n * 管理渲染状态，主要功能：设置默认渲染状态，cache当前渲染状态，管理渲染状态stack（供恢复用）\n * @class\n * @private\n */\nexport class GLRenderStates {\n  private _gl: WebGLRenderingContext;\n  private _stateStack = [];\n  private _parameters = {};\n\n  /**\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(gl: WebGLRenderingContext) {\n    this._gl = gl;\n    this._stateStack = []; // stat block stack\n    this._parameters = {}; // current gl state parameters\n\n    //-- 初始化，设置所有渲染状态为默认值 ---------------\n\n    /** cache */\n    this._parameters[gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this._parameters[gl.MAX_VERTEX_UNIFORM_VECTORS] = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    this._parameters[gl.MAX_VERTEX_ATTRIBS] = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this._parameters[gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\n    //-- enable/disable\n    this._parameters[gl.BLEND] = false;\n    gl.disable(gl.BLEND);\n\n    this._parameters[gl.CULL_FACE] = true;\n    gl.enable(gl.CULL_FACE);\n\n    this._parameters[gl.DEPTH_TEST] = true;\n    gl.enable(gl.DEPTH_TEST);\n\n    this._parameters[gl.DITHER] = false;\n    gl.disable(gl.DITHER);\n\n    this._parameters[gl.POLYGON_OFFSET_FILL] = false;\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n\n    this._parameters[gl.SAMPLE_ALPHA_TO_COVERAGE] = false;\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\n    this._parameters[gl.SAMPLE_COVERAGE] = false;\n    gl.disable(gl.SAMPLE_COVERAGE);\n\n    this._parameters[gl.SCISSOR_TEST] = false;\n    gl.disable(gl.SCISSOR_TEST);\n\n    this._parameters[gl.STENCIL_TEST] = false;\n    gl.disable(gl.STENCIL_TEST);\n\n    //-- colorMask\n    this._parameters[gl.COLOR_WRITEMASK] = [true, true, true, true];\n    gl.colorMask(true, true, true, true);\n\n    //-- depthMask\n    this._parameters[gl.DEPTH_WRITEMASK] = true;\n    gl.depthMask(true);\n\n    //-- blendFunc\n    this._parameters[gl.BLEND_SRC_RGB] = gl.ONE;\n    this._parameters[gl.BLEND_SRC_ALPHA] = gl.ONE;\n    this._parameters[gl.BLEND_DST_RGB] = gl.ZERO;\n    this._parameters[gl.BLEND_DST_ALPHA] = gl.ZERO;\n    gl.blendFunc(gl.ONE, gl.ZERO);\n\n    this._parameters[gl.BLEND_EQUATION_RGB] = gl.FUNC_ADD;\n    this._parameters[gl.BLEND_EQUATION_ALPHA] = gl.FUNC_ADD;\n\n    //-- cullFace\n    this._parameters[gl.CULL_FACE_MODE] = gl.BACK;\n    gl.cullFace(gl.BACK);\n\n    //-- frontFace\n    this._parameters[gl.FRONT_FACE] = gl.CCW;\n    gl.frontFace(gl.CCW);\n\n    //-- depthFunc\n    this._parameters[gl.DEPTH_FUNC] = gl.LESS;\n    gl.depthFunc(gl.LESS);\n\n    //-- depthRange\n    this._parameters[gl.DEPTH_RANGE] = [0, 1];\n    gl.depthRange(0, 1);\n\n    //-- polygonOffset\n    this._parameters[gl.POLYGON_OFFSET_FACTOR] = 0;\n    this._parameters[gl.POLYGON_OFFSET_UNITS] = 0;\n    gl.polygonOffset(0, 0);\n\n    //-- scissor\n    this._parameters[gl.SCISSOR_BOX] = [0, 0, gl.canvas.width, gl.canvas.height];\n\n    //-- stencilFunc\n    this._parameters[gl.STENCIL_FUNC] = gl.ALWAYS;\n    this._parameters[gl.STENCIL_VALUE_MASK] = 0xff;\n    this._parameters[gl.STENCIL_REF] = 0;\n    gl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\n    // -- stencilMask\n    this._parameters[gl.STENCIL_WRITEMASK] = 0xff;\n    gl.stencilMask(0xff);\n\n    //-- stencilOp\n    this._parameters[gl.STENCIL_FAIL] = gl.KEEP;\n    this._parameters[gl.STENCIL_PASS_DEPTH_FAIL] = gl.KEEP;\n    this._parameters[gl.STENCIL_PASS_DEPTH_PASS] = gl.KEEP;\n  }\n\n  /**\n   * 取得渲染状态参数：any gl.getParameter(pname);\n   * @param {GLenum} pname\n   */\n  getParameter(pname) {\n    return this._parameters[pname];\n  }\n\n  /**\n   * 新建一个State Block（渲染单个对象时的一组渲染状态），并放入状态栈\n   */\n  pushStateBlock(_name) {\n    const stateBlock = {\n      name: _name,\n      states: []\n    };\n    this._stateStack.push(stateBlock);\n  }\n\n  /**\n   * 取出栈顶的State Block，并用来恢复当前的渲染状态\n   */\n  popStateBlock() {\n    const stateBlock = this._stateStack.pop();\n\n    //-- 恢复渲染状态\n    for (const state of stateBlock.states) {\n      const stateFunc = state.func;\n      const stateArgs = state.args;\n      const parameters = state.parameters;\n      stateFunc.apply(this._gl, stateArgs);\n      for (const param in parameters) {\n        this._parameters[param] = parameters[param];\n      }\n    }\n  }\n\n  /**\n   * 取得当前状态栈的顶部对象\n   * @return {Object}\n   * @private\n   */\n  _getStateStackTop() {\n    const count = this._stateStack.length;\n    if (count > 0) {\n      return this._stateStack[count - 1];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * 将一个渲染状态放入栈顶的State Block\n   * @param {Function} func\n   * @param {Array} args\n   * @private\n   */\n  _pushState(_func, _args, _param) {\n    const stateBlock = this._getStateStackTop();\n    if (stateBlock) {\n      stateBlock.states.push({\n        func: _func,\n        args: _args,\n        parameters: _param\n      });\n    }\n  }\n\n  /**\n   * 设置渲染状态：void gl.enable(cap);\n   * @param {GLenum} cap\n   */\n  enable(cap) {\n    const currentState = this._parameters[cap];\n    if (currentState === true) return;\n\n    this._parameters[cap] = true;\n    this._gl.enable(cap);\n\n    const pushParam = {};\n    pushParam[cap] = false;\n    this._pushState(this._gl.disable, [cap], pushParam);\n  }\n\n  /**\n   * 设置渲染状态：void gl.disable(cap);\n   * @param {GLenum} cap\n   */\n  disable(cap) {\n    const currentState = this._parameters[cap];\n    if (currentState === false) return;\n\n    this._parameters[cap] = false;\n    this._gl.disable(cap);\n\n    const pushParam = {};\n    pushParam[cap] = true;\n    this._pushState(this._gl.enable, [cap], pushParam);\n  }\n\n  /**\n   * 设置渲染状态：void gl.blendFunc(sfactor, dfactor);\n   * @param {GLenum} sfactor\n   * @param {GLenum} dfactor\n   */\n  blendFunc(sfactor, dfactor) {\n    const gl = this._gl;\n\n    const param = this._parameters;\n    if (\n      param[gl.BLEND_SRC_RGB] === sfactor &&\n      param[gl.BLEND_SRC_ALPHA] === sfactor &&\n      param[gl.BLEND_DST_RGB] === dfactor &&\n      param[gl.BLEND_DST_ALPHA] === dfactor\n    )\n      return;\n\n    const pushArgs = [\n      param[gl.BLEND_SRC_RGB],\n      param[gl.BLEND_DST_RGB],\n      param[gl.BLEND_SRC_ALPHA],\n      param[gl.BLEND_DST_ALPHA]\n    ];\n    const pushParam = {};\n    pushParam[gl.BLEND_SRC_RGB] = param[gl.BLEND_SRC_RGB];\n    pushParam[gl.BLEND_DST_RGB] = param[gl.BLEND_DST_RGB];\n    pushParam[gl.BLEND_SRC_ALPHA] = param[gl.BLEND_SRC_ALPHA];\n    pushParam[gl.BLEND_DST_ALPHA] = param[gl.BLEND_DST_ALPHA];\n    this._pushState(gl.blendFuncSeparate, pushArgs, pushParam);\n\n    param[gl.BLEND_SRC_RGB] = sfactor;\n    param[gl.BLEND_SRC_ALPHA] = sfactor;\n    param[gl.BLEND_DST_RGB] = dfactor;\n    param[gl.BLEND_DST_ALPHA] = dfactor;\n    gl.blendFunc(sfactor, dfactor);\n  }\n\n  /**\n   * 设置渲染状态：void gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n   * @param {GLenum} srcRGB\n   * @param {GLenum} dstRGB\n   * @param {GLenum} srcAlpha\n   * @param {GLenum} dstAlpha\n   */\n  blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n    const gl = this._gl;\n\n    const param = this._parameters;\n    if (\n      param[gl.BLEND_SRC_RGB] === srcRGB &&\n      param[gl.BLEND_SRC_ALPHA] === srcAlpha &&\n      param[gl.BLEND_DST_RGB] === dstRGB &&\n      param[gl.BLEND_DST_ALPHA] === dstAlpha\n    )\n      return;\n\n    const pushArgs = [\n      param[gl.BLEND_SRC_RGB],\n      param[gl.BLEND_DST_RGB],\n      param[gl.BLEND_SRC_ALPHA],\n      param[gl.BLEND_DST_ALPHA]\n    ];\n    const pushParam = {};\n    pushParam[gl.BLEND_SRC_RGB] = param[gl.BLEND_SRC_RGB];\n    pushParam[gl.BLEND_DST_RGB] = param[gl.BLEND_DST_RGB];\n    pushParam[gl.BLEND_SRC_ALPHA] = param[gl.BLEND_SRC_ALPHA];\n    pushParam[gl.BLEND_DST_ALPHA] = param[gl.BLEND_DST_ALPHA];\n    this._pushState(gl.blendFuncSeparate, pushArgs, pushParam);\n\n    param[gl.BLEND_SRC_RGB] = srcRGB;\n    param[gl.BLEND_SRC_ALPHA] = srcAlpha;\n    param[gl.BLEND_DST_RGB] = dstRGB;\n    param[gl.BLEND_DST_ALPHA] = dstAlpha;\n    gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n  }\n\n  /**\n   * void gl.blendEquationSeparate(modeRGB, modeAlpha);\n   * @param {GLenum} modeRGB\n   * @param {GLenum} modeAlpha\n   */\n  blendEquationSeparate(modeRGB, modeAlpha) {\n    const gl = this._gl;\n    const param = this._parameters;\n\n    if (param[gl.BLEND_EQUATION_RGB] === modeRGB && param[gl.BLEND_EQUATION_ALPHA] === modeAlpha) return;\n\n    const pushArgs = [param[gl.BLEND_EQUATION_RGB], param[gl.BLEND_EQUATION_ALPHA]];\n    const pushParam = {};\n    pushParam[gl.BLEND_EQUATION_RGB] = param[gl.BLEND_EQUATION_RGB];\n    pushParam[gl.BLEND_EQUATION_ALPHA] = param[gl.BLEND_EQUATION_ALPHA];\n    this._pushState(gl.blendEquationSeparate, pushArgs, pushParam);\n\n    param[gl.BLEND_EQUATION_RGB] = modeRGB;\n    param[gl.BLEND_EQUATION_ALPHA] = modeAlpha;\n    gl.blendEquationSeparate(modeRGB, modeAlpha);\n  }\n\n  /**\n   * 控制颜色通道释放写入Frame Buffer\n   * @param {boolean} red 红色通道是否写入\n   * @param {boolean} green 绿色通道是否写入\n   * @param {boolean} blue 蓝色通道是否写入\n   * @param {boolean} alpha 透明通道是否写入\n   */\n  colorMask(red: boolean, green: boolean, blue: boolean, alpha: boolean) {\n    const gl = this._gl;\n    const pushParam = {};\n    pushParam[gl.COLOR_WRITEMASK] = this._parameters[gl.COLOR_WRITEMASK];\n    this._pushState(gl.colorMask, this._parameters[gl.COLOR_WRITEMASK], pushParam);\n\n    this._parameters[gl.COLOR_WRITEMASK] = [red, green, blue, alpha];\n    gl.colorMask(red, green, blue, alpha);\n  }\n\n  /**\n   * 是否写入深度缓冲\n   * @param {boolean} flag\n   */\n  depthMask(flag) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.DEPTH_WRITEMASK] === flag) return;\n\n    const pushParam = {};\n    pushParam[gl.DEPTH_WRITEMASK] = this._parameters[gl.DEPTH_WRITEMASK];\n    this._pushState(gl.depthMask, [this._parameters[gl.DEPTH_WRITEMASK]], pushParam);\n\n    this._parameters[gl.DEPTH_WRITEMASK] = flag;\n    gl.depthMask(flag);\n  }\n\n  /**\n   * 设置渲染状态：void gl.cullFace(mode);\n   * @param {GLenum} mode\n   */\n  cullFace(mode: GLenum) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.CULL_FACE_MODE] === mode) return;\n\n    const pushParam = {};\n    pushParam[gl.CULL_FACE_MODE] = this._parameters[gl.CULL_FACE_MODE];\n    this._pushState(gl.cullFace, [this._parameters[gl.CULL_FACE_MODE]], pushParam);\n\n    this._parameters[gl.CULL_FACE_MODE] = mode;\n    gl.cullFace(mode);\n  }\n\n  /**\n   * 设置渲染状态：void gl.frontFace(mode);\n   * @param {GLenum} mode\n   */\n  frontFace(mode: GLenum) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.FRONT_FACE] === mode) return;\n\n    const pushParam = {};\n    pushParam[gl.FRONT_FACE] = this._parameters[gl.FRONT_FACE];\n    this._pushState(gl.frontFace, [this._parameters[gl.FRONT_FACE]], pushParam);\n\n    this._parameters[gl.FRONT_FACE] = mode;\n    gl.frontFace(mode);\n  }\n\n  /**\n   * 设置渲染状态：void gl.depthFunc(func);\n   * @param {GLenum} func\n   */\n  depthFunc(func: GLenum) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.DEPTH_FUNC] === func) return;\n\n    const pushParam = {};\n    pushParam[gl.DEPTH_FUNC] = this._parameters[gl.DEPTH_FUNC];\n    this._pushState(gl.depthFunc, [this._parameters[gl.DEPTH_FUNC]], pushParam);\n\n    this._parameters[gl.DEPTH_FUNC] = func;\n    gl.depthFunc(func);\n  }\n\n  /**\n   * 设置渲染状态：void gl.depthRange(zNear, zFar);\n   * @param {GLclampf} zNear\n   * @param {GLclampf} zFar\n   */\n  depthRange(zNear, zFar) {\n    const gl = this._gl;\n    const currentValue = this._parameters[gl.DEPTH_RANGE];\n\n    if (currentValue[0] === zNear && currentValue[1] === zFar) return;\n\n    const pushParam = {};\n    pushParam[gl.DEPTH_RANGE] = currentValue;\n    this._pushState(gl.depthRange, [this._parameters[gl.DEPTH_RANGE]], pushParam);\n\n    this._parameters[gl.DEPTH_RANGE] = [zNear, zFar];\n    gl.depthRange(zNear, zFar);\n  }\n\n  /**\n   * void gl.polygonOffset(factor, units);\n   * @param {GLfloat} factor\n   * @param {GLfloat} units\n   */\n  polygonOffset(factor, units) {\n    const gl = this._gl;\n    if (this._parameters[gl.POLYGON_OFFSET_FACTOR] === factor && this._parameters[gl.POLYGON_OFFSET_UNITS] === units)\n      return;\n\n    const pushParam = {};\n    pushParam[gl.POLYGON_OFFSET_FACTOR] = this._parameters[gl.POLYGON_OFFSET_FACTOR];\n    pushParam[gl.POLYGON_OFFSET_UNITS] = this._parameters[gl.POLYGON_OFFSET_UNITS];\n    this._pushState(\n      gl.polygonOffset,\n      [this._parameters[gl.POLYGON_OFFSET_FACTOR], this._parameters[gl.POLYGON_OFFSET_UNITS]],\n      pushParam\n    );\n\n    this._parameters[gl.POLYGON_OFFSET_FACTOR] = factor;\n    this._parameters[gl.POLYGON_OFFSET_UNITS] = units;\n    gl.polygonOffset(factor, units);\n  }\n\n  /**\n   * 设置渲染状态：void gl.scissor(x, y, width, height);\n   * @param {GLint} x\n   * @param {GLint} y\n   * @param {GLsizei} width\n   * @param {GLsizei} height\n   */\n  scissor(x, y, width, height) {\n    const gl = this._gl;\n\n    const box = this._parameters[gl.SCISSOR_BOX];\n    if (box[0] === x && box[1] === y && box[2] === width && box[3] === height) return;\n\n    const pushParam = {};\n    pushParam[gl.SCISSOR_BOX] = box;\n    this._pushState(gl.scissor, box, pushParam);\n\n    this._parameters[gl.SCISSOR_BOX] = [x, y, width, height];\n    gl.scissor(x, y, width, height);\n  }\n\n  /**\n   * 设置渲染状态：void gl.stencilFunc(func, ref, mask);\n   * @param {GLenum} func\n   * @param {GLint} ref\n   * @param {GLint} mask\n   */\n  stencilFunc(func: GLenum, ref: GLint, mask: GLint) {\n    const gl = this._gl;\n\n    if (\n      this._parameters[gl.STENCIL_FUNC] === func &&\n      this._parameters[gl.STENCIL_REF] === ref &&\n      this._parameters[gl.STENCIL_VALUE_MASK] === mask\n    )\n      return;\n\n    const pushArgs = [\n      this._parameters[gl.STENCIL_FUNC],\n      this._parameters[gl.STENCIL_REF],\n      this._parameters[gl.STENCIL_VALUE_MASK]\n    ];\n    const pushParam = {};\n    pushParam[gl.STENCIL_FUNC] = pushArgs[0];\n    pushParam[gl.STENCIL_REF] = pushArgs[1];\n    pushParam[gl.STENCIL_VALUE_MASK] = pushArgs[2];\n\n    this._pushState(gl.stencilFunc, pushArgs, pushParam);\n\n    this._parameters[gl.STENCIL_FUNC] = func;\n    this._parameters[gl.STENCIL_REF] = ref;\n    this._parameters[gl.STENCIL_VALUE_MASK] = mask;\n    gl.stencilFunc(func, ref, mask);\n  }\n\n  /**\n   * 设置渲染状态：void gl.stencilOp(fail, zfail, zpass);\n   * @param {GLenum} fail\n   * @param {GLenum} zfail\n   * @param {GLenum} zpass\n   */\n  stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum) {\n    const gl = this._gl;\n\n    if (\n      this._parameters[gl.STENCIL_FAIL] === fail &&\n      this._parameters[gl.STENCIL_PASS_DEPTH_FAIL] === zfail &&\n      this._parameters[gl.STENCIL_PASS_DEPTH_PASS] === zpass\n    )\n      return;\n\n    const pushArgs = [\n      this._parameters[gl.STENCIL_FAIL],\n      this._parameters[gl.STENCIL_PASS_DEPTH_FAIL],\n      this._parameters[gl.STENCIL_PASS_DEPTH_PASS]\n    ];\n    const pushParam = {};\n    pushParam[gl.STENCIL_FAIL] = pushArgs[0];\n    pushParam[gl.STENCIL_PASS_DEPTH_FAIL] = pushArgs[1];\n    pushParam[gl.STENCIL_PASS_DEPTH_PASS] = pushArgs[2];\n\n    this._pushState(gl.stencilOp, pushArgs, pushParam);\n\n    this._parameters[gl.STENCIL_FAIL] = fail;\n    this._parameters[gl.STENCIL_BACK_PASS_DEPTH_FAIL] = zfail;\n    this._parameters[gl.STENCIL_PASS_DEPTH_PASS] = zpass;\n    gl.stencilOp(fail, zfail, zpass);\n  }\n\n  stencilMask(mask: GLuint) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.STENCIL_WRITEMASK] === mask) return;\n\n    const pushParam = {};\n    pushParam[gl.STENCIL_WRITEMASK] = this._parameters[gl.STENCIL_WRITEMASK];\n    this._pushState(gl.stencilMask, [this._parameters[gl.STENCIL_WRITEMASK]], pushParam);\n\n    this._parameters[gl.STENCIL_WRITEMASK] = mask;\n    gl.stencilMask(mask);\n  }\n}\n","import { GLAsset } from \"./GLAsset\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\nimport { RenderTarget } from \"@alipay/o3-core\";\n\n/**\n * GL 层的 RenderTarget 资源管理和渲染调用处理\n * @class\n * @private\n */\nexport class GLRenderTarget extends GLAsset {\n  private readonly renderTarget: RenderTarget;\n\n  constructor(rhi: WebGLRenderer, renderTarget: RenderTarget) {\n    super(rhi, renderTarget);\n\n    this.renderTarget = renderTarget;\n  }\n\n  /**\n   * 激活 RenderTarget 对象，后续的内容将会被渲染到当前激活 RenderTarget 对象上\n   * @private\n   */\n  public activeRenderTarget() {\n    const gl = this.rhi.gl;\n    const { width, height } = this.renderTarget;\n\n    this.renderTarget._activeRenderTarget();\n    gl.viewport(0.0, 0.0, width, height);\n  }\n\n  /**\n   * 设置渲染到立方体纹理的面\n   * @param {number} faceIndex - gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex\n   * */\n  public setRenderTargetFace(faceIndex: number) {\n    this.renderTarget._setRenderTargetFace(faceIndex);\n  }\n\n  /** blit FBO */\n  blitRenderTarget() {\n    if (this.renderTarget._MSAAFrameBuffer) {\n      this.renderTarget._blitRenderTarget();\n      return;\n    }\n  }\n\n  /**\n   * 释放 GL 资源\n   * @private\n   */\n  finalize() {}\n}\n","import { Logger } from \"@alipay/o3-core\";\nimport { Vector2, Vector3, Vector4 } from \"@alipay/o3-math\";\n\n/**\n * 管理HUD控件Batch绘制时，需要处理的几何体数据\n * @private\n */\nexport class GLSprite {\n  private gl: WebGLRenderingContext;\n  private _vbo: WebGLBuffer;\n  private _maxBatchCount: number;\n  private _vertBuffer;\n  private _vertCursor: number;\n  private _drawSpriteCount: number;\n  private _vertAttributes;\n  constructor(gl) {\n    this.gl = gl;\n\n    //-- vertex attributes\n    this._initVertexAttributes(gl);\n\n    //-- 创建VBO\n    this._vbo = gl.createBuffer();\n    this._maxBatchCount = 0;\n    this._vertBuffer = null; // 在setWidgetCount()中创建\n    this._vertCursor = 0; // 当前使用的顶点的index\n    this._drawSpriteCount = 0; // 当前这一帧画了多少个Widget\n  }\n\n  /**\n   * 设置需要绘制的控件的个数\n   * @param {NUMBER} count 控件的个数\n   */\n  setMaxBatchCount(count) {\n    // 每个控件需要2个三角形，即6个顶点来绘制\n    const requireSize = count * 6 * 9;\n    if (this._vertBuffer && this._vertBuffer.length >= requireSize) {\n      return;\n    }\n\n    this._maxBatchCount = count;\n    this._vertBuffer = new Float32Array(requireSize);\n  }\n\n  /**\n   * 开始绘制控件，清空内部状态\n   */\n  beginDraw(count) {\n    this._vertCursor = 0;\n    this._drawSpriteCount = 0;\n\n    // 动态扩张\n    if (count > this._maxBatchCount) {\n      this.setMaxBatchCount(count);\n    }\n  }\n\n  /**\n   * 将一个2D Sprite绘制所需的矩形，Batch到内部的Vertex Buffer之中\n   * @param {HUDWidget} screenRect 需要绘制的控件\n   */\n  drawSprite(positionQuad, uvRect, tintColor) {\n    this._drawSpriteCount++;\n    if (this._drawSpriteCount > this._maxBatchCount) {\n      Logger.warn(\"Sprite: sprite count overflow\");\n      return;\n    }\n\n    const color = tintColor;\n\n    const u = uvRect.u;\n    const v = uvRect.v;\n    const p = uvRect.u + uvRect.width;\n    const q = uvRect.v + uvRect.height;\n\n    this._pushVertex(positionQuad.leftTop, new Vector2(u, v), color);\n    this._pushVertex(positionQuad.leftBottom, new Vector2(u, q), color);\n    this._pushVertex(positionQuad.rightBottom, new Vector2(p, q), color);\n\n    this._pushVertex(positionQuad.rightBottom, new Vector2(p, q), color);\n    this._pushVertex(positionQuad.rightTop, new Vector2(p, v), color);\n    this._pushVertex(positionQuad.leftTop, new Vector2(u, v), color);\n  }\n\n  /**\n   * 执行真正的绘制\n   */\n  endDraw() {\n    const vertCount = this._vertCursor / 9;\n    if (vertCount <= 0) return;\n\n    var gl = this.gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertBuffer, gl.DYNAMIC_DRAW);\n\n    for (let i = 0, len = this._vertAttributes.length; i < len; i++) {\n      const attrib = this._vertAttributes[i];\n      gl.vertexAttribPointer(\n        attrib.lastShaderLoc,\n        attrib.size,\n        attrib.type,\n        attrib.normalized,\n        attrib.stride,\n        attrib.offset\n      );\n      gl.enableVertexAttribArray(attrib.lastShaderLoc);\n    } // end of for\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertCount);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    // disable attributes\n    for (let i = 0, len = this._vertAttributes.length; i < len; i++) {\n      gl.disableVertexAttribArray(this._vertAttributes[i].lastShaderLoc);\n    }\n  }\n\n  /**\n   * 初始化内部的顶点属性，包括pos, uv, color\n   * @param {WebGLRenderingContext} gl GL Context对象\n   */\n  _initVertexAttributes(gl) {\n    const vertexStride = (3 + 2 + 4) * 4;\n    const posAtt: any = {};\n    posAtt.name = \"a_pos\";\n    posAtt.size = 3;\n    posAtt.offset = 0;\n    posAtt.lastShaderLoc = 0;\n\n    const uvAtt: any = {};\n    uvAtt.name = \"a_uv\";\n    uvAtt.size = 2;\n    uvAtt.offset = 3 * 4;\n    uvAtt.lastShaderLoc = 1;\n\n    const colorAtt: any = {};\n    colorAtt.name = \"a_color\";\n    colorAtt.size = 4;\n    colorAtt.offset = 5 * 4;\n    colorAtt.lastShaderLoc = 2;\n\n    this._vertAttributes = [posAtt, uvAtt, colorAtt];\n    for (const att of this._vertAttributes) {\n      att.type = gl.FLOAT;\n      att.normalized = false;\n      att.stride = vertexStride;\n    } // end of for\n  }\n\n  /**\n   * 向当前的顶点缓冲中添加一个顶点\n   * @param {Vector3} pos 位置坐标\n   * @param {Vector2} uv 贴图坐标\n   * @param {Vector4} color 颜色RGBA\n   */\n  _pushVertex(pos: Vector3, uv: Vector2, color: Vector4) {\n    const vb = this._vertBuffer;\n    const id = this._vertCursor;\n\n    //-- pos\n    vb[id] = pos.x;\n    vb[id + 1] = pos.y;\n    vb[id + 2] = pos.z;\n\n    //-- uv\n    vb[id + 3] = uv.x;\n    vb[id + 4] = uv.y;\n\n    //-- color\n    vb[id + 5] = color.x;\n    vb[id + 6] = color.y;\n    vb[id + 7] = color.z;\n    vb[id + 8] = color.w;\n\n    //--\n    this._vertCursor += 9;\n  }\n\n  finalize() {\n    if (this._vbo) {\n      this.gl.deleteBuffer(this._vbo);\n      this._vbo = null;\n    }\n  }\n}\n","\"use strict\";\n\nimport { DataType, UniformSemantic, RenderState, BlendFunc } from \"@alipay/o3-core\";\n\nconst SpriteVertShader = `\nprecision highp float;\n\nuniform mat4 matProjection;\nuniform mat4 matView;\n\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvoid main()\n{\n  gl_Position = matProjection * matView * vec4(a_pos,1.0);\n  v_uv = a_uv;\n  v_color = a_color;\n}\n`;\n\nconst SpriteFragmentShader = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D s_diffuse;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvoid main()\n{\n  // 只使用贴图的Alpha做Mask，这样Tint Color依然可以控制控件Fade Out\n  vec4 baseColor = texture2D(s_diffuse, v_uv);\n  gl_FragColor = baseColor * v_color;\n}\n`;\n\nexport const SpriteTechnique = {\n  name: \"spriteTech3D\",\n  vertexShader: SpriteVertShader,\n  fragmentShader: SpriteFragmentShader,\n  attribLocSet: {\n    a_pos: 0,\n    a_uv: 1,\n    a_color: 2\n  },\n  attributes: {\n    a_pos: {\n      name: \"a_pos\",\n      semantic: \"POSITION\",\n      type: DataType.FLOAT_VEC3\n    },\n    a_uv: {\n      name: \"a_uv\",\n      semantic: \"TEXCOORD_0\",\n      type: DataType.FLOAT_VEC2\n    },\n    a_color: {\n      name: \"a_color\",\n      semantic: \"COLOR\",\n      type: DataType.FLOAT_VEC3\n    }\n  },\n  uniforms: {\n    matProjection: {\n      name: \"matProjection\",\n      semantic: UniformSemantic.PROJECTION,\n      type: DataType.FLOAT_MAT4\n    },\n    matView: {\n      name: \"matView\",\n      semantic: UniformSemantic.VIEW,\n      type: DataType.FLOAT_MAT4\n    },\n    s_diffuse: {\n      name: \"s_diffuse\",\n      type: DataType.SAMPLER_2D\n    }\n  },\n  states: {\n    disable: [RenderState.CULL_FACE],\n    enable: [RenderState.BLEND],\n    functions: {\n      blendFunc: [BlendFunc.SRC_ALPHA, BlendFunc.ONE_MINUS_SRC_ALPHA],\n      depthMask: [false] //[gl.FALSE]\n    }\n  }\n};\n\nexport function createSpriteMaterial() {\n  const values = {};\n  return {\n    values,\n\n    setValue: (key, val) => {\n      values[key] = val;\n    },\n    getValue: (key) => {\n      return values[key];\n    }\n  };\n}\n","import { Logger } from \"@alipay/o3-core\";\nimport { RenderTechnique } from \"@alipay/o3-core\";\n\ninterface UniformCache {\n  [key: string]: WebGLUniformLocation | null;\n}\n\ninterface AttributeCache {\n  [key: string]: GLint;\n}\n\nlet programList: Array<GLShaderProgram> = [];\n\nfunction addLineNum(str) {\n  const lines = str.split(\"\\n\");\n  const limitLength = (lines.length + 1).toString().length + 6;\n  let prefix;\n  return lines\n    .map((line, index) => {\n      prefix = `0:${index + 1}`;\n      if (prefix.length >= limitLength) return prefix.substring(0, limitLength) + line;\n\n      for (let i = 0; i < limitLength - prefix.length; i++) prefix += \" \";\n\n      return prefix + line;\n    })\n    .join(\"\\n\");\n}\n\n/**\n * GL的Shader+Program的包装，用于对象的绘制. 对应glTF中的一个program对象\n * @class\n * @private\n */\nexport class GLShaderProgram {\n  /**\n   * 从缓存中读取program,如果没有则新建\n   * @param {RenderTechnique} tech\n   * @param {WebGLRenderingContext} gl\n   * @return {GLShaderProgram}\n   * */\n  static requireProgram(tech: RenderTechnique, gl: WebGLRenderingContext): GLShaderProgram {\n    let program: GLShaderProgram = null;\n\n    programList.some((p) => {\n      if (\n        p._gl === gl &&\n        p._vertexShaderSource === tech.vertexShader &&\n        p._fragmentShaderSource === tech.fragmentShader\n      ) {\n        program = p;\n        return true;\n      }\n    });\n\n    if (!program) {\n      program = new GLShaderProgram(gl);\n      const sucess = program.createFromSource(tech.vertexShader, tech.fragmentShader, tech.attribLocSet);\n      if (!sucess) return null;\n      programList.push(program);\n    }\n\n    return program;\n  }\n\n  /**\n   * 从缓存中释放program\n   * @param {GLShaderProgram} program\n   * */\n  static releaseProgram(program: GLShaderProgram) {\n    let index = programList.indexOf(program);\n    if (index !== -1) {\n      programList.splice(index, 1);\n    }\n  }\n\n  private _gl: WebGLRenderingContext;\n  private _vertexShader: WebGLShader;\n  private _fragmentShader: WebGLShader;\n  private _vertexShaderSource: string;\n  private _fragmentShaderSource: string;\n  private _program: WebGLProgram;\n  private _attributeCache: AttributeCache;\n  private _uniformCache: UniformCache;\n\n  constructor(gl: WebGLRenderingContext) {\n    this._gl = gl;\n\n    // {WebGLShader}\n    this._vertexShader = null;\n\n    // {WebGLShader}\n    this._fragmentShader = null;\n\n    // shader source\n    this._vertexShaderSource = null;\n    this._fragmentShaderSource = null;\n\n    // {WebGLProgram}\n    this._program = null;\n\n    // location cache\n    this._attributeCache = {};\n    this._uniformCache = {};\n  }\n\n  /**\n   * WebGLProgram对象\n   * @member {WebGLProgram}\n   * @readonly\n   */\n  get program() {\n    return this._program;\n  }\n\n  /**\n   * 使用源代码编译、链接Shader Program\n   * @param {string} vertexSource 顶点 Shader 代码\n   * @param {string} fragmentSource 片元 Shader 代码\n   */\n  createFromSource(vertexSource, fragmentSource, attribLocSet) {\n    const gl = this._gl;\n\n    // 编译两个Shader\n    const vertexShader = this._compileShader(gl.VERTEX_SHADER, vertexSource);\n    if (!vertexShader) {\n      return false;\n    }\n\n    const fragmentShader = this._compileShader(gl.FRAGMENT_SHADER, fragmentSource);\n    if (!fragmentShader) {\n      return false;\n    }\n\n    // 链接Program\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    if (attribLocSet) {\n      for (const attribName in attribLocSet) {\n        gl.bindAttribLocation(program, attribLocSet[attribName], attribName);\n      }\n    }\n    gl.linkProgram(program);\n    gl.validateProgram(program);\n\n    if (gl.isContextLost()) {\n      Logger.error(\"Contex lost while linking program.\");\n      gl.deleteShader(vertexShader);\n      gl.deleteShader(fragmentShader);\n      return null;\n    }\n\n    // debug开启才进行消耗性能的能力检测\n    // if (Logger.isEnabled) {\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS) && !gl.isContextLost()) {\n      Logger.error(\"Could not link WebGL program. \\n\" + gl.getProgramInfoLog(program));\n      gl.deleteProgram(program);\n      return false;\n      // }\n    }\n\n    // 更新内部变量\n    this._vertexShader = vertexShader;\n    this._fragmentShader = fragmentShader;\n    this._vertexShaderSource = vertexSource;\n    this._fragmentShaderSource = fragmentSource;\n    this._program = program;\n    return true;\n  }\n\n  /**\n   * 编译Shader\n   * @param {GLenum} shaderType\n   * @param {string} shaderSource\n   * @private\n   */\n  private _compileShader(shaderType, shaderSource) {\n    const gl = this._gl;\n    const shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n\n    if (gl.isContextLost()) {\n      Logger.error(\"Contex lost while compiling shader.\");\n      gl.deleteShader(shader);\n      return null;\n    }\n\n    // debug开启才进行消耗性能的能力检测\n    if (Logger.isEnabled) {\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS) && !gl.isContextLost()) {\n        Logger.error(`Could not compile WebGL shader.\\n${addLineNum(shaderSource)}\\n${gl.getShaderInfoLog(shader)}`);\n        // Logger.error( gl.getShaderInfoLog( shader ) );\n\n        gl.deleteShader(shader);\n        return null;\n      }\n    }\n\n    return shader;\n  }\n\n  /**\n   * getAttribLocation读取速度比较慢，增加缓存机制\n   * */\n  getAttribLocation(glProgram: WebGLProgram, name: string): GLint {\n    if (this._attributeCache.hasOwnProperty(name)) {\n      return this._attributeCache[name];\n    } else {\n      return (this._attributeCache[name] = this._gl.getAttribLocation(glProgram, name));\n    }\n  }\n\n  /**\n   * getUniformLocation读取速度比较慢，增加缓存机制\n   * */\n  getUniformLocation(glProgram: WebGLProgram, name: string): WebGLUniformLocation | null {\n    if (this._uniformCache.hasOwnProperty(name)) {\n      return this._uniformCache[name];\n    } else {\n      return (this._uniformCache[name] = this._gl.getUniformLocation(glProgram, name));\n    }\n  }\n\n  /**\n   * 释放GL资源对象\n   */\n  finalize() {\n    const gl = this._gl;\n    if (this._vertexShader) {\n      gl.deleteShader(this._vertexShader);\n    }\n\n    if (this._fragmentShader) {\n      gl.deleteShader(this._fragmentShader);\n    }\n\n    if (this._program) {\n      gl.deleteProgram(this._program);\n    }\n\n    this._vertexShader = null;\n    this._fragmentShader = null;\n    this._vertexShaderSource = null;\n    this._fragmentShaderSource = null;\n    this._program = null;\n    this._attributeCache = {};\n    this._uniformCache = {};\n    GLShaderProgram.releaseProgram(this);\n  }\n}\n","import { DataType, Logger, Material, RenderTechnique } from \"@alipay/o3-core\";\nimport { GLAsset } from \"./GLAsset\";\nimport { GLRenderStates } from \"./GLRenderStates\";\nimport { GLShaderProgram } from \"./GLShaderProgram\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * GL 层的 Technique 资源管理和渲染调用处理\n * @private\n */\nexport class GLTechnique extends GLAsset {\n  readonly valid: boolean;\n\n  private _tech: RenderTechnique;\n  private _activeTextureCount: number;\n  private _program: GLShaderProgram;\n  private _attributes;\n  private _uniforms;\n  private _tempSamplerArray: Int32Array;\n\n  constructor(rhi: WebGLRenderer, tech: RenderTechnique) {\n    super(rhi, tech);\n    this._tech = tech;\n    this._activeTextureCount = 0;\n\n    const gl: WebGLRenderingContext = rhi.gl;\n\n    //-- 编译shader 或者从缓存中捞program\n    this._program = GLShaderProgram.requireProgram(tech, gl);\n    if (this._program) {\n      this.valid = true;\n      const glProgram = this._program.program;\n\n      // 记录Attribute的shader location\n      this._attributes = {};\n      const attributes = tech.attributes;\n      for (const name in attributes) {\n        this._attributes[name] = {\n          name,\n          semantic: attributes[name].semantic,\n          location: this._program.getAttribLocation(glProgram, name)\n        };\n      }\n\n      // 记录Unifrom的shader location\n      this._uniforms = {};\n      const uniforms = tech.uniforms;\n      for (const name in uniforms) {\n        const loc = this._program.getUniformLocation(glProgram, name);\n        if (loc !== null) {\n          this._uniforms[name] = {\n            name,\n            location: loc\n          };\n        }\n      } // end of for\n    } else {\n      this.valid = false;\n    }\n  }\n\n  /**\n   * 释放 GL 资源\n   */\n  finalize(forceDispose?: boolean) {\n    if (this._program && forceDispose) {\n      this._program.finalize();\n      this._program = null;\n    }\n  }\n\n  /**\n   * Shader Program 对象\n   * @member {GLShaderProgram}\n   */\n  get program(): GLShaderProgram {\n    return this._program;\n  }\n\n  /**\n   * 顶点属性数组\n   */\n  get attributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Unifrom 参数集合\n   */\n  get uniforms() {\n    return this._uniforms;\n  }\n\n  /**\n   * 开始渲染时调用，绑定内部 GL Program，并设定 Unifrom\n   * @param {Material} mtl\n   */\n  begin(mtl: Material) {\n    const gl = this.rhi.gl;\n    const glProgram = this._program.program;\n\n    //-- 重置内部状态变量\n    this._activeTextureCount = 0;\n\n    //-- bind program\n    gl.useProgram(glProgram);\n\n    //-- upload mtl uniforms\n    const uniforms = this._uniforms;\n    const assetUniforms = this._tech.uniforms;\n    for (const name in assetUniforms) {\n      if (uniforms.hasOwnProperty(name)) {\n        const value = mtl.getValue(name);\n        value != null && this._uploadUniformValue(assetUniforms[name], uniforms[name].location, value);\n      }\n    }\n\n    //-- change render states\n    const stateManager = this.rhi.renderStates;\n    if (this._tech.states) {\n      stateManager.pushStateBlock(this._tech.name);\n      this._applyStates(stateManager);\n    }\n  }\n\n  /**\n   * 结束渲染，回复状态\n   */\n  end() {\n    // 恢复渲染状态\n    if (this._tech.states) {\n      const stateManager = this.rhi.renderStates;\n      stateManager.popStateBlock();\n    }\n  }\n\n  /**\n   * 将状态设置到GL/RenderStateManager\n   * @param {GLRenderStates} stateManager\n   */\n  _applyStates(stateManager: GLRenderStates) {\n    const states = this._tech.states;\n    //-- enable\n    const enable = states.enable;\n    if (enable) {\n      for (let i = 0, len = enable.length; i < len; i++) {\n        stateManager.enable(enable[i]);\n      }\n    }\n\n    const disable = states.disable;\n    if (disable) {\n      for (let i = 0, len = disable.length; i < len; i++) {\n        stateManager.disable(disable[i]);\n      }\n    }\n\n    //-- functions\n    const functions = states.functions;\n    if (functions) {\n      for (const name in functions) {\n        const args = Array.isArray(functions[name]) ? functions[name] : [functions[name]];\n        const func = stateManager[name];\n        func.apply(stateManager, args);\n      }\n    }\n  }\n\n  /**\n   * 将自己的value设置到shader的uniform值之上\n   * @param uniform\n   * @param location\n   * @param value\n   * @private\n   */\n  private _uploadUniformValue(uniform, location, value) {\n    const gl = this.rhi.gl;\n\n    // 设置shader uniform值\n    switch (uniform.type) {\n      case DataType.FLOAT:\n        if (value.length) gl.uniform1fv(location, value);\n        else gl.uniform1f(location, value);\n        break;\n      case DataType.FLOAT_ARRAY:\n        gl.uniform1fv(location, value);\n        break;\n      case DataType.INT:\n        if (value.length) gl.uniform1iv(location, value);\n        else gl.uniform1i(location, value);\n        break;\n      case DataType.INT_ARRAY:\n        gl.uniform1iv(location, value);\n        break;\n      case DataType.FLOAT_VEC2:\n        gl.uniform2f(location, value.x, value.y);\n        break;\n      case DataType.FLOAT_VEC2_ARRAY:\n        gl.uniform2fv(location, value);\n        break;\n      case DataType.FLOAT_VEC3:\n        gl.uniform3f(location, value.x, value.y, value.z);\n        break;\n      case DataType.FLOAT_VEC3_ARRAY:\n        gl.uniform3fv(location, value);\n        break;\n      case DataType.FLOAT_VEC4:\n        gl.uniform4f(location, value.x, value.y, value.z, value.w);\n        break;\n      case DataType.FLOAT_VEC4_ARRAY:\n        gl.uniform4fv(location, value);\n        break;\n      case DataType.INT_VEC2:\n        gl.uniform2i(location, value.x, value.y);\n        break;\n      case DataType.INT_VEC2_ARRAY:\n        gl.uniform2iv(location, value);\n        break;\n      case DataType.INT_VEC3:\n        gl.uniform3i(location, value.x, value.y, value.z);\n        break;\n      case DataType.INT_VEC3_ARRAY:\n        gl.uniform3iv(location, value);\n        break;\n      case DataType.INT_VEC4:\n        gl.uniform4i(location, value.x, value.y, value.z, value.w);\n        break;\n      case DataType.INT_VEC4_ARRAY:\n        gl.uniform4iv(location, value);\n        break;\n      case DataType.FLOAT_MAT2:\n        gl.uniformMatrix2fv(location, false, value.elements);\n        break;\n      case DataType.FLOAT_MAT2_ARRAY:\n        gl.uniformMatrix2fv(location, false, value);\n        break;\n      case DataType.FLOAT_MAT3:\n        gl.uniformMatrix3fv(location, false, value.elements);\n        break;\n      case DataType.FLOAT_MAT3_ARRAY:\n        gl.uniformMatrix3fv(location, false, value);\n        break;\n      case DataType.FLOAT_MAT4:\n        gl.uniformMatrix4fv(location, false, value.elements);\n        break;\n      case DataType.FLOAT_MAT4_ARRAY:\n        gl.uniformMatrix4fv(location, false, value);\n        break;\n      case DataType.SAMPLER_2D: {\n        this._uploadTexture(value, location);\n        break;\n      }\n      case DataType.SAMPLER_2D_ARRAY: {\n        this._uploadTextures(value, location);\n        break;\n      }\n      case DataType.SAMPLER_CUBE: {\n        this._uploadTexture(value, location);\n        break;\n      }\n      case DataType.SAMPLER_CUBE_ARRAY: {\n        this._uploadTextures(value, location);\n        break;\n      }\n      default:\n        Logger.warn(\"UNKNOWN uniform type: \" + uniform.type);\n        break;\n    } // end of switch\n  }\n\n  /**\n   * 将一个内存中的 Texture2D 对象绑定到 GL\n   * @param {Texture} texture\n   */\n  _uploadTexture(texture, location) {\n    if (texture) {\n      const gl = this.rhi.gl;\n      const index = this._activeTextureCount++;\n      gl.activeTexture(gl.TEXTURE0 + index);\n      gl.bindTexture(texture._target, texture._glTexture);\n      gl.uniform1i(location, index);\n    } // end of if\n  }\n\n  /**\n   * 将一堆内存中的 Texture2D 对象绑定到 GL\n   */\n  _uploadTextures(textures, location) {\n    if (!this._tempSamplerArray || this._tempSamplerArray.length !== textures.length) {\n      this._tempSamplerArray = new Int32Array(textures.length);\n    }\n\n    const gl = this.rhi.gl;\n    for (let i = 0, length = textures.length; i < length; i++) {\n      const texture = textures[i];\n      if (texture) {\n        const index = this._activeTextureCount++;\n        gl.activeTexture(gl.TEXTURE0 + index);\n        gl.bindTexture(texture._target, texture._glTexture);\n        this._tempSamplerArray[i] = index;\n      } else {\n        this._tempSamplerArray[i] = -1;\n      }\n    }\n    gl.uniform1iv(location, this._tempSamplerArray);\n  }\n}\n","import { Logger } from \"@alipay/o3-core\";\nimport { Camera } from \"@alipay/o3-core\";\nimport { GLSprite } from \"./GLSprite\";\nimport { createSpriteMaterial, SpriteTechnique } from \"./GLSpriteMaterial\";\nimport { GLTechnique } from \"./GLTechnique\";\n\n/**\n * GL 层的 Technique 资源管理和渲染调用处理\n * @private\n */\nexport class GLSpriteBatcher {\n  private _gl: WebGLRenderingContext;\n  private _batchedQueue;\n  private _targetTexture;\n  private _glSprite: GLSprite;\n  private _glTech;\n  private _material;\n  private _camera;\n\n  constructor(rhi) {\n    this._gl = rhi.gl;\n\n    this._batchedQueue = [];\n    this._targetTexture = null;\n\n    this._glSprite = new GLSprite(rhi.gl);\n\n    //-- 初始化GLTechnique\n    this._glTech = new GLTechnique(rhi, SpriteTechnique as any);\n    this._material = createSpriteMaterial();\n    this._camera = null;\n  }\n\n  /**\n   * 将缓存的Sprite也绘制出来\n   */\n  flush() {\n    if (this._batchedQueue.length === 0) {\n      return;\n    }\n\n    if (!this._targetTexture) {\n      Logger.error(\"No texture!\");\n      return;\n    }\n\n    this._material.setValue(\"s_diffuse\", this._targetTexture);\n\n    this._material.setValue(\"matView\", this._camera.viewMatrix);\n    this._material.setValue(\"matProjection\", this._camera.projectionMatrix);\n\n    this._glTech.begin(this._material);\n    // 绘制\n    this._glSprite.beginDraw(this._batchedQueue.length);\n    for (let i = 0, len = this._batchedQueue.length; i < len; i++) {\n      const positionQuad = this._batchedQueue[i].positionQuad;\n      const uvRect = this._batchedQueue[i].uvRect;\n      const tintColor = this._batchedQueue[i].tintColor;\n      this._glSprite.drawSprite(positionQuad, uvRect, tintColor);\n    }\n    this._glSprite.endDraw();\n\n    this._glTech.end();\n\n    this._batchedQueue = [];\n    this._targetTexture = null;\n    this._camera = null;\n  }\n\n  /**\n   * 检查一个Sprite绘制的时候，能否和上一个Sprite合并绘制\n   * @param {Texture}   texture    纹理信息\n   * @param {String}    renderMode    绘制方式， '2D' 或者 '3D'\n   * @param {Camera}   camera        相机信息\n   */\n  canBatch(texture, renderMode, camera: Camera) {\n    if (this._targetTexture === null) {\n      return true;\n    }\n    return texture === this._targetTexture && camera === this._camera;\n  }\n\n  /**\n   * 把一个 Sprite 绘制需要的信息传进来，完成Batch逻辑\n   * @param {Object} positionQuad  Sprite四个顶点的位置\n   * @param {Object} uvRect        Sprite在texture上的纹理坐标\n   * @param {vec4}   tintColor     颜色\n   * @param {Texture}   texture    纹理信息\n   * @param {String}    renderMode    绘制方式， '2D' 或者 '3D'\n   * @param {Camera}   camera        相机信息\n   */\n  drawSprite(positionQuad, uvRect, tintColor, texture, renderMode, camera: Camera) {\n    if (!this.canBatch(texture, renderMode, camera)) {\n      this.flush();\n    }\n\n    this._targetTexture = texture;\n    this._camera = camera;\n    this._batchedQueue.push({ positionQuad, uvRect, tintColor });\n  }\n\n  /**\n   * 释放资源\n   */\n  finalize() {\n    this._glSprite.finalize();\n    this._glTech.finalize();\n  }\n}\n","import { Logger, Primitive } from \"@alipay/o3-core\";\nimport { GLPrimitive } from \"./GLPrimitive\";\nimport { GLTechnique } from \"./GLTechnique\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * 基于 VAO 的 GLPrimitive\n * */\nexport class GLVAOPrimitive extends GLPrimitive {\n  private vao: Map<number, WebGLVertexArrayObject>;\n\n  constructor(rhi: WebGLRenderer, primitive: Primitive) {\n    super(rhi, primitive);\n    this.vao = new Map();\n  }\n\n  /** 注册 VAO */\n  private registerVAO(tech: GLTechnique) {\n    const gl = this.rhi.gl;\n    const vao = gl.createVertexArray();\n\n    /** register VAO */\n    gl.bindVertexArray(vao);\n\n    const { indexBufferBinding } = this._primitive;\n    if (indexBufferBinding) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBufferBinding.buffer._nativeBuffer);\n    }\n    this.bindBufferAndAttrib(tech);\n\n    /** unbind */\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    this.disableAttrib();\n\n    this.vao.set(tech.cacheID, vao);\n  }\n\n  /**\n   * 使用 VAO 执行绘制操作\n   * @param {GLTechnique} tech\n   */\n  draw(tech: GLTechnique) {\n    const gl = this.rhi.gl;\n    const primitive = this._primitive;\n\n    /** render */\n    if (!this.vao.has(tech.cacheID)) {\n      this.registerVAO(tech);\n    }\n    const vao = this.vao.get(tech.cacheID);\n    gl.bindVertexArray(vao);\n\n    // draw\n    const { primitiveTopology, indexBufferBinding, drawOffset, drawCount, instanceCount, _glIndexType } = primitive;\n    if (!instanceCount) {\n      if (indexBufferBinding) {\n        gl.drawElements(primitiveTopology, drawCount, _glIndexType, drawOffset);\n      } else {\n        gl.drawArrays(primitiveTopology, drawOffset, drawCount);\n      }\n    } else {\n      if (this.canUseInstancedArrays) {\n        if (indexBufferBinding) {\n          gl.drawElementsInstanced(primitiveTopology, drawCount, _glIndexType, drawOffset, instanceCount);\n        } else {\n          gl.drawArraysInstanced(primitiveTopology, drawOffset, drawCount, instanceCount);\n        }\n      } else {\n        Logger.error(\"ANGLE_instanced_arrays extension is not supported\");\n      }\n    }\n\n    gl.bindVertexArray(null);\n  }\n\n  /**\n   * 释放 GL 资源\n   */\n  finalize() {\n    super.finalize();\n    const gl = this.rhi.gl;\n    // 释放 vao\n    this.vao.forEach((vao) => {\n      gl.deleteVertexArray(vao);\n    });\n    this.vao = null;\n  }\n}\n","import { ClearMode, GLCapabilityType, Logger } from \"@alipay/o3-core\";\nimport { Camera, Canvas, HardwareRenderer } from \"@alipay/o3-core\";\nimport { RenderTarget } from \"@alipay/o3-core\";\nimport { GLAssetsCache } from \"./GLAssetsCache\";\nimport { GLCapability } from \"./GLCapability\";\nimport { GLExtensions } from \"./GLExtensions\";\nimport { GLPrimitive } from \"./GLPrimitive\";\nimport { GLRenderStates } from \"./GLRenderStates\";\nimport { GLRenderTarget } from \"./GLRenderTarget\";\nimport { GLSpriteBatcher } from \"./GLSpriteBatcher\";\nimport { GLTechnique } from \"./GLTechnique\";\nimport { GLVAOPrimitive } from \"./GLVAOPrimitive\";\nimport { WebGLExtension } from \"./type\";\nimport { WebCanvas } from \"./WebCanvas\";\nimport { Vector4 } from \"@alipay/o3-math\";\n\n/**\n * WebGL模式。默认 Auto\n */\nexport enum WebGLMode {\n  /** 自动，如果设备支持优先选择WebGL2.0，不支持 WebGL2.0 会回滚至WebGL1.0 */\n  Auto = 0,\n  /** 使用 WebGL2.0 */\n  WebGL2 = 1,\n  /** 使用 WebGL1.0 */\n  WebGL1 = 2\n}\n\n/**\n * WebGLRenderer的参数选项。\n */\nexport interface WebGLRendererOptions extends WebGLContextAttributes {\n  /** WebGL API 模式。*/\n  webGLMode?: WebGLMode;\n}\n\n/**\n * WebGL渲染器实现，包含了WebGL1.0/和WebGL2.0。\n */\nexport class WebGLRenderer implements HardwareRenderer {\n  private _options: WebGLRendererOptions;\n  private _gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n  private _renderStates;\n  private _assetsCache: GLAssetsCache;\n  private _extensions;\n  private _frameCount: number;\n  private _spriteBatcher;\n  private _capability: GLCapability;\n  private _isWebGL2: boolean;\n\n  /** 当前 RHI 是否为 WebGL 2.0 */\n  get isWebGL2() {\n    return this._isWebGL2;\n  }\n\n  constructor(options: WebGLRendererOptions = {}) {\n    this._options = options;\n  }\n\n  init(canvas: Canvas) {\n    const option = this._options;\n    const webCanvas = (canvas as WebCanvas)._webCanvas;\n    const webGLMode = option.webGLMode || WebGLMode.Auto;\n    let gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n\n    if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL2) {\n      gl = webCanvas.getContext(\"webgl2\", option);\n      if (!gl && webCanvas instanceof HTMLCanvasElement) {\n        gl = <WebGL2RenderingContext>webCanvas.getContext(\"experimental-webgl2\", option);\n      }\n      this._isWebGL2 = true;\n    }\n\n    if (!gl) {\n      if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL1) {\n        gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"webgl\", option);\n        if (!gl && webCanvas instanceof HTMLCanvasElement) {\n          gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"experimental-webgl\", option);\n        }\n        this._isWebGL2 = false;\n      }\n    }\n\n    if (!gl) {\n      throw new Error(\"Get GL Context FAILED.\");\n    }\n\n    this._gl = gl;\n    this._renderStates = new GLRenderStates(gl);\n    this._assetsCache = new GLAssetsCache(this, option);\n    this._extensions = new GLExtensions(this);\n    this._capability = new GLCapability(this);\n\n    this._frameCount = 0;\n    this._options = null;\n  }\n\n  /**\n   * GL Context 对象\n   * @member {WebGLRenderingContext}\n   * @readonly\n   */\n  get gl() {\n    return this._gl;\n  }\n\n  /**\n   * GL 资源对象缓冲池\n   */\n  get assetsCache(): GLAssetsCache {\n    return this._assetsCache;\n  }\n\n  /**\n   * GL 状态管理器\n   */\n  get renderStates(): GLRenderStates {\n    return this._renderStates;\n  }\n\n  /**\n   * GL 能力管理\n   * */\n  get capability(): GLCapability {\n    return this._capability;\n  }\n\n  /**\n   * 当前帧的计数\n   */\n  get frameCount() {\n    return this._frameCount;\n  }\n\n  /**\n   * 请求扩展\n   * @param {String} ext 扩展名\n   * @returns {Object|null} 请求结果，返回插件对象或null\n   */\n  requireExtension(ext) {\n    return this._extensions.requireExtension(ext);\n  }\n\n  /**\n   * 查询能否使用某些 GL 能力\n   * */\n  canIUse(capabilityType: GLCapabilityType) {\n    return this.capability.canIUse(capabilityType);\n  }\n\n  /**\n   * 查询能否使用某种压缩纹理格式\n   * */\n  canIUseCompressedTextureInternalFormat(type: number) {\n    return this.capability.canIUseCompressedTextureInternalFormat(type);\n  }\n\n  /** 是否能使用更多骨骼关节 */\n  public get canIUseMoreJoints() {\n    return this.capability.canIUseMoreJoints;\n  }\n\n  /**\n   * 设置视口区域\n   * @param {number} x 用来设定视口的左下角水平坐标\n   * @param {number} y 用来设定视口的左下角垂直坐标\n   * @param {number} width 用来设定视口的宽度\n   * @param {number} height 用来设定视口的高度\n   */\n  viewport(x, y, width, height) {\n    // 开启裁剪\n    // gl.enable(gl.SCISSOR_TEST);\n    // gl.scissor(x, transformY, width, height);\n    const gl = this._gl;\n    gl.viewport(x, gl.drawingBufferHeight - y - height, width, height);\n  }\n\n  colorMask(r, g, b, a) {\n    this._gl.colorMask(r, g, b, a);\n  }\n\n  /**\n   * 在一帧的渲染开始时，处理内部状态\n   */\n  beginFrame() {\n    this._frameCount++;\n  }\n\n  /**\n   * 清空渲染缓冲\n   * @param {ClearMode} clearMode\n   * @param {*} clearParam\n   */\n  clearRenderTarget(clearMode, clearParam: Vector4) {\n    const gl = this._gl;\n\n    switch (clearMode) {\n      case ClearMode.SOLID_COLOR: // solid color\n        gl.clearColor(clearParam.x, clearParam.y, clearParam.z, clearParam.w);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        break;\n      case ClearMode.DEPTH_ONLY: // depth only\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        break;\n      case ClearMode.COLOR_ONLY:\n        gl.clearColor(clearParam.x, clearParam.y, clearParam.z, clearParam.w);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        break;\n      case ClearMode.STENCIL_ONLY:\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        break;\n      case ClearMode.ALL_CLEAR:\n        gl.clearColor(clearParam.x, clearParam.y, clearParam.z, clearParam.w);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        break;\n\n      case ClearMode.DONT_CLEAR: // dont clear\n        break;\n    }\n  }\n\n  /**\n   * 使用指定的材质绘制一个 Primitive\n   * @param {Primitive} primitive\n   * @param {Material} mtl\n   */\n  drawPrimitive(primitive, mtl) {\n    // todo: VAO 不支持 morph 动画\n    const glPrimitive = this._assetsCache.requireObject(\n      primitive,\n      this.canIUse(GLCapabilityType.vertexArrayObject) && !primitive.targets.length ? GLVAOPrimitive : GLPrimitive\n    );\n    const glTech = this._assetsCache.requireObject(mtl.technique, GLTechnique);\n\n    if (!glTech.valid) return;\n\n    if (glPrimitive && glTech) {\n      glTech.begin(mtl);\n      glPrimitive.draw(glTech);\n      glTech.end();\n    } else {\n      Logger.error(\"draw primitive failed.\");\n    }\n  }\n\n  /**\n   * 把一个 Sprite 绘制需要的信息传进来\n   * @param {Object} positionQuad  Sprite四个顶点的位置\n   * @param {Object} uvRect        Sprite在texture上的纹理坐标\n   * @param {vec4}   tintColor     颜色\n   * @param {Texture}   texture    纹理信息\n   * @param {String}    renderMode    绘制方式， '2D' 或者 '3D'\n   * @param {Camera}   camera        相机信息\n   */\n  drawSprite(positionQuad, uvRect, tintColor, texture, renderMode, camera: Camera) {\n    // _spriteBatcher只有在需要的时候才会创建\n    if (!this._spriteBatcher) {\n      this._spriteBatcher = new GLSpriteBatcher(this);\n    }\n\n    this._spriteBatcher.drawSprite(positionQuad, uvRect, tintColor, texture, renderMode, camera);\n  }\n\n  /**\n   * 给 SpriteRenderPass 在最后调用，确保所有 Sprite 绘制\n   */\n  flushSprite() {\n    if (this._spriteBatcher) {\n      this._spriteBatcher.flush();\n    }\n  }\n\n  /**\n   * 激活指定的RenderTarget\n   * @param {RenderTarget} renderTarget  需要被激活的RenderTarget对象，如果未设置，则渲染到屏幕帧\n   */\n  activeRenderTarget(renderTarget: RenderTarget, camera: Camera) {\n    if (renderTarget) {\n      const glRenderTarget = this._assetsCache.requireObject(renderTarget, GLRenderTarget);\n      glRenderTarget.activeRenderTarget();\n    } else {\n      const gl = this._gl;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      const viewport = camera.viewport;\n      const width = gl.drawingBufferWidth;\n      const height = gl.drawingBufferHeight;\n      this.viewport(viewport.x * width, viewport.y * height, viewport.z * width, viewport.w * height);\n    }\n  }\n\n  /** blit FBO */\n  blitRenderTarget(renderTarget: RenderTarget) {\n    if (renderTarget) {\n      const glRenderTarget = this._assetsCache.requireObject(renderTarget, GLRenderTarget);\n      glRenderTarget.blitRenderTarget();\n    }\n  }\n\n  /**\n   * 设置渲染到立方体纹理的面\n   * @param {RenderTarget} renderTarget  需要设置的 RenderTarget 对象\n   * @param {number} faceIndex - gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex\n   * */\n  setRenderTargetFace(renderTarget: RenderTarget, faceIndex: number) {\n    if (renderTarget) {\n      const glRenderTarget = this._assetsCache.requireObject(renderTarget, GLRenderTarget);\n      glRenderTarget.setRenderTargetFace(faceIndex);\n    }\n  }\n\n  /**\n   * 在一帧结束时，处理内部状态，释放 texture 缓存\n   */\n  endFrame() {\n    const CHECK_FREQ = 8;\n    if (this._frameCount % CHECK_FREQ === 0) {\n      this._assetsCache.compact();\n    }\n  }\n\n  /**\n   * 释放资源\n   */\n  destroy() {\n    this._assetsCache.finalize();\n  }\n}\n","import { Canvas } from \"@alipay/o3-core\";\nimport { Vector2 } from \"@alipay/o3-math\";\n/**\n * Web端使用的画布,可以支持HTMLCanvasElement和OffscreenCanvas。\n */\nexport class WebCanvas implements Canvas {\n  _webCanvas: HTMLCanvasElement | OffscreenCanvas;\n\n  private _width: number;\n  private _height: number;\n  private _scale: Vector2 = new Vector2();\n\n  /**\n   * @inheritdoc\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  set width(value: number) {\n    if (this._width !== value) {\n      this._webCanvas.width = value;\n      this._width = value;\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  set height(value: number) {\n    if (this._height !== value) {\n      this._webCanvas.height = value;\n      this._height = value;\n    }\n  }\n\n  /**\n   * 画布的缩放比例,值为显示宽高/渲染分辨率宽高。\n   * @remarks 修改后需要重新赋值,保证修改生效。\n   */\n  get scale(): Vector2 {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      this._scale.setValue(\n        (webCanvas.clientWidth * devicePixelRatio) / webCanvas.width,\n        (webCanvas.clientHeight * devicePixelRatio) / webCanvas.height\n      );\n    }\n    return this._scale;\n  }\n\n  set scale(value: Vector2) {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      webCanvas.style.transformOrigin = `left top`;\n      webCanvas.style.transform = `scale(${value.x}, ${value.y})`;\n    }\n  }\n\n  /**\n   * 根据 canvas 的 clientWidth 和 clientHeight 重置画布渲染尺寸。\n   * @param pixelRatio 像素比例，若不传初次设置为设备像素比。\n   */\n  resizeByClientSize(pixelRatio: number = window.devicePixelRatio): void {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      const width = webCanvas.clientWidth;\n      const height = webCanvas.clientHeight;\n      this.width = width * pixelRatio;\n      this.height = height * pixelRatio;\n    }\n  }\n\n  /**\n   * 创建Web画布。\n   * @param webCanvas 画布。\n   */\n  constructor(webCanvas: HTMLCanvasElement | OffscreenCanvas) {\n    const width = webCanvas.width;\n    const height = webCanvas.height;\n    this._webCanvas = webCanvas;\n    this._width = width;\n    this._height = height;\n  }\n\n  /**\n   * 设置缩放\n   * @param x - 沿 X 轴的缩放。\n   * @param y - 沿 Y 轴的缩放。\n   */\n  setScale(x: number, y: number): void {\n    this._scale.setValue(x, y);\n    this.scale = this._scale;\n  }\n}\n","import { Engine } from \"@alipay/o3-core\";\nimport { WebCanvas } from \"./WebCanvas\";\nimport { WebGLRenderer, WebGLRendererOptions } from \"./WebGLRenderer\";\n\n/**\n * WebGL 平台引擎，渲染器包含 WebGL1.0 和 WebGL2.0。\n */\nexport class WebGLEngine extends Engine {\n  /**\n   * 创建适用于 WebGL 平台的引擎。\n   * @param canvas - Web 画布\n   * @param webGLRendererOptions - WebGL渲染器参数\n   */\n  constructor(canvas: string | HTMLCanvasElement | OffscreenCanvas, webGLRendererOptions?: WebGLRendererOptions) {\n    const webCanvas = new WebCanvas(\n      <HTMLCanvasElement | OffscreenCanvas>(typeof canvas === \"string\" ? document.getElementById(canvas) : canvas)\n    );\n    const hardwareRenderer = new WebGLRenderer(webGLRendererOptions);\n\n    super(webCanvas, hardwareRenderer);\n  }\n\n  /**\n   * Web 画布。\n   */\n  get canvas(): WebCanvas {\n    return this._canvas as WebCanvas;\n  }\n}\n"],"names":["GLAssetsCache","rhi","props","_rhi","_objectSet","_checkList","_nextID","_enableCollect","enableCollect","undefined","asset","ctor","cachedObject","cacheID","needRecreate","objectSet","type","InternalAssetType","Cache","push","activeFrame","frameCount","glAsset","currentFrame","checkList","i","length","splice","finalize","name","obj","GLCapability","_maxDrawBuffers","canIUse","GLCapabilityType","drawBuffers","gl","getParameter","MAX_DRAW_BUFFERS","_maxAnisoLevel","ext","requireExtension","textureFilterAnisotropic","MAX_TEXTURE_MAX_ANISOTROPY_EXT","_maxAntiAliasing","canMSAA","multipleSample","MAX_SAMPLES","capabilityList","Map","init","compatibleAllInterface","capabilityType","get","internalType","RGBA_ASTC_4X4_KHR","GLCompressedTextureInternalFormat","RGBA_ASTC_12X12_KHR","SRGB8_ALPHA8_ASTC_4X4_KHR","SRGB8_ALPHA8_ASTC_12X12_KHR","RGB_ETC1_WEBGL","R11_EAC","SRGB8_ALPHA8_ETC2_EAC","RGB_PVRTC_4BPPV1_IMG","RGBA_PVRTC_2BPPV1_IMG","RGB_S3TC_DXT1_EXT","RGBA_S3TC_DXT5_EXT","astc","etc1","etc","pvrtc","s3tc","cap","isWebGL2","bind","standardDerivatives","shaderTextureLod","elementIndexUint","depthTexture","vertexArrayObject","instancedArrays","astc_webkit","etc_webkit","etc1_webkit","pvrtc_webkit","s3tc_webkit","textureFloat","textureHalfFloat","textureFloatLinear","textureHalfFloatLinear","WEBGL_colorBufferFloat","colorBufferFloat","colorBufferHalfFloat","set","flatItem","glKey","extensionKey","extensionVal","Function","compatibleInterface","UNSIGNED_INT_24_8","createVertexArray","deleteVertexArray","isVertexArray","bindVertexArray","drawArraysInstanced","drawElementsInstanced","vertexAttribDivisor","items","MAX_DRAW_BUFFERS_WEBGL","HAFL_FLOAT","RGBA16F","RGBA32F","TEXTURE_MAX_ANISOTROPY_EXT","renderStates","MAX_VERTEX_TEXTURE_IMAGE_UNITS","GLExtensions","_requireResult","getExtension","GLAsset","GLPrimitive","primitive","_primitive","attribLocArray","canUseInstancedArrays","tech","vertexBufferBindings","techAttributes","attributes","vbo","lastBoundVbo","loc","location","semantic","element","vertexBufferIndex","buffer","stride","_nativeBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","_glElementInfo","size","vertexAttribPointer","normalized","offset","instanceDivisor","Logger","warn","bindBufferAndAttrib","primitiveTopology","indexBufferBinding","drawOffset","drawCount","instanceCount","_glIndexType","ELEMENT_ARRAY_BUFFER","drawElements","drawArrays","error","disableAttrib","l","disableVertexAttribArray","GLRenderStates","_gl","_stateStack","_parameters","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_ATTRIBS","BLEND","disable","CULL_FACE","enable","DEPTH_TEST","DITHER","POLYGON_OFFSET_FILL","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","SCISSOR_TEST","STENCIL_TEST","COLOR_WRITEMASK","colorMask","DEPTH_WRITEMASK","depthMask","BLEND_SRC_RGB","ONE","BLEND_SRC_ALPHA","BLEND_DST_RGB","ZERO","BLEND_DST_ALPHA","blendFunc","BLEND_EQUATION_RGB","FUNC_ADD","BLEND_EQUATION_ALPHA","CULL_FACE_MODE","BACK","cullFace","FRONT_FACE","CCW","frontFace","DEPTH_FUNC","LESS","depthFunc","DEPTH_RANGE","depthRange","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","polygonOffset","SCISSOR_BOX","canvas","width","height","STENCIL_FUNC","ALWAYS","STENCIL_VALUE_MASK","STENCIL_REF","stencilFunc","STENCIL_WRITEMASK","stencilMask","STENCIL_FAIL","KEEP","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","pname","_name","stateBlock","states","pop","state","stateFunc","func","stateArgs","args","parameters","apply","param","count","_func","_args","_param","_getStateStackTop","currentState","pushParam","_pushState","sfactor","dfactor","pushArgs","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","modeRGB","modeAlpha","blendEquationSeparate","red","green","blue","alpha","flag","mode","zNear","zFar","currentValue","factor","units","x","y","box","scissor","ref","mask","fail","zfail","zpass","stencilOp","STENCIL_BACK_PASS_DEPTH_FAIL","GLRenderTarget","renderTarget","_activeRenderTarget","viewport","faceIndex","_setRenderTargetFace","_MSAAFrameBuffer","_blitRenderTarget","GLSprite","_vbo","_maxBatchCount","_vertBuffer","_vertCursor","_drawSpriteCount","_vertAttributes","_initVertexAttributes","createBuffer","requireSize","Float32Array","setMaxBatchCount","positionQuad","uvRect","tintColor","color","u","v","p","q","_pushVertex","leftTop","Vector2","leftBottom","rightBottom","rightTop","vertCount","bufferData","DYNAMIC_DRAW","len","attrib","lastShaderLoc","TRIANGLES","vertexStride","posAtt","uvAtt","colorAtt","att","FLOAT","pos","uv","vb","id","z","w","deleteBuffer","SpriteVertShader","SpriteFragmentShader","SpriteTechnique","vertexShader","fragmentShader","attribLocSet","a_pos","a_uv","a_color","DataType","FLOAT_VEC3","FLOAT_VEC2","uniforms","matProjection","UniformSemantic","PROJECTION","FLOAT_MAT4","matView","VIEW","s_diffuse","SAMPLER_2D","RenderState","functions","BlendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","createSpriteMaterial","values","setValue","key","val","getValue","programList","addLineNum","str","lines","split","limitLength","toString","prefix","map","line","index","substring","join","GLShaderProgram","program","some","_vertexShaderSource","_fragmentShaderSource","sucess","createFromSource","indexOf","_vertexShader","_fragmentShader","_program","_attributeCache","_uniformCache","vertexSource","fragmentSource","_compileShader","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","attribName","bindAttribLocation","linkProgram","validateProgram","isContextLost","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","shaderType","shaderSource","shader","createShader","compileShader","isEnabled","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","glProgram","hasOwnProperty","getAttribLocation","getUniformLocation","releaseProgram","GLTechnique","valid","_tech","_activeTextureCount","_attributes","_uniforms","_tempSamplerArray","requireProgram","forceDispose","mtl","useProgram","assetUniforms","value","_uploadUniformValue","stateManager","pushStateBlock","_applyStates","popStateBlock","Array","isArray","uniform","uniform1fv","uniform1f","FLOAT_ARRAY","INT","uniform1iv","uniform1i","INT_ARRAY","uniform2f","FLOAT_VEC2_ARRAY","uniform2fv","uniform3f","FLOAT_VEC3_ARRAY","uniform3fv","FLOAT_VEC4","uniform4f","FLOAT_VEC4_ARRAY","uniform4fv","INT_VEC2","uniform2i","INT_VEC2_ARRAY","uniform2iv","INT_VEC3","uniform3i","INT_VEC3_ARRAY","uniform3iv","INT_VEC4","uniform4i","INT_VEC4_ARRAY","uniform4iv","FLOAT_MAT2","uniformMatrix2fv","elements","FLOAT_MAT2_ARRAY","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT3_ARRAY","uniformMatrix4fv","FLOAT_MAT4_ARRAY","_uploadTexture","SAMPLER_2D_ARRAY","_uploadTextures","SAMPLER_CUBE","SAMPLER_CUBE_ARRAY","texture","activeTexture","TEXTURE0","bindTexture","_target","_glTexture","textures","Int32Array","GLSpriteBatcher","_batchedQueue","_targetTexture","_glSprite","_glTech","_material","_camera","viewMatrix","projectionMatrix","begin","beginDraw","drawSprite","endDraw","end","renderMode","camera","canBatch","flush","GLVAOPrimitive","vao","has","registerVAO","forEach","WebGLMode","WebGLRenderer","_isWebGL2","options","_options","_renderStates","_assetsCache","_extensions","_frameCount","_spriteBatcher","_capability","option","webCanvas","_webCanvas","webGLMode","Auto","WebGL2","getContext","HTMLCanvasElement","WebGL1","Error","capability","canIUseCompressedTextureInternalFormat","drawingBufferHeight","r","g","b","a","clearMode","clearParam","ClearMode","SOLID_COLOR","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_ONLY","COLOR_ONLY","STENCIL_ONLY","STENCIL_BUFFER_BIT","ALL_CLEAR","DONT_CLEAR","glPrimitive","requireObject","targets","glTech","technique","draw","glRenderTarget","activeRenderTarget","bindFramebuffer","FRAMEBUFFER","drawingBufferWidth","blitRenderTarget","setRenderTargetFace","CHECK_FREQ","compact","canIUseMoreJoints","WebCanvas","pixelRatio","window","devicePixelRatio","clientWidth","clientHeight","_width","_height","_scale","style","transformOrigin","transform","scale","WebGLEngine","webGLRendererOptions","document","getElementById","hardwareRenderer","_canvas","Engine"],"mappings":"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"}