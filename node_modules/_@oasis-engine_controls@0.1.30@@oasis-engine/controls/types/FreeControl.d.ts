import { Entity, Script, Vector3 } from "oasis-engine";
/**
 * 相机的的漫游控制器，可以上下左右位移，转转视角。
 */
export declare class FreeControl extends Script {
    _forward: Vector3;
    _right: Vector3;
    camera: Entity;
    mainElement: any;
    domElement: any;
    /** 每秒运动距离，单位为MVP转换前的单位
     * @member {number}
     * */
    movementSpeed: number;
    /** 一个canvas的高宽度旋转Math.PI* this.rotateSpeed
     * @member {number}
     * */
    rotateSpeed: number;
    /** 模拟一个地面用来jump，替代碰撞体
     * @member {boolean}
     * */
    floorMock: boolean;
    /** 模拟地面高度
     * @member {number}
     * */
    floorY: number;
    /**
     * the heightY jump to
     * @member {number}
     * */
    jumpY: number;
    /**
     * the amount of the jumping time, jumpUpDuration+jumpDownDuration
     * unit:ms
     * @member {number}
     * */
    jumpDuration: number;
    /** only rotate when press=true
     * @member {boolean}
     * */
    press: boolean;
    keysForward: Array<string | number>;
    keysBackward: Array<string | number>;
    keysLeft: Array<string | number>;
    keysRight: Array<string | number>;
    keysJump: Array<string | number>;
    /**
     * radian of spherical.theta
     * @member {number}
     * */
    private _theta;
    /**
     * radian of spherical.phi
     * @member {number}
     * */
    private _phi;
    private _moveForward;
    private _moveBackward;
    private _moveLeft;
    private _moveRight;
    private _moveJump;
    private _v3Cache;
    private _spherical;
    private _rotateOri;
    private _events;
    /**
     * 漫游控制器构造函数
     * @param {Entity} entity 挂载节点
     */
    constructor(entity: Entity);
    /**
     * 浏览器右键事件
     * @private
     * */
    onContextMenu(event: any): void;
    /**
     * 键盘按下事件
     * @private
     * */
    onKeyDown(event: any): void;
    /**
     * 键盘抬起事件
     * @private
     * */
    onKeyUp(event: any): void;
    /**
     * 手势按下事件
     * @private
     * */
    onMouseDown(event: any): void;
    /**
     * 手势抬起事件
     * @private
     * */
    onMouseUp(event: any): void;
    /**
     * 手势滑动事件
     * @private
     * */
    onMouseMove(event: any): void;
    /**
     * 分别绕y轴，x轴旋转的角度
     * unit:deg
     * @param {number} alpha - 绕y轴旋转的deg
     * @param {number} beta - 绕x轴旋转的deg
     * */
    rotate(alpha?: number, beta?: number): void;
    /**
     * 跳跃，根据jumpY确定高度，jumpDuration确定时间，floorY确定地面高度
     * */
    jump(): void;
    /**
     * transform vec3 on axis by distance
     * */
    translateOnAxis(axis: Readonly<Vector3>, distance: number, v3?: Readonly<Vector3>): void;
    private tempVec3;
    /**
     * @override
     * translate camera per tick
     * @param  delta - tick gap
     * */
    onUpdate(delta: number): void;
    /**注册浏览器事件*/
    initEvents(): void;
    /**
     * dispose all events
     * */
    destroy(): void;
    /**
     * must updateSpherical after quaternion has been changed
     * @example
     * Entity#lookAt([0,1,0],[0,1,0]);
     * AFreeControls#updateSpherical();
     * */
    updateSpherical(): void;
}
