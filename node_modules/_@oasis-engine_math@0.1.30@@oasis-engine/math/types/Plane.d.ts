import { IClone } from "@oasis-engine/design";
import { Vector3 } from "./Vector3";
/**
 * 平面类。
 */
export declare class Plane implements IClone {
    /**
     * 修改平面的法线向量，使之成单位长度。
     * @param p - 平面
     * @param out - 归一化的结果
     */
    static normalize(p: Plane, out: Plane): void;
    /**
     * 通过三个点计算一个平面。
     * @param point0 - 第一个点
     * @param point1 - 第二个点
     * @param point2 - 第三个点
     * @param out - 平面
     * @returns 计算平面是否成功
     */
    static fromPoints(point0: Vector3, point1: Vector3, point2: Vector3, out: Plane): void;
    /** 平面的法线向量。*/
    readonly normal: Vector3;
    /** 平面沿法线到原点的距离。*/
    distance: number;
    /**
     * 创建平面。
     * @param normal - 平面的法线向量
     * @param distance - 平面沿法线到原点的距离
     */
    constructor(normal?: Vector3, distance?: number);
    /**
     * 修改平面的法线向量，使之成单位长度。
     * @returns 当前平面
     */
    normalize(): Plane;
    /**
     * 克隆并返回一个新的平面对象。
     * @returns 新的平面对象
     */
    clone(): Plane;
    /**
     * 将当前平面值拷贝给 out 平面。
     * @param out - 目标平面
     * @returns out 平面对象
     */
    cloneTo(out: Plane): Plane;
}
