{"version":3,"file":"miniprogram.js","sources":["../src/base/Event.ts","../src/base/EngineObject.ts","../src/base/EventDispatcher.ts","../src/base/Logger.ts","../src/base/Constant.ts","../src/asset/AssetPromise.ts","../src/asset/ResourceManager.ts","../src/FeatureManager.ts","../src/ComponentsDependencies.ts","../src/DisorderedArray.ts","../src/Component.ts","../src/UpdateFlag.ts","../src/Scene.ts","../src/SceneManager.ts","../src/ComponentsManager.ts","../src/EngineFeature.ts","../src/asset/AssetObject.ts","../src/SceneVisitor.ts","../src/SceneFeature.ts","../src/Script.ts","../src/asset/Loader.ts","../src/asset/AssetType.ts","../src/asset/ReferenceObject.ts","../src/lighting/LightFeature.ts","../src/bounding-info/util.ts","../src/mesh/Skin.ts","../src/texture/enums/RenderBufferColorFormat.ts","../src/texture/enums/RenderBufferDepthFormat.ts","../src/texture/enums/TextureCubeFace.ts","../src/texture/enums/TextureFilterMode.ts","../src/texture/enums/TextureFormat.ts","../src/texture/enums/TextureWrapMode.ts","../src/material/type.ts","../src/texture/Texture.ts","../src/texture/Texture2D.ts","../src/graphic/enums/BufferUsage.ts","../src/graphic/enums/VertexElementFormat.ts","../src/graphic/enums/IndexFormat.ts","../src/graphic/BufferUtil.ts","../src/graphic/enums/PrimitiveTopology.ts","../src/graphic/IndexBufferBinding.ts","../src/primitive/Primitive.ts","../src/material/ComplexMaterial.ts","../src/shaderlib/pbr/index.ts","../src/shaderlib/ShaderLib.ts","../src/shaderlib/ShaderFactory.ts","../src/graphic/enums/SetDataOptions.ts","../src/graphic/IndexBuffer.ts","../src/graphic/VertexBuffer.ts","../src/graphic/VertexBufferBinding.ts","../src/graphic/VertexElement.ts","../src/material/RenderTechnique.ts","../src/texture/TextureCubeMap.ts","../src/texture/RenderDepthTexture.ts","../src/texture/RenderTarget.ts","../src/texture/RenderColorTexture.ts","../src/animation/AnimationConst.ts","../src/animation/AnimationClip.ts","../src/animation/AnimationLayer.ts","../src/mobile-material/ConstantMaterial.ts","../src/mobile-material/TextureMaterial.ts","../src/mobile-material/TransparentMaterial.ts","../src/mobile-material/ShaderMaterial.ts","../src/graphic/DrawGroup.ts","../src/geometry/BufferGeometry.ts","../src/geometry-shape/Cuboid.ts","../src/geometry-shape/Sphere.ts","../src/geometry-shape/Plane.ts","../src/geometry-shape/CircleGeometry.ts","../src/geometry-shape/ScreenQuadGeometry.ts","../src/geometry-shape/TorusGeometry.ts","../src/geometry-shape/Model.ts","../src/skybox/SkyBox.ts","../src/particle/particle-editor.ts","../src/trail/TrailMaterial.ts","../src/rayCast/RaycastHit.ts","../src/collider/ColliderFeature.ts","../src/collider/Collider.ts","../src/collider/index.ts","../src/fog/EXP2Fog.ts","../src/fog/FogFeature.ts","../src/fog/LinearFog.ts","../src/fog/index.ts","../src/env-probe/Probe.ts","../src/env-probe/PlaneProbe.ts","../src/shadow/Extension.ts","../src/shadow/ShadowMapMaterial.ts","../src/shadow/ShadowMapPass.ts","../src/shadow/ShadowMaterial.ts","../src/shadow/ShadowPass.ts","../src/shadow/ShadowFeature.ts","../src/shadow/index.ts","../src/index.ts"],"sourcesContent":["import { EventDispatcher } from \"./EventDispatcher\";\n\nexport type Listener = ((e: Event) => any) & { once?: boolean };\n\n/** 事件对象* @class */\nexport class Event {\n  get propagationStopped(): boolean {\n    return this._propagationStopped;\n  }\n\n  get target(): EventDispatcher {\n    return this._target;\n  }\n\n  set target(t) {\n    this._target = t;\n  }\n\n  get timeStamp(): number {\n    return this._timeStamp;\n  }\n\n  get currentTarget(): EventDispatcher {\n    return this._currentTarget;\n  }\n\n  set currentTarget(t) {\n    this._currentTarget = t;\n  }\n\n  get bubbles(): boolean {\n    return this._bubbles;\n  }\n\n  get type(): string | number {\n    return this._type;\n  }\n\n  public data: any;\n\n  private _timeStamp: number;\n\n  private _target: EventDispatcher;\n\n  private _currentTarget: any;\n\n  private _bubbles: boolean;\n\n  private _propagationStopped: boolean;\n\n  private _type: string | number;\n\n  constructor(type: string | number, target: EventDispatcher = null, data: any = {}, bubbles: boolean = true) {\n    this._timeStamp = new Date().getTime();\n    this._target = target;\n    this.data = data;\n    this._currentTarget = null;\n    this._bubbles = bubbles;\n    this._propagationStopped = false;\n    this._type = type;\n  }\n\n  public stopPropagation(): void {\n    this._propagationStopped = true;\n  }\n}\n","/**\n * 引擎对象。\n */\nexport abstract class EngineObject {\n  private static _instanceIdCounter = 0;\n\n  readonly instanceId: number = ++EngineObject._instanceIdCounter;\n}\n","import { Listener, Event } from \"./Event\";\nimport { EngineObject } from \"./EngineObject\";\n\n/**\n * 事件派发管理，可作为基类继承\n * @class\n */\nexport class EventDispatcher extends EngineObject {\n  private _listeners: { [k: string]: Listener[] };\n\n  constructor() {\n    super();\n    this._listeners = {};\n  }\n\n  /**\n   * 添加对指定事件的监听\n   * @param {string} type\n   * @param {function} listener\n   */\n  public addEventListener(type: string, listener: Listener): EventDispatcher {\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n\n    return this;\n  }\n\n  /**\n   * 指定事件发生时，只回调一次\n   * @param {string} type\n   * @param {function} listener\n   */\n  public once(type: string, listener: Listener): EventDispatcher {\n    listener.once = true;\n    this.addEventListener(type, listener);\n\n    return this;\n  }\n\n  /**\n   * 移除对指定事件的监听\n   * @param {string | number} type\n   * @param {function} listener\n   */\n  public removeEventListener(type: string | number, listener: Listener): EventDispatcher {\n    const listeners = this._listeners;\n\n    if (arguments.length === 0) {\n      this._listeners = {};\n      return this;\n    }\n\n    if (arguments.length === 1) {\n      listeners[type] = [];\n      return this;\n    }\n\n    if (arguments.length === 2) {\n      if (listeners[type]) {\n        const index = listeners[type].indexOf(listener);\n        listeners[type].splice(index, 1);\n      }\n      return this;\n    }\n\n    return this;\n  }\n\n  /**\n   * 移除所有事件的监听\n   * @param {string} type\n   * @param {function} listener\n   */\n  public removeAllEventListeners(): void {\n    this._listeners = {};\n  }\n\n  public hasEvent(type: string | number, listener?: Listener): boolean {\n    const listeners = this._listeners;\n\n    if (arguments.length === 1 && listeners[type] && listeners[type].length !== 0) {\n      return true;\n    }\n\n    if (listeners[type] && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * 触发事件\n   * @param {Event} event\n   */\n  public trigger(event: Event): EventDispatcher {\n    const listeners = this._listeners;\n    const listenersArray = listeners[event.type];\n    event.target = this;\n    if (listenersArray) {\n      // copy listeners into copied array\n      const copiedListeners = listenersArray.slice();\n\n      // then loop copied array instead of original listeners\n      for (let i = 0, l = copiedListeners.length; i !== l; ++i) {\n        const listener: Listener = copiedListeners[i];\n        listener.call(this, event);\n\n        if (listener.once) {\n          // remove this listener once called\n          this.removeEventListener(event.type, listener);\n        }\n      }\n    }\n\n    if (event.bubbles) {\n      const parent = (this as any).parent;\n      if (parent && !event.propagationStopped) {\n        parent.trigger(event);\n      }\n    }\n\n    return this;\n  }\n}\n\n(EventDispatcher.prototype as any).on = EventDispatcher.prototype.addEventListener;\n(EventDispatcher.prototype as any).off = EventDispatcher.prototype.removeEventListener;\n","/**\n * console log的简单封装，默认为关闭状态，需要调用Logger.enable()来开启\n * @class\n * @private\n */\n/* tslint:disable */\nconst noop = (message?: any, ...optionalParams: any[]) => {};\nconst debug = console.log.bind(console);\nconst info = console.info.bind(console);\nconst warn = console.warn.bind(console);\nconst error = console.error.bind(console);\n\nexport const Logger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop,\n  isEnabled: false,\n\n  /** 开启Log */\n  enable() {\n    this.debug = debug;\n    this.info = info;\n    this.warn = warn;\n    this.error = error;\n    this.isEnabled = true;\n  },\n\n  /** 关闭Log */\n  disable() {\n    this.debug = noop;\n    this.info = noop;\n    this.warn = noop;\n    this.error = noop;\n    this.isEnabled = false;\n  }\n};\n","/**\n * 资源的类型，主要用来处理资源对象关联的GL对象的回收\n */\nexport enum InternalAssetType {\n  /** 属于当前场景的，场景切换时，GL资源会被自动释放 */\n  Scene = 1,\n  /** Cache自动处理，在一段时间内没有用到，则GL资源会被释放 */\n  Cache = 2\n}\n\n/**\n * Camera 的清空模式枚举\n * @readonly\n */\nexport enum ClearMode {\n  /** 不执行任何清空背景的操作 */\n  DONT_CLEAR = 0,\n  /** 清空背景颜色和深度缓冲 */\n  SOLID_COLOR = 1,\n  /** 只清空深度缓冲 */\n  DEPTH_ONLY = 2,\n  /** 只清空颜色 */\n  COLOR_ONLY = 3,\n  /** 只清空模版缓冲*/\n  STENCIL_ONLY = 4,\n  /** 清空所有缓冲区 */\n  ALL_CLEAR = 5\n}\n\n/**\n * 材质类型枚举\n * @readonly\n */\nexport enum MaterialType {\n  /** 不透明 */\n  OPAQUE = 1000,\n  /** 透明或半透明 */\n  TRANSPARENT = 2000\n}\n\n/**\n * 可以开启或者关闭的渲染状态\n * @readonly\n */\nexport enum RenderState {\n  /** 片元的颜色融合计算 */\n  BLEND = 3042,\n  /** 多边形正反面剔除 */\n  CULL_FACE = 2884,\n  /** 深度测试 */\n  DEPTH_TEST = 2929,\n  /** Alpha通道测试 */\n  ALPHA_TEST = 3008,\n  /** 多边形片段的深度值偏移 */\n  POLYGON_OFFSET_FILL = 32823,\n  /** 通过alpha值决定的临时覆盖值计算。 */\n  SAMPLE_ALPHA_TO_COVERAGE = 32926,\n  /** 剪裁测试，即丢弃在剪裁矩形范围外的片段。 */\n  SCISSOR_TEST = 3089\n}\n\n/**\n * 面朝向枚举\n * @readonly\n */\nexport enum FrontFace {\n  /** 顺时针 */\n  CW = 0x0900,\n  /** 逆时针 */\n  CCW = 0x0901\n}\n\n/**\n * 面剔除枚举\n * @readonly\n */\nexport enum CullFace {\n  /** 正面 */\n  FRONT = 1028,\n  /** 反面 */\n  BACK = 1029,\n  /** 正面和反面 */\n  FRONT_AND_BACK = 1032\n}\n\n/**\n * 显示面枚举\n * @readonly\n * */\nexport enum Side {\n  /** 背面剔除，只显示正面 */\n  FRONT,\n  /** 正面剔除，只显示背面 */\n  BACK,\n  /** 光珊化前剔除，不显示任何面 */\n  NONE,\n  /** 关闭剔除，显示正反面 */\n  DOUBLE\n}\n\n/**\n * 比较函数枚举\n * @readonly\n */\nexport enum CompFunc {\n  /** 永不通过 */\n  NEVER = 0x0200,\n  /** 小于参考值时通过 */\n  LESS = 0x0201,\n  /** 等于参考值时通过 */\n  EQUAL = 0x0202,\n  /** 小于等于参考值时通过 */\n  LEQUAL = 0x0203,\n  /** 大于参考值时通过 */\n  GREATER = 0x0204,\n  /** 不等于参考值时通过 */\n  NOTEQUAL = 0x0205,\n  /** 大于等于参考值时通过 */\n  GEQUAL = 0x0206,\n  /** 总是通过 */\n  ALWAYS = 0x0207\n}\n\n/**\n * 纹理过滤枚举\n * @readonly\n */\nexport enum TextureFilter {\n  NEAREST = 9728, // gl.NEAREST\n  LINEAR = 9729, // gl.LINEAR\n  NEAREST_MIPMAP_NEAREST = 9984, // gl.NEAREST_MIPMAP_NEAREST\n  LINEAR_MIPMAP_NEAREST = 9985, // gl.LINEAR_MIPMAP_NEAREST\n  NEAREST_MIPMAP_LINEAR = 9986, // gl.NEAREST_MIPMAP_LINEAR\n  LINEAR_MIPMAP_LINEAR = 9987 // gl.LINEAR_MIPMAP_LINEAR\n}\n\n/**\n * 数据类型枚举\n */\nexport enum DataType {\n  /** 浮点数 */\n  FLOAT = 5126, // gl.FLOAT\n  /** 浮点型二维向量 */\n  FLOAT_VEC2 = 35664, // gl.FLOAT_VEC2\n  /** 浮点型三维向量 */\n  FLOAT_VEC3 = 35665, // gl.FLOAT_VEC3\n  /** 浮点型四维向量 */\n  FLOAT_VEC4 = 35666, // gl.FLOAT_VEC4\n\n  /** 整数 */\n  INT = 5124, // gl.INT\n  /** 整型二维向量 */\n  INT_VEC2 = 35667, // gl.INT_VEC2\n  /** 整型三维向量 */\n  INT_VEC3 = 35668, // gl.INT_VEC3\n  /** 整型四维向量 */\n  INT_VEC4 = 35669, // gl.INT_VEC4\n\n  /** 布尔类型 */\n  BOOL = 35670, // gl.BOOL\n  /** 布尔型二维向量 */\n  BOOL_VEC2 = 35671, // gl.BOOL_VEC2\n  /** 布尔型三维向量 */\n  BOOL_VEC3 = 35672, // gl.BOOL_VEC3\n  /** 布尔型四维向量 */\n  BOOL_VEC4 = 35673, // gl.BOOL_VEC4\n\n  /** 二阶矩阵 */\n  FLOAT_MAT2 = 35674, // gl.FLOAT_MAT2\n  /** 三阶矩阵 */\n  FLOAT_MAT3 = 35675, // gl.FLOAT_MAT3\n  /** 四阶矩阵 */\n  FLOAT_MAT4 = 35676, // gl.FLOAT_MAT4\n\n  /** 浮点数组 */\n  FLOAT_ARRAY = 35677, // gl.FLOAT_ARRAY\n  /** 浮点型二维向量数组 */\n  FLOAT_VEC2_ARRAY = 100000,\n  /** 浮点型三维向量数组 */\n  FLOAT_VEC3_ARRAY,\n  /** 浮点型四维向量数组 */\n  FLOAT_VEC4_ARRAY,\n\n  /** 整数数组 */\n  INT_ARRAY,\n  /** 整型二维向量数组 */\n  INT_VEC2_ARRAY,\n  /** 整型三维向量数组 */\n  INT_VEC3_ARRAY,\n  /** 整型四维向量数组 */\n  INT_VEC4_ARRAY,\n\n  /** 二阶矩阵数组 */\n  FLOAT_MAT2_ARRAY,\n  /** 三阶矩阵数组 */\n  FLOAT_MAT3_ARRAY,\n  /** 四阶矩阵数组 */\n  FLOAT_MAT4_ARRAY,\n\n  /** 2D 纹理采样数组 */\n  SAMPLER_2D_ARRAY,\n  /** Cube Map 纹理采样数组 */\n  SAMPLER_CUBE_ARRAY,\n\n  /** 2D 纹理采样 */\n  SAMPLER_2D = 35678, // gl.SAMPLER_2D\n  /** Cube Map 纹理采样 */\n  SAMPLER_CUBE = 35680, // gl.SAMPLER_CUBE\n\n  /** 单字节类型 */\n  BYTE = 5120, // gl.BYTE\n  /** 无符号的字节类型 */\n  UNSIGNED_BYTE = 5121, // gl.UNSIGNED_BYTE\n  /** Short 类型 */\n  SHORT = 5122, // gl.SHORT\n  /** 无符号的 Short 在线 */\n  UNSIGNED_SHORT = 5123, // gl.UNSIGNED_SHORT\n  /** 无符号整数 */\n  UNSIGNED_INT = 5125 // gl.UNSIGNED_INT\n}\n\n/**\n * glTF 1.0所支持的Uniform Semantic以及Oasis3D的扩展\n * @readonly\n */\nexport enum UniformSemantic {\n  // -- GLTF\n  /** Local 矩阵 */\n  LOCAL = 1,\n  /** Model 矩阵 */\n  MODEL = 2,\n  /** View 矩阵 */\n  VIEW = 3,\n  /** Project 矩阵 */\n  PROJECTION = 4,\n  /** Model View 矩阵 */\n  MODELVIEW = 5,\n  /** View Projection 矩阵 */\n  VIEWPROJECTION = 21,\n  /** Model View Project 矩阵 */\n  MODELVIEWPROJECTION = 6,\n  /** Model 矩阵的逆矩阵 */\n  MODELINVERSE = 7,\n  /** View 矩阵的逆矩阵 */\n  VIEWINVERSE = 8,\n  /** Projection 矩阵的逆矩阵 */\n  PROJECTIONINVERSE = 9,\n  /** Model View 矩阵的逆矩阵 */\n  MODELVIEWINVERSE = 10,\n  /** Model View Project 矩阵的逆矩阵 */\n  MODELVIEWPROJECTIONINVERSE = 11,\n  /** Model 矩阵的逆转置矩阵，可用来变换 Normal */\n  MODELINVERSETRANSPOSE = 12,\n  /** Model View 矩阵的逆转置矩阵 */\n  MODELVIEWINVERSETRANSPOSE = 13,\n  /** Viewport 参数 */\n  VIEWPORT = 14,\n  /** 骨骼矩阵数组 */\n  JOINTMATRIX = 15,\n  /** MorphTarget 权重 */\n  MORPHWEIGHTS = 16,\n\n  // --\n  /** 当前的摄像机的位置 */\n  EYEPOS = 17,\n  /** 当前程序运行的时长 */\n  TIME = 18,\n  /** 骨骼矩阵纹理 */\n  JOINTTEXTURE = 19,\n  /** joint 个数 */\n  JOINTCOUNT = 20\n}\n\n/**\n * 颜色混合方式枚举\n */\nexport enum BlendFunc {\n  /** 所有通道乘以0 */\n  ZERO = 0,\n  /** 所有通道乘以1 */\n  ONE = 1,\n  /** 所有通道乘以 Source Color */\n  SRC_COLOR = 768,\n  /** 所有通道乘以 1 减去 Source Color */\n  ONE_MINUS_SRC_COLOR = 769,\n  /** 所有通道乘以 Source Alpha */\n  SRC_ALPHA = 770,\n  /** 所有通道乘以 1 减去 Source Alpha */\n  ONE_MINUS_SRC_ALPHA = 771,\n  /** 所有通道乘以 destination Alpha */\n  DST_ALPHA = 772,\n  /** 所有通道乘以 1 减去 destination Alpha */\n  ONE_MINUS_DST_ALPHA = 773,\n  /** 所有通道乘以 1 减去 destination Color */\n  DST_COLOR = 774,\n  /** 所有通道乘以 1 减去 destination Color */\n  ONE_MINUS_DST_COLOR = 775,\n  /**\n   * Multiplies the RGB colors by the smaller of either the source alpha value or the value of 1 minus the destination alpha value. The alpha value is multiplied by 1.\n   */\n  SRC_ALPHA_SATURATE = 776,\n  /**\n   * 所有通道乘以一个颜色常量\n   */\n  enumANT_COLOR = 32769,\n  /** 所有通道乘以 1 减去颜色常量 */\n  ONE_MINUS_enumANT_COLOR = 32770,\n  /**\n   * 所有通道乘以一个Alpha常量\n   */\n  enumANT_ALPHA = 32771,\n  /**\n   * 所有通道乘以一减去Alpha常量\n   */\n  ONE_MINUS_enumANT_ALPHA = 32772\n}\n\n/**\n * RenderPass 的可用 MASK\n * @readonly\n * @private\n */\nexport enum MaskList {\n  MASK1 = 0b1,\n  MASK2 = 0b10,\n  MASK3 = 0b100,\n  MASK4 = 0b1000,\n  MASK5 = 0b10000,\n  MASK6 = 0b100000,\n  MASK7 = 0b1000000,\n  MASK8 = 0b10000000,\n  MASK9 = 0b100000000,\n  MASK10 = 0b1000000000,\n  MASK11 = 0b10000000000,\n  MASK12 = 0b100000000000,\n  MASK13 = 0b1000000000000,\n  MASK14 = 0b10000000000000,\n  MASK15 = 0b100000000000000,\n  MASK16 = 0b1000000000000000,\n  MASK17 = 0b10000000000000000,\n  MASK18 = 0b100000000000000000,\n  MASK19 = 0b1000000000000000000,\n  MASK20 = 0b10000000000000000000,\n  // MASK21=        0b100000000000000000000,  // 预留\n  // MASK22=        0b1000000000000000000000,\n  // MASK23=        0b10000000000000000000000,\n  // MASK24=        0b100000000000000000000000,\n  // MASK25=        0b1000000000000000000000000,\n  // MASK26=        0b10000000000000000000000000,\n  // MASK27=        0b100000000000000000000000000,\n  EVERYTHING = 0b1111111111111111111111111111,\n  SHADOW = 0b10000000000000000000000000000,\n  SHADOW_MAP = 0b100000000000000000000000000000\n}\n\n/**\n * 探针渲染速率\n * */\nexport enum RefreshRate {\n  /** 只渲染一次 */\n  ONCE = 1,\n  /** 每帧渲染 */\n  EVERYFRAME = 2\n}\n\n/**\n * 相交信息\n * */\nexport enum IntersectInfo {\n  /** 分离 */\n  EXCLUDE,\n  /** 交叉 */\n  INTERSECT,\n  /** 包含 */\n  INCLUDE\n}\n\n/**\n * 包围物类型\n * */\nexport enum BoundingType {\n  /** 轴对齐包围盒 */\n  AABB,\n  /** 方向包围盒 */\n  OBB,\n  /** 包围球 */\n  SPHERE\n}\n\n/**\n * GL 层能力\n * 有些能力可以靠 extension 来抹平，有些能力必须支持 WebGL 2.0\n * */\nexport enum GLCapabilityType {\n  standardDerivatives = \"OES_standard_derivatives\",\n  shaderTextureLod = \"EXT_shader_texture_lod\",\n  elementIndexUint = \"OES_element_index_uint\",\n  depthTexture = \"WEBGL_depth_texture\",\n  drawBuffers = \"WEBGL_draw_buffers\",\n  vertexArrayObject = \"OES_vertex_array_object\",\n  instancedArrays = \"ANGLE_instanced_arrays\",\n  multipleSample = \"multipleSampleOnlySupportedInWebGL2\",\n  textureFloat = \"OES_texture_float\",\n  textureFloatLinear = \"OES_texture_float_linear\",\n  textureHalfFloat = \"OES_texture_half_float\",\n  textureHalfFloatLinear = \"OES_texture_half_float_linear\",\n  WEBGL_colorBufferFloat = \"WEBGL_color_buffer_float\",\n  colorBufferFloat = \"EXT_color_buffer_float\",\n  colorBufferHalfFloat = \"EXT_color_buffer_half_float\",\n  textureFilterAnisotropic = \"EXT_texture_filter_anisotropic\",\n\n  astc = \"WEBGL_compressed_texture_astc\",\n  astc_webkit = \"WEBKIT_WEBGL_compressed_texture_astc\",\n  etc = \"WEBGL_compressed_texture_etc\",\n  etc_webkit = \"WEBKIT_WEBGL_compressed_texture_etc\",\n  etc1 = \"WEBGL_compressed_texture_etc1\",\n  etc1_webkit = \"WEBKIT_WEBGL_compressed_texture_etc1\",\n  pvrtc = \"WEBGL_compressed_texture_pvrtc\",\n  pvrtc_webkit = \"WEBKIT_WEBGL_compressed_texture_pvrtc\",\n  s3tc = \"WEBGL_compressed_texture_s3tc\",\n  s3tc_webkit = \"WEBKIT_WEBGL_compressed_texture_s3tc\"\n  // atc = \"WEBGL_compressed_texture_atc\",\n  // s3tc_srgb = \"WEBGL_compressed_texture_s3tc_srgb\"\n}\n\n/**\n * OIT 模式\n * */\nexport enum OITMode {\n  /** 加权平均算法，性能较高 */\n  WEIGHTED_AVERAGE,\n  /** 深度剥离算法，性能较低，但精确度高 */\n  DEPTH_PEEL,\n  /** 双层深度剥离，性能更好，强依赖 MRT */\n  DUAL_DEPTH_PEEL\n}\n\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray\n  | Float32Array\n  | Float64Array;\n","type PromiseNotifier = (progress: number) => void;\n\n/**\n * 资源 Promise 状态\n */\nexport enum AssetPromiseStatus {\n  /** 成功。*/\n  Success,\n  /** 请求中。*/\n  Pending,\n  /** 失败。*/\n  Failed\n}\n/**\n * 资源加载的 Promise。\n */\nexport class AssetPromise<T> extends Promise<T> {\n  static all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>,\n      T10 | PromiseLike<T10>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\n\n  static all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\n\n  static all<T1, T2, T3, T4, T5, T6, T7, T8>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7, T8]>;\n\n  static all<T1, T2, T3, T4, T5, T6, T7>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7]>;\n\n  static all<T1, T2, T3, T4, T5, T6>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6]>;\n\n  static all<T1, T2, T3, T4, T5>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5]>;\n\n  static all<T1, T2, T3, T4>(\n    values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]\n  ): AssetPromise<[T1, T2, T3, T4]>;\n\n  static all<T1, T2, T3>(\n    values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]\n  ): AssetPromise<[T1, T2, T3]>;\n\n  static all<T1, T2>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): AssetPromise<[T1, T2]>;\n\n  static all<T>(values: readonly (T | PromiseLike<T>)[]): AssetPromise<T[]>;\n\n  /**\n   * 通过提供的资源 Promise 集合返回一个新的资源 Promise。\n   * 当提供集合中所有的 Promise 完成时会触发新资源 Promise 的 resolved。\n   * @param - 资源 Promise 集合\n   * @returns 资源 Promise\n   */\n  static all<T>(promises: T | PromiseLike<T>[]): AssetPromise<T[]> {\n    return new AssetPromise((resolve, reject, setProgress) => {\n      if (!Array.isArray(promises)) {\n        return resolve([promises]);\n      }\n\n      let completed = 0;\n      let total = promises.length;\n      let results = new Array<T>(total);\n\n      promises.forEach((value, index) => {\n        Promise.resolve(value)\n          .then((result) => {\n            results[index] = result;\n\n            completed += 1;\n            setProgress(completed / total);\n\n            if (completed == total) {\n              resolve(results);\n            }\n          })\n          .catch((err) => reject(err));\n      });\n    });\n  }\n\n  private _status: AssetPromiseStatus;\n  private _progress: number;\n  private _reject: (reason?: any) => void;\n  private _listeners: Set<PromiseNotifier>;\n\n  /**\n   * 当前 promise 状态。\n   */\n  get status(): AssetPromiseStatus {\n    return this._status;\n  }\n\n  /**\n   * 加载进度。\n   */\n  get progress(): number {\n    return this._progress;\n  }\n\n  /**\n   * 进度回调。\n   * @param callback - 进度回调\n   * @returns 资源 Promise\n   */\n  onProgress(callback: (progress?: number) => any): AssetPromise<T> {\n    this._listeners.add(callback);\n    return this;\n  }\n\n  /**\n   * 取消 Promise 请求。\n   * @returns 资源 Promise\n   */\n  cancel(): AssetPromise<T> {\n    if (this._status !== AssetPromiseStatus.Pending) {\n      return this;\n    }\n    this._reject(\"Promise Canceled\");\n    return this;\n  }\n\n  /**\n   * 创建一个资源加载的 Promise。\n   * @param executor - A callback used to initialize the promise. This callback is passed two arguments:\n   * a resolve callback used to resolve the promise with a value or the result of another promise,\n   * and a reject callback used to reject the promise with a provided reason or error.\n   * and a setProgress callback used to set promise progress with a percent.\n   */\n  constructor(\n    executor: (\n      resolve: (value?: T | PromiseLike<T>) => void,\n      reject?: (reason?: any) => void,\n      setProgress?: PromiseNotifier\n    ) => void\n  ) {\n    let newReject: (reason?: any) => void;\n\n    const setProgress = (progress: number) => {\n      if (progress <= this._progress) {\n        return;\n      }\n      this._progress = progress;\n\n      for (const listener of this._listeners) {\n        listener(progress);\n      }\n    };\n\n    super((resolve, reject) => {\n      newReject = (reason?: any) => {\n        // 加入到微任务中，避免直接调用找不到 this 报错\n        Promise.resolve().then(() => {\n          this._status = AssetPromiseStatus.Failed;\n          reject(reason);\n        });\n      };\n      executor(\n        (value: T) => {\n          // 加入到微任务中，避免直接调用找不到 this 报错\n          Promise.resolve().then(() => {\n            setProgress(1);\n            this._status = AssetPromiseStatus.Success;\n            resolve(value);\n          });\n        },\n        newReject,\n        (progress: number) => {\n          // 加入到微任务中，避免直接调用找不到 this 报错\n          Promise.resolve().then(() => {\n            setProgress(progress);\n          });\n        }\n      );\n    });\n    this._reject = newReject;\n    this._listeners = new Set();\n    this._progress = 0;\n    this._status = AssetPromiseStatus.Pending;\n  }\n}\n","import { AssetPromise } from \"./AssetPromise\";\nimport { LoadItem } from \"./LoadItem\";\nimport { ReferenceObject } from \"./ReferenceObject\";\nimport { Engine } from \"..\";\nimport { Loader } from \"./Loader\";\nimport { AssetType } from \"./AssetType\";\n\n/**\n * 资源管理员。\n */\nexport class ResourceManager {\n  /** loader 集合。*/\n  private static _loaders: { [key: number]: Loader<any> } = {};\n  private static _extTypeMapping: { [key: string]: AssetType } = {};\n\n  /**\n   * @internal\n   */\n  static _addLoader(type: AssetType, loader: Loader<any>, extnames: string[]) {\n    this._loaders[type] = loader;\n    for (let i = 0, len = extnames.length; i < len; i++) {\n      this._extTypeMapping[extnames[i]] = type;\n    }\n  }\n\n  private static _getTypeByUrl(url: string): AssetType {\n    return this._extTypeMapping[url.substring(url.lastIndexOf(\".\") + 1)];\n  }\n\n  /** 加载资产失败后的重试次数。*/\n  retryCount: number = 1;\n  /** 加载资产失败后的重试延迟时间，单位是毫秒(ms)。*/\n  retryInterval: number = 0;\n  /** 加载资产默认的超时时间，单位是毫秒(ms)。*/\n  timeout: number = 20000;\n\n  /** 资产路径池,key为资产ID，值为资产路径，通过路径加载的资源均放入该池中，用于资源文件管理。*/\n  private _assetPool: { [key: number]: string } = Object.create(null);\n  /** 资产池,key为资产路径，值为资产，通过路径加载的资源均放入该池中，用于资产文件管理。*/\n  private _assetUrlPool: { [key: string]: Object } = Object.create(null);\n  /** 引用计数对象池,key为对象ID，引用计数的对象均放入该池中。*/\n  private _referenceObjectPool: { [key: number]: ReferenceObject } = Object.create(null);\n  /** 加载中的资源。*/\n  private _loadingPromises: { [url: string]: AssetPromise<any> } = {};\n\n  /**\n   * 创建资源管理员。\n   * @param engine - 当前资源管理所属的 engine\n   */\n  constructor(public readonly engine: Engine) {}\n\n  /**\n   * 通过路径异步加载资源。\n   * @param path - 路径\n   * @returns 资源 Promise\n   */\n  load<T>(path: string): AssetPromise<T>;\n\n  /**\n   * 通过路径集合异步加载资源集合。\n   * @param path - 路径集合\n   * @returns 资源 Promise\n   */\n  load(pathes: string[]): AssetPromise<Object[]>;\n\n  /**\n   * 通过加载信息集合异步加载资源集合。\n   * @param assetItem - 资源加载项\n   * @returns 资源 Promise\n   */\n  load<T>(assetItem: LoadItem): AssetPromise<T>;\n\n  /**\n   * 通过加载信息集合异步加载资源集合。\n   * @param assetItems - 资源加载项集合\n   * @returns 资源 Promise\n   */\n  load(assetItems: LoadItem[]): AssetPromise<Object[]>;\n\n  /**\n   * @internal\n   */\n  load<T>(assetInfo: string | LoadItem | (LoadItem | string)[]): AssetPromise<T | Object[]> {\n    // single item\n    if (!Array.isArray(assetInfo)) {\n      return this._loadSingleItem(assetInfo);\n    }\n    // multi items\n    const promises = assetInfo.map((item) => this._loadSingleItem<T>(item));\n    return AssetPromise.all(promises);\n  }\n\n  /**\n   * 取消所有未完成加载的资产。\n   */\n  cancelNotLoaded(): void;\n\n  /**\n   * 取消 url 未完成加载的资产。\n   * @param url - 资源链接\n   */\n  cancelNotLoaded(url: string): void;\n\n  /**\n   * 取消加载 urls 中未完成加载的资产。\n   * @param urls - 资源链接数组\n   */\n  cancelNotLoaded(urls: string[]): void;\n\n  /**\n   * @internal\n   */\n  cancelNotLoaded(url?: string | string[]): void {\n    if (!url) {\n      Object.values(this._loadingPromises).forEach((promise) => {\n        promise.cancel();\n      });\n    } else if (typeof url === \"string\") {\n      this._loadingPromises[url]?.cancel();\n    } else {\n      url.forEach((p) => {\n        this._loadingPromises[p]?.cancel();\n      });\n    }\n  }\n\n  /**\n   * 垃圾回收，会释放受引用计数管理的资源对象。\n   * @remarks 释放原则为没有被组件实例引用，包含直接引用和间接引用。\n   */\n  gc(): void {\n    const objects = Object.values(this._referenceObjectPool);\n    objects.sort((refObj1, refObj2) => refObj1.gcPriority - refObj2.gcPriority);\n    for (let i = 0, len = objects.length; i < len; i++) {\n      if (!objects[i].isGCIgnored) {\n        objects[i].destroy();\n      }\n    }\n  }\n\n  /**\n   * 根据 instanceId 获取资源路径\n   * @param instanceId 对象 id\n   * @returns 资源路径\n   */\n  getAssetPath(instanceId: number): string {\n    return this._assetPool[instanceId];\n  }\n\n  /**\n   * @internal\n   */\n  _addAsset(path: string, asset: ReferenceObject): void {\n    this._assetPool[asset.instanceId] = path;\n    this._assetUrlPool[path] = asset;\n  }\n\n  /**\n   * @internal\n   */\n  _deleteAsset(asset: ReferenceObject): void {\n    const id = asset.instanceId;\n    const path = this._assetPool[id];\n    if (path) {\n      delete this._assetPool[id];\n      delete this._assetUrlPool[path];\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _addReferenceObject(id: number, asset: ReferenceObject): void {\n    this._referenceObjectPool[id] = asset;\n  }\n\n  /**\n   * @internal\n   */\n  _deleteReferenceObject(id: number): void {\n    delete this._referenceObjectPool[id];\n  }\n\n  private _assignDefaultOptions(assetInfo: LoadItem): LoadItem | never {\n    assetInfo.type = assetInfo.type ?? ResourceManager._getTypeByUrl(assetInfo.url);\n    if (assetInfo.type === undefined) {\n      throw `asset type should be specified: ${assetInfo.url}`;\n    }\n    assetInfo.retryCount = assetInfo.retryCount ?? this.retryCount;\n    assetInfo.timeout = assetInfo.timeout ?? this.timeout;\n    assetInfo.retryInterval = assetInfo.retryInterval ?? this.retryInterval;\n    assetInfo.url = assetInfo.url ?? assetInfo.urls.join(\",\");\n    return assetInfo;\n  }\n\n  private _loadSingleItem<T>(item: LoadItem | string): AssetPromise<T> {\n    const info = this._assignDefaultOptions(typeof item === \"string\" ? { url: item } : item);\n    const url = info.url;\n    // has cache\n    if (this._assetUrlPool[url]) {\n      return new AssetPromise((resolve) => {\n        resolve(this._assetUrlPool[url] as T);\n      });\n    }\n    // loading\n    if (this._loadingPromises[url]) {\n      return this._loadingPromises[info.url];\n    }\n    const loader = ResourceManager._loaders[info.type];\n    const promise = loader.load(info, this);\n    this._loadingPromises[url] = promise;\n    promise\n      .then((res) => {\n        if (loader.useCache) this._addAsset(url, res);\n        delete this._loadingPromises[url];\n      })\n      .catch(() => {\n        // then 会产生一个新的 promise，若是报错没有 catch 会导致 uncaught error\n      });\n    return promise;\n  }\n}\n\n/**\n * 声明 resourceLoader 的装饰器。\n * @param assetType - 资源类型\n * @param extnames - 扩展名\n */\nexport function resourceLoader(assetType: AssetType, extnames: string[], useCache: boolean = true) {\n  return <T extends Loader<any>>(Target: { new (useCache: boolean): T }) => {\n    const loader = new Target(useCache);\n    ResourceManager._addLoader(assetType, loader, extnames);\n  };\n}\n","import { SceneFeature } from \"./SceneFeature\";\nimport { EngineFeature } from \"./EngineFeature\";\nimport { Scene } from \"./Scene\";\nimport { Engine } from \"./Engine\";\n\n/**\n * 管理一组功能特性对象\n * @class\n */\nexport class FeatureManager<T extends EngineFeature | SceneFeature> {\n  private _features: Array<new (engine: Engine) => T> = [];\n\n  private _objects = [];\n\n  /**\n   * 注册一个功能特性\n   * @param {SceneFeature|EngineFeature} Feature\n   */\n  public registerFeature(IFeature: new () => T): void {\n    const featureArray = this._features;\n\n    // -- 按照 type 查找，避免重复添加\n    for (let i = 0, len = featureArray.length; i < len; i++) {\n      if (featureArray[i] === IFeature) {\n        return;\n      }\n    }\n\n    // -- 添加到全局数组\n    featureArray.push(IFeature);\n\n    // -- 添加到现有场景实例中\n    const objectArray = this._objects;\n    for (let i = 0, len = objectArray.length; i < len; i++) {\n      objectArray[i].features.push(new IFeature());\n    }\n  }\n\n  /**\n   * 添加一个具有功能特性的对象\n   * @param {Scene|Engine} obj\n   */\n  public addObject(obj: Scene | Engine): void {\n    obj.features = [];\n    for (let i = 0, len = this._features.length; i < len; i++) {\n      obj.features.push(new this._features[i]((<any>obj).engine ?? <any>obj) as any);\n    }\n    this._objects.push(obj);\n  }\n\n  /**\n   * 调用功能特性的指定方法\n   * @param {Scene|Engine} obj\n   * @param {string} method\n   * @param {Array} args\n   */\n  public callFeatureMethod(obj: Scene | Engine, method: string, args: any[]): void {\n    const features = obj.features;\n    const count = features.length;\n\n    for (let i = 0; i < count; i++) {\n      const feature = features[i];\n      if (feature[method]) {\n        feature[method].apply(feature, args);\n      }\n    }\n  }\n\n  /**\n   * 查找特性\n   * @param {Scene|Engine} obj\n   * @param {SceneFeature|EngineFeature} feature\n   */\n\n  public findFeature(obj: Scene | Engine, IFeature: new () => T): T {\n    const features = obj.features;\n    const count = features.length;\n\n    for (let i = 0; i < count; i++) {\n      const feature = features[i];\n      if (feature.constructor === (IFeature as any)) {\n        return feature as any;\n      }\n    }\n    return undefined;\n  }\n}\n","import { Component } from \"./Component\";\nimport { Entity } from \"./Entity\";\n\ntype ComponentConstructor = { new (...args: any): Component };\n\n/**\n * 用于组件依赖注册。\n */\nexport class ComponentsDependencies {\n  /**\n   * @internal\n   */\n  private static _dependenciesMap = new Map<ComponentConstructor, ComponentConstructor[]>();\n  private static _invDependenciesMap = new Map<ComponentConstructor, ComponentConstructor[]>();\n\n  /**\n   * 注册组件依赖关系。\n   * @param currentComponent\n   * @param dependentComponent\n   */\n  static register(currentComponent: ComponentConstructor, dependentComponent: ComponentConstructor) {\n    this._addDependency(currentComponent, dependentComponent, this._dependenciesMap);\n    this._addDependency(dependentComponent, currentComponent, this._invDependenciesMap);\n  }\n\n  /**\n   * @internal\n   */\n  static _addCheck(entity: Entity, type: ComponentConstructor) {\n    // 检查是否有被依赖组件\n    const dependencies = ComponentsDependencies._dependenciesMap.get(type);\n    if (dependencies) {\n      for (let i = 0, len = dependencies.length; i < len; i++) {\n        if (!entity.getComponent(dependencies[i])) {\n          throw `you should add ${dependencies[i]} before adding ${type}`;\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _removeCheck(entity: Entity, type: ComponentConstructor) {\n    const invDenpendencies = ComponentsDependencies._invDependenciesMap.get(type);\n    if (invDenpendencies) {\n      for (let i = 0, len = invDenpendencies.length; i < len; i++) {\n        if (entity.getComponent(invDenpendencies[i])) {\n          throw `you should remove ${invDenpendencies[i]} before adding ${type}`;\n        }\n      }\n    }\n  }\n\n  private static _addDependency(\n    currentComponent: ComponentConstructor,\n    dependentComponent: ComponentConstructor,\n    map: Map<any, any>\n  ) {\n    let components = map.get(currentComponent);\n    if (!components) {\n      components = [];\n      map.set(currentComponent, components);\n    }\n    if (components.indexOf(dependentComponent) === -1) {\n      components.push(dependentComponent);\n    }\n  }\n\n  private constructor() {}\n}\n\nexport function dependencies(...abilityClass: ComponentConstructor[]) {\n  return function <T extends ComponentConstructor>(target: T): void {\n    abilityClass.forEach((ability) => ComponentsDependencies.register(target, ability));\n  };\n}\n","/**\n * 高性能无序数组，delete采用交换法提升行,内部数只扩不缩。\n */\nexport class DisorderedArray<T> {\n  _elements: T[];\n\n  length: number = 0;\n\n  constructor(count: number = 0) {\n    this._elements = new Array<T>(count);\n  }\n\n  add(element: T): void {\n    if (this.length === this._elements.length) this._elements.push(element);\n    else this._elements[this.length] = element;\n    this.length++;\n  }\n\n  delete(element: T): void {\n    const index = this._elements.indexOf(element); //CM:可修改为自定义二分查找等算法,目前this._elements>=this.length 浪费性能\n    this.deleteByIndex(index);\n  }\n  /**\n   *\n   * @param index\n   * @returns 被替换过来的项 用于外部重置他的index\n   */\n  deleteByIndex(index: number): T {\n    var elements: T[] = this._elements;\n    let end: T = null;\n    const lastIndex = this.length - 1;\n    if (index !== lastIndex) {\n      end = elements[lastIndex];\n      elements[index] = end;\n    }\n    this.length--;\n    return end;\n  }\n\n  garbageCollection(): void {\n    this._elements.length = this.length;\n  }\n}\n","import { EventDispatcher, MaskList } from \"./base\";\nimport { Engine } from \"./Engine\";\nimport { Entity } from \"./Entity\";\nimport { Scene } from \"./Scene\";\n\n/**\n * 组件的基类。\n */\nexport abstract class Component extends EventDispatcher {\n  /** @internal */\n  _entity: Entity;\n  /** @internal */\n  _destroyed: boolean = false;\n\n  protected _props: object;\n\n  private _enabled: boolean = true;\n  private _awaked: boolean = false;\n\n  /**\n   * 是否启用。\n   */\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  set enabled(value: boolean) {\n    if (value === this._enabled) {\n      return;\n    }\n    this._enabled = value;\n    if (value) {\n      this._entity.isActiveInHierarchy && this._onEnable();\n    } else {\n      this._entity.isActiveInHierarchy && this._onDisable();\n    }\n  }\n\n  /**\n   * 是否已经销毁。\n   */\n  get destroyed(): boolean {\n    return this._destroyed;\n  }\n\n  /**\n   * 所属节点对象。\n   */\n  get entity(): Entity {\n    return this._entity;\n  }\n\n  /**\n   * 所属场景对象。\n   */\n  get scene(): Scene {\n    return this._entity.scene;\n  }\n\n  /**\n   * 所属的Engine对象。\n   */\n  get engine(): Engine {\n    return this._entity.engine;\n  }\n\n  /**\n   * 创建组件实例。\n   * @param entity - 对象所在实体\n   * @param props - 配置参数\n   */\n  constructor(entity: Entity, props: object = {}) {\n    super();\n    this._props = props;\n    this._entity = entity;\n\n    this._renderPassFlag = MaskList.EVERYTHING; // @deprecated\n    this._passMasks = [MaskList.EVERYTHING]; // @deprecated\n  }\n\n  /**\n   * 销毁本组件对象\n   */\n  destroy(): void {\n    if (this._destroyed) return;\n    this._entity._removeComponent(this);\n    if (this._entity.isActiveInHierarchy) {\n      this._enabled && this._onDisable();\n      this._onInActive();\n    }\n    this._destroyed = true;\n    this._onDestroy();\n  }\n\n  /**\n   * @internal\n   */\n  _onAwake(): void {}\n\n  /**\n   * @internal\n   */\n  _onEnable(): void {}\n\n  /**\n   * @internal\n   */\n  _onDisable(): void {}\n\n  /**\n   * @internal\n   */\n  _onDestroy(): void {}\n\n  /**\n   * @internal\n   */\n  _onActive(): void {}\n\n  /**\n   * @internal\n   */\n  _onInActive(): void {}\n\n  /**\n   * @internal\n   */\n  _setActive(value: boolean): void {\n    if (value) {\n      if (!this._awaked) {\n        this._awaked = true;\n        this._onAwake();\n      }\n      // onAwake can do isActive = false,for example write this in Script's onAwake().\n      if (this._entity._isActiveInHierarchy) {\n        this._onActive();\n        this._enabled && this._onEnable();\n      }\n    } else {\n      this._enabled && this._onDisable();\n      this._onInActive();\n    }\n  }\n\n  /**\n   * @todo 临时方案，未来组件可以统一使用浅拷贝解决\n   * @internal\n   */\n  _cloneTo(desComponent: Component): void {}\n\n  //---------------------------------------------Deprecated-----------------------------------------------------------------\n\n  private _renderPriority: number = 0;\n  private _renderPassFlag: MaskList;\n  private _passMasks: MaskList[];\n  private _cullDistanceSq: number = 0; // 等于0，代表不进行 distance cull\n\n  /**\n   * @deprecated\n   * 渲染优先级\n   * @member {number}\n   */\n  get renderPriority(): number {\n    return this._renderPriority;\n  }\n  set renderPriority(val: number) {\n    this._renderPriority = val;\n  }\n\n  /**\n   * @deprecated\n   */\n  get cullDistanceSq(): number {\n    return this._cullDistanceSq;\n  }\n\n  /**\n   * @deprecated\n   */\n  get cullDistance(): number {\n    return Math.sqrt(this._cullDistanceSq);\n  }\n  set cullDistance(val: number) {\n    this._cullDistanceSq = val * val;\n  }\n\n  /**\n   * @deprecated\n   */\n  get renderPassFlag(): MaskList {\n    return this._renderPassFlag;\n  }\n  set renderPassFlag(val: MaskList) {\n    this._renderPassFlag = val;\n  }\n\n  /**\n   * @deprecated\n   * 设置通过的 Pass Mask，\n   * @param  {PassMask} masks 各个 mask\n   */\n  public setPassMasks(...masks: MaskList[]): void {\n    this._passMasks = masks;\n    this._renderPassFlag = masks.reduce((a, b) => a | b, 0);\n  }\n\n  /**\n   * @deprecated\n   * 添加 Mask 到通过列表\n   * @param  {PassMask} masks 各个 mask\n   */\n  public addPassMasks(...masks: MaskList[]): void {\n    for (const mask of masks) {\n      const idx = this._passMasks.indexOf(mask);\n      if (idx < 0) {\n        this._passMasks.push(mask);\n      }\n    }\n\n    this.setPassMasks(...this._passMasks);\n  }\n\n  /**\n   * @deprecated\n   * 从当前的通过列表移除 Mask\n   * @param  {PassMask} masks 各个 mask\n   */\n  public removePassMasks(...masks: MaskList[]): void {\n    for (const mask of masks) {\n      const idx = this._passMasks.indexOf(mask);\n      if (idx > -1) {\n        this._passMasks.splice(idx, 1);\n      }\n    }\n\n    this.setPassMasks(...this._passMasks);\n  }\n}\n","/**\n * 由于更新标记。\n */\nexport class UpdateFlag {\n  /** 标记。 */\n  flag = true;\n\n  constructor(private _flags: UpdateFlag[] = []) {}\n\n  /**\n   * 销毁。\n   */\n  destroy(): void {\n    const flags = this._flags;\n    // avoid repeated destroy\n    if (flags) {\n      const index = flags.indexOf(this);\n      const last = flags.length - 1;\n      if (index !== last) {\n        const end = flags[last];\n        flags[index] = end;\n      }\n      flags.length--;\n      this._flags = null;\n    }\n  }\n}\n","import { Vector3, Vector4 } from \"@alipay/o3-math\";\nimport { EventDispatcher, Logger, MaskList } from \"./base\";\nimport { Camera } from \"./Camera\";\nimport { Engine } from \"./Engine\";\nimport { Entity } from \"./Entity\";\nimport { FeatureManager } from \"./FeatureManager\";\nimport { SceneFeature } from \"./SceneFeature\";\n\n/**\n * 场景。\n */\nexport class Scene extends EventDispatcher {\n  static sceneFeatureManager = new FeatureManager<SceneFeature>();\n\n  /** 场景名字 */\n  name: string;\n  /**\n   * @private\n   * @deprecated\n   * @todo: migrate to camera\n   * 裁剪面，平面方程组。裁剪面以下的片元将被剔除绘制\n   * @example\n   * scene.clipPlanes = [[0,1,0,0]];\n   * */\n  clipPlanes: Vector4[] = [];\n  _activeCameras: Camera[] = [];\n  _isActiveInEngine: boolean = false;\n\n  private _engine: Engine;\n  private _destroyed: boolean = false;\n  private _rootEntities: Entity[] = [];\n\n  /**\n   * 当前的所属 Engine。\n   */\n  get engine(): Engine {\n    return this._engine;\n  }\n\n  /**\n   * 根实体的数量。\n   */\n  get rootEntitiesCount(): number {\n    return this._rootEntities.length;\n  }\n\n  /**\n   * 根实体集合。\n   */\n  get rootEntities(): Readonly<Entity[]> {\n    return this._rootEntities;\n  }\n\n  /**\n   * 是否已销毁。\n   */\n  get destroyed(): boolean {\n    return this._destroyed;\n  }\n\n  /**\n   * @param name - 名称\n   * @param engine - 引擎\n   */\n  constructor(name?: string, engine?: Engine) {\n    super();\n    this.name = name || \"\";\n    this._engine = engine || Engine._getDefaultEngine();\n\n    Scene.sceneFeatureManager.addObject(this);\n  }\n\n  /**\n   * 创建根实体。\n   * @param name - 实体名称\n   * @returns 实体\n   */\n  createRootEntity(name?: string): Entity {\n    const entity = new Entity(name, this._engine);\n    this.addRootEntity(entity);\n    return entity;\n  }\n\n  /**\n   * 添加根实体。\n   * @param entity - 根实体\n   */\n  addRootEntity(entity: Entity): void {\n    const isRoot = entity._isRoot;\n\n    //let entity become root\n    if (!isRoot) {\n      entity._isRoot = true;\n      entity._removeFromParent();\n    }\n\n    //add or remove from scene's rootEntities\n    const oldScene = entity._scene;\n    if (oldScene !== this) {\n      if (oldScene && isRoot) {\n        oldScene._removeEntity(entity);\n      }\n      this._rootEntities.push(entity);\n      Entity._traverseSetOwnerScene(entity, this);\n    } else if (!isRoot) {\n      this._rootEntities.push(entity);\n    }\n\n    //process entity active/inActive\n    if (this._isActiveInEngine) {\n      !entity._isActiveInHierarchy && entity._isActive && entity._processActive();\n    } else {\n      entity._isActiveInHierarchy && entity._processInActive();\n    }\n  }\n\n  /**\n   * 移除根实体。\n   * @param entity - 根实体\n   */\n  removeRootEntity(entity: Entity): void {\n    if (entity._isRoot && entity._scene == this) {\n      this._removeEntity(entity);\n      this._isActiveInEngine && entity._processInActive();\n      Entity._traverseSetOwnerScene(entity, null);\n    }\n  }\n\n  /**\n   * 通过索引获取根实体。\n   * @param index - 索引\n   */\n  getRootEntity(index: number = 0): Entity | null {\n    return this._rootEntities[index];\n  }\n\n  /**\n   * 销毁场景。\n   */\n  destroy(): void {\n    this._isActiveInEngine && (this._engine.sceneManager.activeScene = null);\n    Scene.sceneFeatureManager.callFeatureMethod(this, \"destroy\", [this]);\n    for (let i = 0, n = this.rootEntitiesCount; i < n; i++) {\n      this._rootEntities[i].destroy();\n    }\n    this._rootEntities.length = 0;\n    this._activeCameras.length = 0;\n    (Scene.sceneFeatureManager as any)._objects = [];\n    this._destroyed = true;\n  }\n\n  /**\n   * 向当前场景注册一个摄像机对象\n   * @param {CameraComponent} camera 摄像机对象\n   * @private\n   */\n  attachRenderCamera(camera: Camera): void {\n    const index = this._activeCameras.indexOf(camera);\n    if (index === -1) {\n      this._activeCameras.push(camera);\n    } else {\n      Logger.warn(\"Camera already attached.\");\n    }\n  }\n\n  /**\n   * 从当前场景移除一个摄像机对象\n   * @param {CameraComponent} camera 摄像机对象\n   * @private\n   */\n  detachRenderCamera(camera: Camera): void {\n    const index = this._activeCameras.indexOf(camera);\n    if (index !== -1) {\n      this._activeCameras.splice(index, 1);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _processActive(active: boolean): void {\n    this._isActiveInEngine = active;\n    const rootEntities = this._rootEntities;\n    for (let i = rootEntities.length - 1; i >= 0; i--) {\n      const entity = rootEntities[i];\n      if (entity._isActive) {\n        active ? entity._processActive() : entity._processInActive();\n      }\n    }\n  }\n\n  private _removeEntity(entity: Entity): void {\n    const oldRootEntities = this._rootEntities;\n    oldRootEntities.splice(oldRootEntities.indexOf(entity), 1);\n  }\n\n  //-----------------------------------------@deprecated-----------------------------------\n  static registerFeature(Feature: new () => SceneFeature) {\n    Scene.sceneFeatureManager.registerFeature(Feature);\n  }\n\n  findFeature<T extends SceneFeature>(Feature: { new (): T }): T {\n    return Scene.sceneFeatureManager.findFeature(this, Feature) as T;\n  }\n\n  features: SceneFeature[] = [];\n\n  /**\n   * @deprecated\n   * 射线\n   * @param ray\n   */\n  public raycast(ray: { origin: Vector3; direction: Vector3 }, outPos?: Vector3, tag?: MaskList): any {}\n}\n","import { AssetPromise } from \"./asset/AssetPromise\";\nimport { Engine } from \"./Engine\";\nimport { Scene } from \"./Scene\";\n\n/**\n * 场景管理员。\n */\nexport class SceneManager {\n  _activeScene: Scene;\n\n  /**\n   * 当前激活场景。\n   */\n  get activeScene(): Scene {\n    return this._activeScene;\n  }\n\n  set activeScene(scene: Scene) {\n    const oldScene = this._activeScene;\n    if (oldScene !== scene) {\n      oldScene && oldScene._processActive(false);\n      scene && scene._processActive(true);\n      this._activeScene = scene;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  constructor(public readonly engine: Engine) {}\n\n  /**\n   * 加载并激活场景。\n   * @param url - 场景路径\n   * @param destroyOldScene - 是否销毁旧场景信息\n   * @returns 场景请求\n   */\n  loadScene(url: string, destroyOldScene: boolean = true): AssetPromise<Scene> {\n    const scenePromise = this.engine.resourceManager.load<Scene>(url);\n    scenePromise.then((scene: Scene) => {\n      const oldScene: Scene = this._activeScene;\n      this.activeScene = scene;\n      if (oldScene && destroyOldScene) {\n        oldScene.destroy();\n      }\n    });\n    return scenePromise;\n  }\n\n  /**\n   * 合并场景，将源场景合并到目标场景。\n   * @remarks 合并后将使用 destScene 的全局信息,lightingMap 信息会进行合并。\n   * @param sourceScene - 源场景\n   * @param destScene - 目标场景\n   */\n  mergeScenes(sourceScene: Scene, destScene: Scene): void {\n    const oldRootEntities = sourceScene.rootEntities;\n    for (let i: number = 0, n: number = oldRootEntities.length; i < n; i++) {\n      destScene.addRootEntity(oldRootEntities[i]);\n    }\n  }\n}\n","import { Camera } from \"./Camera\";\nimport { DisorderedArray } from \"./DisorderedArray\";\nimport { Component } from \"./Component\";\nimport { RenderableComponent } from \"./RenderableComponent\";\nimport { Script } from \"./Script\";\n\n/**\n * 组件的管理员。\n */\nexport class ComponentsManager {\n  // Script\n  private _onStartScripts: DisorderedArray<Script> = new DisorderedArray();\n  private _onUpdateScripts: DisorderedArray<Script> = new DisorderedArray();\n  private _onLateUpdateScripts: DisorderedArray<Script> = new DisorderedArray();\n  private _destoryComponents: Script[] = [];\n\n  // Animation\n  private _onUpdateAnimations: DisorderedArray<Component> = new DisorderedArray();\n\n  // Render\n  private _renderers: DisorderedArray<RenderableComponent> = new DisorderedArray();\n  private _onUpdateRenderers: DisorderedArray<RenderableComponent> = new DisorderedArray();\n\n  // Delay dispose active/inActive Pool\n  private _componentsContainerPool: Component[][] = [];\n\n  addRenderer(renderer: RenderableComponent) {\n    renderer._rendererIndex = this._renderers.length;\n    this._renderers.add(renderer);\n  }\n\n  removeRenderer(renderer: RenderableComponent) {\n    const replaced = this._renderers.deleteByIndex(renderer._rendererIndex);\n    replaced && (replaced._rendererIndex = renderer._rendererIndex);\n    renderer._rendererIndex = -1;\n  }\n\n  addOnStartScript(script: Script) {\n    script._onStartIndex = this._onStartScripts.length;\n    this._onStartScripts.add(script);\n  }\n\n  removeOnStartScript(script: Script): void {\n    const replaced = this._onStartScripts.deleteByIndex(script._onStartIndex);\n    replaced && (replaced._onStartIndex = script._onStartIndex);\n    script._onStartIndex = -1;\n  }\n\n  addOnUpdateScript(script: Script) {\n    script._onUpdateIndex = this._onUpdateScripts.length;\n    this._onUpdateScripts.add(script);\n  }\n\n  removeOnUpdateScript(script: Script): void {\n    const replaced = this._onUpdateScripts.deleteByIndex(script._onUpdateIndex);\n    replaced && (replaced._onUpdateIndex = script._onUpdateIndex);\n    script._onUpdateIndex = -1;\n  }\n\n  addOnLateUpdateScript(script: Script): void {\n    script._onLateUpdateIndex = this._onLateUpdateScripts.length;\n    this._onLateUpdateScripts.add(script);\n  }\n\n  removeOnLateUpdateScript(script: Script): void {\n    const replaced = this._onLateUpdateScripts.deleteByIndex(script._onLateUpdateIndex);\n    replaced && (replaced._onLateUpdateIndex = script._onLateUpdateIndex);\n    script._onLateUpdateIndex = -1;\n  }\n\n  addOnUpdateAnimations(animation: Component): void {\n    //@ts-ignore\n    animation._onUpdateIndex = this._onUpdateAnimations.length;\n    this._onUpdateAnimations.add(animation);\n  }\n\n  removeOnUpdateAnimations(animation: Component): void {\n    //@ts-ignore\n    const replaced = this._onUpdateAnimations.deleteByIndex(animation._onUpdateIndex);\n    //@ts-ignore\n    replaced && (replaced._onUpdateIndex = animation._onUpdateIndex);\n    //@ts-ignore\n    animation._onUpdateIndex = -1;\n  }\n\n  addOnUpdateRenderers(renderer: RenderableComponent): void {\n    renderer._onUpdateIndex = this._onUpdateRenderers.length;\n    this._onUpdateRenderers.add(renderer);\n  }\n\n  removeOnUpdateRenderers(renderer: RenderableComponent): void {\n    const replaced = this._onUpdateRenderers.deleteByIndex(renderer._onUpdateIndex);\n    replaced && (replaced._onUpdateIndex = renderer._onUpdateIndex);\n    renderer._onUpdateIndex = -1;\n  }\n\n  addDestoryComponent(component): void {\n    this._destoryComponents.push(component);\n  }\n\n  callScriptOnStart(): void {\n    const onStartScripts = this._onStartScripts;\n    if (onStartScripts.length > 0) {\n      const elements = onStartScripts._elements;\n      // onStartScripts's length maybe add if you add some Script with addComponent() in some Script's onStart()\n      for (let i = 0; i < onStartScripts.length; i++) {\n        const script = elements[i];\n        script._started = true;\n        script._onStartIndex = -1;\n        script.onStart();\n      }\n      onStartScripts.length = 0;\n    }\n  }\n\n  callScriptOnUpdate(deltaTime): void {\n    const elements = this._onUpdateScripts._elements;\n    for (let i = this._onUpdateScripts.length - 1; i >= 0; --i) {\n      const element = elements[i];\n      if (element._started) {\n        element.onUpdate(deltaTime);\n      }\n    }\n  }\n\n  callScriptOnLateUpdate(deltaTime): void {\n    const elements = this._onLateUpdateScripts._elements;\n    for (let i = this._onLateUpdateScripts.length - 1; i >= 0; --i) {\n      const element = elements[i];\n      if (element._started) {\n        element.onLateUpdate(deltaTime);\n      }\n    }\n  }\n\n  callAnimationUpdate(deltaTime): void {\n    const elements = this._onUpdateAnimations._elements;\n    for (let i = this._onUpdateAnimations.length - 1; i >= 0; --i) {\n      //@ts-ignore\n      elements[i].update(deltaTime);\n    }\n  }\n\n  callRendererOnUpdate(deltaTime: number): void {\n    const elements = this._onUpdateRenderers._elements;\n    for (let i = this._onUpdateRenderers.length - 1; i >= 0; --i) {\n      elements[i].update(deltaTime);\n    }\n  }\n\n  callRender(camera: Camera): void {\n    const elements = this._renderers._elements;\n    for (let i = this._renderers.length - 1; i >= 0; --i) {\n      elements[i]._render(camera);\n    }\n  }\n\n  callComponentDestory(): void {\n    const destoryComponents = this._destoryComponents;\n    const length = destoryComponents.length;\n    if (length > 0) {\n      for (let i = length - 1; i >= 0; --i) {\n        destoryComponents[i].onDestroy();\n      }\n      destoryComponents.length = 0;\n    }\n  }\n\n  callCameraOnBeginRender(camera: Camera) {\n    const camComps = camera.entity._components;\n    for (let i = camComps.length - 1; i >= 0; --i) {\n      const camComp = camComps[i];\n      (camComp as any).onBeginRender && (camComp as any).onBeginRender(camera);\n    }\n  }\n\n  callCameraOnEndRender(camera: Camera) {\n    const camComps = camera.entity._components;\n    for (let i = camComps.length - 1; i >= 0; --i) {\n      const camComp = camComps[i];\n      (camComp as any).onBeginRender && (camComp as any).onEndRender(camera);\n    }\n  }\n\n  getActiveChangedTempList(): Component[] {\n    return this._componentsContainerPool.length ? this._componentsContainerPool.pop() : [];\n  }\n\n  putActiveChangedTempList(componentContainer: Component[]): void {\n    componentContainer.length = 0;\n    this._componentsContainerPool.push(componentContainer);\n  }\n}\n","import { Engine } from \"./Engine\";\nimport { Scene } from \"./Scene\";\n\n/**\n * 引擎功能特性插件基类\n * @class\n */\nexport class EngineFeature {\n  /**\n   * 引擎主循环运行之前的回调，用来预加载资源\n   * @param {Engine} engine\n   */\n  public preLoad(engine: Engine): void {}\n\n  /**\n   * 场景 Tick 之前的回调\n   * @param {Engine} engine\n   * @param {Scene} currentScene\n   */\n  public preTick(engine: Engine, currentScene: Scene): void {}\n\n  /**\n   * 场景 Tick 完成之后的回调\n   * @param {Engine} engine\n   */\n  public postTick(engine: Engine, currentScene: Scene): void {}\n\n  /**\n   * 引擎关闭的时候调用\n   * @param {Engine} engine\n   */\n  public shutdown(engine: Engine): void {}\n}\n","import { InternalAssetType, EngineObject } from \"../base\";\n\n/**\n * 使用引用计数管理的资源对象基类\n */\nexport class AssetObject extends EngineObject {\n  public type: InternalAssetType | string;\n\n  public name: string;\n  public cacheID: number;\n  public needRecreate: boolean;\n  public glAsset: any;\n}\n","import { Component } from \"./Component\";\nimport { Entity } from \"./Entity\";\n\n/**\n * Scene 访问者接口\n */\nexport abstract class SceneVisitor {}\n","import { Camera } from \"./Camera\";\nimport { Scene } from \"./Scene\";\n\n/**\n * 场景的功能特性插件基类\n * @class\n */\nexport abstract class SceneFeature {\n  /**\n   * 场景 Update 之前的回调\n   * @param {Scene} scene\n   */\n  public preUpdate(scene: Scene): void {}\n\n  /**\n   * 场景 Update 之后的回调\n   * @param {Scene} scene\n   */\n  public postUpdate(scene: Scene): void {}\n\n  /**\n   * 场景渲染前的回调\n   * @param scene\n   * @param camera\n   */\n  public preRender(scene: Scene, camera: Camera): void {}\n\n  /**\n   * 场景渲染后的回调\n   * @param scene\n   * @param camera\n   */\n  public postRender(scene: Scene, camera: Camera): void {}\n\n  /**\n   * 场景销毁的时候调用\n   * @param {Scene} scene\n   */\n  public destroy(scene: Scene): void {}\n}\n","import { Component } from \"./Component\";\nimport { Camera } from \"./Camera\";\n\n/**\n * 脚本类，可进行逻辑编写。\n */\nexport class Script extends Component {\n  /** @internal */\n  _started: boolean = false;\n  /** @internal */\n  _onStartIndex: number = -1;\n  /** @internal */\n  _onUpdateIndex: number = -1;\n  /** @internal */\n  _onLateUpdateIndex: number = -1;\n  /** @internal */\n  _onPreRenderIndex: number = -1;\n  /** @internal */\n  _onPostRenderIndex: number = -1;\n\n  /**\n   * 第一次触发可用状态时调用,只调用一次。\n   */\n  onAwake(): void {}\n\n  /**\n   * 触发为可用状态时调用。\n   */\n  onEnable(): void {}\n\n  /**\n   * 第一次执行帧级循环前调用，只调用一次。\n   */\n  onStart(): void {}\n\n  /**\n   * 主更新，逐帧调用。\n   * @param deltaTime - 帧间隔时间\n   */\n  onUpdate(deltaTime: number): void {}\n\n  /**\n   * 延迟更新，逐帧调用。\n   * @param deltaTime - 帧间隔时间\n   */\n  onLateUpdate(deltaTime: number): void {}\n\n  /**\n   * 相机渲染前调用，逐相机调用。\n   * @param camera - 当前渲染相机\n   */\n  onBeginRender(camera: Camera): void {}\n\n  /**\n   * 相机完成渲染后调用，逐相机调用。\n   * @param camera - 当前渲染相机\n   */\n  onEndRender(camera: Camera): void {}\n\n  /**\n   * 触发为禁用状态时调用。\n   */\n  onDisable(): void {}\n\n  /**\n   * 在被销毁帧的最后调用。\n   */\n  onDestroy(): void {}\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onAwake(): void {\n    this.onAwake();\n  }\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onEnable(): void {\n    const componentsManager = this.engine._componentsManager;\n    const prototype = Script.prototype;\n    if (!this._started) {\n      componentsManager.addOnStartScript(this);\n    }\n    if (this.onUpdate !== prototype.onUpdate) {\n      componentsManager.addOnUpdateScript(this);\n    }\n    if (this.onLateUpdate !== prototype.onLateUpdate) {\n      componentsManager.addOnLateUpdateScript(this);\n    }\n    this.onEnable();\n  }\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onDisable(): void {\n    const componentsManager = this.engine._componentsManager;\n    const prototype = Script.prototype;\n    /**\n     * use onStartIndex is more safe,\n     * even is not start, but maybe it still not in the queue,for example write \"entity.isActive = false\" in onWake().\n     */\n    if (this._onStartIndex !== -1) {\n      componentsManager.removeOnStartScript(this);\n    }\n    if (this.onUpdate !== prototype.onUpdate) {\n      componentsManager.removeOnUpdateScript(this);\n    }\n    if (this.onLateUpdate !== prototype.onLateUpdate) {\n      componentsManager.removeOnLateUpdateScript(this);\n    }\n    this.onDisable();\n  }\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onDestroy(): void {\n    this.engine._componentsManager.addDestoryComponent(this);\n  }\n}\n","import { LoadItem } from \"./LoadItem\";\nimport { AssetPromise } from \"./AssetPromise\";\nimport { RequestConfig, request } from \"./request\";\nimport { ResourceManager } from \"./ResourceManager\";\n/**\n * loader 抽象类。\n */\nexport abstract class Loader<T> {\n  request: <U>(url: string, config: RequestConfig) => AssetPromise<U> = request;\n  abstract load(item: LoadItem, resouceManager: ResourceManager): AssetPromise<T>;\n  constructor(public readonly useCache: boolean) {}\n}\n","/**\n * 资产类型。\n */\nexport enum AssetType {\n  /**\n   * 文本。\n   * @remarks 在资源管理器中不会根据 url 缓存。\n   */\n  Text = 0,\n  /**\n   * JSON。\n   * @remarks 在资源管理器中不会根据 url 缓存。\n   */\n  JSON = 1,\n  /**\n   * 缓冲。\n   * @remarks 在资源管理器中不会根据 url 缓存。\n   */\n  Buffer = 2,\n  /** 2D纹理。*/\n  Texture2D = 3,\n  /** 立方纹理。*/\n  TextureCube = 4,\n  /** 材质。*/\n  Material = 5,\n  /** 网格。*/\n  Mesh = 6,\n  /** 动画文件。*/\n  AnimationClip = 7,\n  /** 预设。*/\n  Perfab = 8, // 先走 GLTFLoader\n  /** 压缩纹理。*/\n  KTX = 9,\n  /** 立方压缩纹理。*/\n  KTXCube = 10\n  /** @todo 场景。*/\n  // Scene = 9\n}\n","import { Engine } from \"../Engine\";\nimport { AssetObject } from \"./AssetObject\";\n\n/**\n * 资产的基类，具有引用计数能力。\n */\nexport abstract class ReferenceObject extends AssetObject {\n  /** 是否忽略垃圾回收的检查,如果为 true ,将不受 ResourceManager.gc() 影响。*/\n  isGCIgnored: boolean = false;\n\n  protected _engine: Engine;\n  protected _gcPriority: number = 0;\n\n  private _referenceCount: number = 0;\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  get gcPriority(): number {\n    return this._gcPriority;\n  }\n\n  /**\n   * 被有效引用计数。\n   */\n  get referenceCount(): number {\n    return this._referenceCount;\n  }\n\n  /**\n   * 是否已销毁。\n   */\n  get destroyed(): boolean {\n    return this._destroyed;\n  }\n\n  protected constructor(engine?: Engine) {\n    super();\n    const resEngine = engine ?? Engine._getDefaultEngine();\n    if (!resEngine) throw \"asset must belone to an engine.\";\n    this._engine = resEngine;\n    resEngine.resourceManager._addReferenceObject(this.instanceId, this);\n  }\n\n  /**\n   * 销毁。\n   * @param force - 是否强制销毁,如果为 fasle 则 referenceCount = 0 可释放成功\n   * @returns 是否释放成功\n   */\n  destroy(force: boolean = false): boolean {\n    if (this._destroyed) return true;\n    if (!force && this._referenceCount !== 0) return false;\n\n    this.onDestroy();\n\n    this._engine.resourceManager._deleteAsset(this);\n    this._engine.resourceManager._deleteReferenceObject(this.instanceId);\n    this._destroyed = true;\n    this._engine = null;\n    return true;\n  }\n\n  /**\n   * 当资源真正销毁时调。交由子类重写\n   */\n  protected abstract onDestroy(): void;\n\n  /**\n   * @internal\n   */\n  _addToAssetManager(path: string): void {\n    this._engine.resourceManager._addAsset(path, this);\n  }\n\n  /**\n   * @private\n   */\n  _addReference(referenceCount: number): void {\n    this._referenceCount += referenceCount;\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { SceneFeature } from \"../SceneFeature\";\nimport { AmbientLight } from \"./AmbientLight\";\nimport { DirectLight } from \"./DirectLight\";\nimport { EnvironmentMapLight } from \"./EnvironmentMapLight\";\nimport { Light } from \"./Light\";\nimport { PointLight } from \"./PointLight\";\nimport { SpotLight } from \"./SpotLight\";\n\n/**\n * 判断场景中是否有灯光\n * @returns {boolean}\n * @private\n */\nexport function hasLight() {\n  return this.findFeature(LightFeature).visibleLights.length > 0;\n}\n\n/**\n * Scene Feature：在场景中添加灯光特性\n * @extends SceneFeature\n * @private\n */\nexport class LightFeature extends SceneFeature {\n  public visibleLights: Light[];\n\n  /**\n   * 获取光源种类的相应数量\n   * */\n  get lightSortAmount(): {\n    ambientLightCount: number;\n    directLightCount: number;\n    pointLightCount: number;\n    spotLightCount: number;\n    envMapLightCount: number;\n    useDiffuseEnv: boolean;\n    useSpecularEnv: boolean;\n  } {\n    let ambientLightCount = 0;\n    let directLightCount = 0;\n    let pointLightCount = 0;\n    let spotLightCount = 0;\n    let envMapLightCount = 0;\n    let useDiffuseEnv = false;\n    let useSpecularEnv = false;\n\n    let lights = this.visibleLights;\n    for (let i = 0, len = lights.length; i < len; i++) {\n      const light = lights[i];\n      if (light instanceof AmbientLight) {\n        ambientLightCount++;\n      } else if (light instanceof DirectLight) {\n        directLightCount++;\n      } else if (light instanceof PointLight) {\n        pointLightCount++;\n      } else if (light instanceof SpotLight) {\n        spotLightCount++;\n      } else if (light instanceof EnvironmentMapLight) {\n        envMapLightCount++;\n        useDiffuseEnv = light.useDiffuseMap;\n        useSpecularEnv = light.useSpecularMap;\n      }\n    }\n    return {\n      ambientLightCount,\n      directLightCount,\n      pointLightCount,\n      spotLightCount,\n      envMapLightCount,\n      useDiffuseEnv,\n      useSpecularEnv\n    };\n  }\n\n  constructor() {\n    super();\n    this.visibleLights = [];\n  }\n\n  /**\n   * 向当前场景注册一个灯光对象\n   * @param {Light} light 灯光对象\n   * @private\n   */\n  attachRenderLight(light: Light) {\n    const index = this.visibleLights.indexOf(light);\n    if (index == -1) {\n      this.visibleLights.push(light);\n    } else {\n      Logger.warn(\"Light already attached.\");\n    }\n  }\n\n  /**\n   * 从当前场景移除一个灯光对象\n   * @param {Light} light 灯光对象\n   * @private\n   */\n  detachRenderLight(light: Light) {\n    const index = this.visibleLights.indexOf(light);\n    if (index != -1) {\n      this.visibleLights.splice(index, 1);\n    }\n  }\n\n  /**\n   * 将灯光数据绑定到指定的材质中（指定 Uniform 的值）\n   * @param {Material} mtl 材质对象\n   * @private\n   */\n  bindMaterialValues(mtl) {\n    /**\n     * ambientLight 和 envMapLight 在 scene 中只用最后一个\n     * */\n    let ambientLightCount = 0;\n    let directLightCount = 0;\n    let pointLightCount = 0;\n    let spotLightCount = 0;\n    let envMapLightCount = 0;\n\n    let lights = this.visibleLights;\n    for (let i = 0, len = lights.length; i < len; i++) {\n      const light = lights[i];\n      if (light instanceof AmbientLight) {\n        light.bindMaterialValues(mtl, `u_ambientLight`);\n        ambientLightCount++;\n      } else if (light instanceof DirectLight) {\n        light.bindMaterialValues(mtl, `u_directLights[${directLightCount++}]`);\n      } else if (light instanceof PointLight) {\n        light.bindMaterialValues(mtl, `u_pointLights[${pointLightCount++}]`);\n      } else if (light instanceof SpotLight) {\n        light.bindMaterialValues(mtl, `u_spotLights[${spotLightCount++}]`);\n      } else if (light instanceof EnvironmentMapLight) {\n        light.bindMaterialValues(mtl, `u_envMapLight`);\n        envMapLightCount++;\n      }\n    }\n  }\n\n  /**\n   * 生成 Technique 所需的全部 uniform 定义\n   */\n  getUniformDefine() {\n    let uniforms = {};\n    let ambientLightCount = 0;\n    let directLightCount = 0;\n    let pointLightCount = 0;\n    let spotLightCount = 0;\n    let envMapLightCount = 0;\n\n    let lights = this.visibleLights;\n    for (let i = 0, len = lights.length; i < len; i++) {\n      const light = lights[i];\n      if (light instanceof AmbientLight && !ambientLightCount++) {\n        uniforms = { ...uniforms, ...AmbientLight.getUniformDefine(`u_ambientLight`) };\n      } else if (light instanceof DirectLight) {\n        uniforms = { ...uniforms, ...DirectLight.getUniformDefine(`u_directLights[${directLightCount++}]`) };\n      } else if (light instanceof PointLight) {\n        uniforms = { ...uniforms, ...PointLight.getUniformDefine(`u_pointLights[${pointLightCount++}]`) };\n      } else if (light instanceof SpotLight) {\n        uniforms = { ...uniforms, ...SpotLight.getUniformDefine(`u_spotLights[${spotLightCount++}]`) };\n      } else if (light instanceof EnvironmentMapLight && !envMapLightCount++) {\n        uniforms = { ...uniforms, ...EnvironmentMapLight.getUniformDefine(`u_envMapLight`) };\n      }\n    }\n    return uniforms;\n  }\n}\n","import { Vector3, Vector4, Matrix } from \"@alipay/o3-math\";\n\n/**\n * 一个点到一个平面的距离\n * @param {Vector4} plane - 平面方程\n * @param {Vector3} pt - 点的位置矢量\n * @private\n */\nexport function pointDistanceToPlane(plane: Vector4, pt: Vector3) {\n  return plane.x * pt.x + plane.y * pt.y + plane.z * pt.z + plane.w;\n}\n\n/**\n * 从列主序矩阵获取最大轴向的 scale\n * @param {Matrix} modelMatrix - Local to World矩阵\n * */\nexport function getMaxScaleByModelMatrix(modelMatrix: Matrix): number {\n  let m = modelMatrix.elements;\n  let scaleXSq = m[0] * m[0] + m[1] * m[1] + m[2] * m[2];\n  let scaleYSq = m[4] * m[4] + m[5] * m[5] + m[6] * m[6];\n  let scaleZSq = m[8] * m[8] + m[9] * m[9] + m[10] * m[10];\n  return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n}\n","import { Matrix } from \"@alipay/o3-math\";\nimport { AssetObject } from \"../asset/AssetObject\";\n\nlet skinID = 0;\n\n/**\n * mesh skin data, equal glTF skins define\n * @class\n */\nexport class Skin extends AssetObject {\n  public inverseBindMatrices: Matrix[];\n  public joints: string[];\n  public skeleton: string;\n  /**\n   * 构造函数\n   * @param {string} name 名称\n   */\n  constructor(name) {\n    super();\n\n    this.inverseBindMatrices = []; // inverse bind matrix array, element type: gl-matrix.mat4\n    this.joints = []; // joints name array, element type: string\n    this.skeleton = \"none\"; // root bone name\n  }\n}\n","/**\n * 渲染缓冲颜色格式枚举。\n */\nexport enum RenderBufferColorFormat {\n  /** RGB格式，每通道8 bits。*/\n  R8G8B8,\n  /** RGBA格式，每通道8 bits。*/\n  R8G8B8A8,\n  /** RGBA格式,每通道4 bits*/\n  R4G4B4A4,\n  /** RGBA格式,R通道5 bits，G通道5 bits，B通道5 bits， A通道1 bit。*/\n  R5G5B5A1,\n  /** RGB格式,R通道5 bits，G通道6 bits，B通道5 bits。*/\n  R5G6B5,\n  /** 透明格式，8 bits。*/\n  Alpha8,\n  /** RGBA格式,每通道16 bits。*/\n  R16G16B16A16,\n  /** RGBA格式，每个通道32 bits。*/\n  R32G32B32A32\n}\n","/**\n * 渲染缓冲深度格式枚举。\n */\nexport enum RenderBufferDepthFormat {\n  /** 深度缓冲，自动选择精度 */\n  Depth = 0,\n  /** 深度模版缓冲，自动选择精度 */\n  DepthStencil = 1,\n  /** 模板缓冲 */\n  Stencil = 2,\n\n  /** 强制16位深度缓冲 */\n  Depth16 = 3,\n  /** 强制24位深度缓冲 */\n  Depth24 = 4,\n  /** 强制32位深度缓冲 */\n  Depth32 = 5,\n  /** 强制24位深度缓冲+8位模版缓冲 */\n  Depth24Stencil8 = 6,\n  /** 强制32位深度缓冲+8位模版缓冲 */\n  Depth32Stencil8 = 7\n}\n","/**\n * 立方体纹理面。\n */\nexport enum TextureCubeFace {\n  /** X轴正方向。 */\n  PositiveX = 0,\n  /** X轴负方向。 */\n  NegativeX = 1,\n  /** Y轴正方向。 */\n  PositiveY = 2,\n  /** Y轴负方向。 */\n  NegativeY = 3,\n  /** Z轴正方向。 */\n  PositiveZ = 4,\n  /** Z轴负方向。 */\n  NegativeZ = 5\n}\n","/**\n * 纹理的过滤模式。\n */\nexport enum TextureFilterMode {\n  /** 点过滤。*/\n  Point = 0,\n  /** 双线性过滤。*/\n  Bilinear = 1,\n  /** 三线性过滤。*/\n  Trilinear = 2\n}\n","/**\n * 纹理格式枚举。\n */\nexport enum TextureFormat {\n  /** RGB格式，每通道8 bits。*/\n  R8G8B8,\n  /** RGBA格式，每通道8 bits。*/\n  R8G8B8A8,\n  /** RGBA格式,每通道4 bits*/\n  R4G4B4A4,\n  /** RGBA格式,R通道5 bits，G通道5 bits，B通道5 bits， A通道1 bit。*/\n  R5G5B5A1,\n  /** RGB格式,R通道5 bits，G通道6 bits，B通道5 bits。*/\n  R5G6B5,\n  /** 透明格式，8 bits。*/\n  Alpha8,\n  /** RGBA格式，每个通道32 bits。*/\n  R32G32B32A32,\n  /** RGB压缩格式的压缩格式。*/\n  DXT1,\n  /** RGBA压缩格式的压缩格式。*/\n  DXT5,\n  /** RGB压缩格式，4 bits每像素。*/\n  ETC1_RGB,\n  /** RGB压缩格式，4 bits每像素。*/\n  ETC2_RGB,\n  /** RGBA压缩格式，5 bits每像素,RGB 4 bit,Alpha 1 bit。*/\n  ETC2_RGBA5,\n  /** RGB压缩格式，8 bits每像素。*/\n  ETC2_RGBA8,\n  /** RGB压缩格式，2 bits每像素。*/\n  PVRTC_RGB2,\n  /** RGBA压缩格式，2 bits每像素。*/\n  PVRTC_RGBA2,\n  /** RGB压缩格式，4 bits每像素。*/\n  PVRTC_RGB4,\n  /** RGBA压缩格式，4 bits每像素。*/\n  PVRTC_RGBA4,\n  /** RGB(A)压缩格式，128 bits 每4x4像素块。*/\n  ASTC_4x4,\n  /** RGB(A)压缩格式，128 bits 每5x5像素块。*/\n  ASTC_5x5,\n  /** RGB(A)压缩格式，128 bits 每6x6像素块。*/\n  ASTC_6x6,\n  /** RGB(A)压缩格式，128 bits 每8x8像素块。*/\n  ASTC_8x8,\n  /** RGB(A)压缩格式，128 bits 每10x10像素块。*/\n  ASTC_10x10,\n  /** RGB(A)压缩格式，128 bits 每12x12像素块。*/\n  ASTC_12x12\n}\n","/**\n * 纹理的循环模式。\n */\nexport enum TextureWrapMode {\n  /** 截取模式，超过纹理边界使用边缘像素的颜色。 */\n  Clamp = 0,\n  /** 重复模式，超过纹理边界会循环平铺。*/\n  Repeat = 1,\n  /** 镜像重复模式，超过纹理边界会镜像循环平铺。*/\n  Mirror = 2\n}\n","import { DataType, UniformSemantic } from \"../base/Constant\";\n\nexport interface RenderTargetConfig {\n  width?: number;\n  height?: number;\n  clearColor?;\n  enableDepthTexture?: boolean;\n  isCube?: boolean;\n  /** WebGL2 时，可以开启硬件层的 MSAA */\n  samples?: number;\n  isMulti?: boolean;\n  /** color Buffer 输出是否要 float 浮点类型 */\n  colorBufferFloat?: boolean;\n}\n\nexport type Rect = { x: number; y: number; width: number; height: number };\n\nexport type TechniqueStates = {\n  enable?: GLenum[];\n  disable?: GLenum[];\n  functions?: {\n    [key: string]: any;\n  };\n};\n\nexport interface Attributes {\n  [key: string]: {\n    name: string;\n    semantic: string;\n    type: DataType;\n  };\n}\n\nexport interface Uniforms {\n  [key: string]: {\n    name: string;\n    semantic?: UniformSemantic | string;\n    type: DataType;\n  };\n}\n\nexport interface TextureFormatDetail {\n  internalFormat: GLint;\n  baseFormat?: GLenum;\n  dataType?: GLenum;\n  isCompressed: boolean;\n  attachment?: GLenum;\n}\n\n/**\n * @deprecated\n */\nexport enum GLCompressedTextureInternalFormat {\n  // astc\n  RGBA_ASTC_4X4_KHR = 0x93b0,\n  RGBA_ASTC_5X4_KHR = 0x93b1,\n  RGBA_ASTC_5X5_KHR = 0x93b2,\n  RGBA_ASTC_6X5_KHR = 0x93b3,\n  RGBA_ASTC_6X6_KHR = 0x93b4,\n  RGBA_ASTC_8X5_KHR = 0x93b5,\n  RGBA_ASTC_8X6_KHR = 0x93b6,\n  RGBA_ASTC_8X8_KHR = 0x93b7,\n  RGBA_ASTC_10X5_KHR = 0x93b8,\n  RGBA_ASTC_10X6_KHR = 0x93b9,\n  RGBA_ASTC_10X8_KHR = 0x93ba,\n  RGBA_ASTC_10X10_KHR = 0x93bb,\n  RGBA_ASTC_12X10_KHR = 0x93bc,\n  RGBA_ASTC_12X12_KHR = 0x93bd,\n  SRGB8_ALPHA8_ASTC_4X4_KHR = 0x93d0,\n  SRGB8_ALPHA8_ASTC_5X4_KHR = 0x93d1,\n  SRGB8_ALPHA8_ASTC_5X5_KHR = 0x93d2,\n  SRGB8_ALPHA8_ASTC_6X5_KHR = 0x93d3,\n  SRGB8_ALPHA8_ASTC_6X6_KHR = 0x93d4,\n  SRGB8_ALPHA8_ASTC_8X5_KHR = 0x93d5,\n  SRGB8_ALPHA8_ASTC_8X6_KHR = 0x93d6,\n  SRGB8_ALPHA8_ASTC_8X8_KHR = 0x93d7,\n  SRGB8_ALPHA8_ASTC_10X5_KHR = 0x93d8,\n  SRGB8_ALPHA8_ASTC_10X6_KHR = 0x93d9,\n  SRGB8_ALPHA8_ASTC_10X8_KHR = 0x93da,\n  SRGB8_ALPHA8_ASTC_10X10_KHR = 0x93db,\n  SRGB8_ALPHA8_ASTC_12X10_KHR = 0x93dc,\n  SRGB8_ALPHA8_ASTC_12X12_KHR = 0x93dd,\n\n  // etc1\n  RGB_ETC1_WEBGL = 0x8d64,\n\n  // etc2\n  R11_EAC = 0x9270,\n  SIGNED_R11_EAC = 0x9271,\n  RG11_EAC = 0x9272,\n  SIGNED_RG11_EAC = 0x9273,\n  RGB8_ETC2 = 0x9274,\n  SRGB8_ETC2 = 0x9275,\n  RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\n  SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\n  RGBA8_ETC2_EAC = 0x9278,\n  SRGB8_ALPHA8_ETC2_EAC = 0x9279,\n\n  // pvrtc\n  RGB_PVRTC_4BPPV1_IMG = 0x8c00,\n  RGB_PVRTC_2BPPV1_IMG = 0x8c01,\n  RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\n  RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\n\n  // s3tc\n  RGB_S3TC_DXT1_EXT = 0x83f0,\n  RGBA_S3TC_DXT1_EXT = 0x83f1,\n  RGBA_S3TC_DXT3_EXT = 0x83f2,\n  RGBA_S3TC_DXT5_EXT = 0x83f3\n}\n","import { ReferenceObject } from \"../asset/ReferenceObject\";\nimport { GLCapabilityType } from \"../base/Constant\";\nimport { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { GLCompressedTextureInternalFormat, TextureFormatDetail } from \"../material/type\";\nimport {\n  RenderBufferColorFormat,\n  RenderBufferDepthFormat,\n  TextureCubeFace,\n  TextureFilterMode,\n  TextureFormat,\n  TextureWrapMode\n} from \"./enums\";\n/**\n * 纹理的基类，包含了纹理相关类的一些公共功能。\n */\n\nexport abstract class Texture extends ReferenceObject {\n  /** @internal */\n  static _readFrameBuffer: WebGLFramebuffer = null;\n\n  /** @internal */\n  static _isPowerOf2(v: number): boolean {\n    return (v & (v - 1)) === 0;\n  }\n\n  /**\n   * @internal\n   * 根据 TextureFormat 获取具体信息。\n   */\n  static _getFormatDetail(\n    format: TextureFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case TextureFormat.R8G8B8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB8 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R8G8B8A8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA8 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R4G4B4A4:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA4 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_4_4_4_4,\n          isCompressed: false\n        };\n      case TextureFormat.R5G5B5A1:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB5_A1 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_5_5_5_1,\n          isCompressed: false\n        };\n      case TextureFormat.R5G6B5:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB565 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_SHORT_5_6_5,\n          isCompressed: false\n        };\n      case TextureFormat.Alpha8:\n        return {\n          internalFormat: gl.ALPHA,\n          baseFormat: gl.ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R32G32B32A32:\n        return {\n          internalFormat: gl.RGBA32F,\n          baseFormat: gl.RGBA,\n          dataType: gl.FLOAT,\n          isCompressed: false\n        };\n      case TextureFormat.DXT1:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_S3TC_DXT1_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.DXT5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.ETC1_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_ETC1_WEBGL,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA8_ETC2_EAC,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_4x4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_4X4_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_5x5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_5X5_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_6x6:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_6X6_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_8x8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_8X8_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_10x10:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_10X10_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_12x12:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_12X12_KHR,\n          isCompressed: true\n        };\n      default:\n        throw new Error(`this TextureFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _getRenderBufferColorFormatDetail(\n    format: RenderBufferColorFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case RenderBufferColorFormat.R8G8B8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB8 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R8G8B8A8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA8 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R4G4B4A4:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA4 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_4_4_4_4,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R5G5B5A1:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB5_A1 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_5_5_5_1,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R5G6B5:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB565 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_SHORT_5_6_5,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.Alpha8:\n        return {\n          internalFormat: gl.ALPHA,\n          baseFormat: gl.ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R16G16B16A16:\n        return {\n          internalFormat: gl.RGBA16F,\n          baseFormat: gl.RGBA,\n          dataType: gl.HALF_FLOAT,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R32G32B32A32:\n        return {\n          internalFormat: gl.RGBA32F,\n          baseFormat: gl.RGBA,\n          dataType: gl.FLOAT,\n          isCompressed: false\n        };\n      default:\n        throw new Error(`this RenderBufferColorFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * @internal\n   * In WebGL 1, internalformat must be the same as baseFormat when call texImage2D\n   */\n  static _getRenderBufferDepthFormatDetail(\n    format: RenderBufferDepthFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case RenderBufferDepthFormat.Depth:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT32F : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: isWebGL2 ? gl.FLOAT : gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.DepthStencil:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Stencil:\n        return {\n          internalFormat: gl.STENCIL_INDEX8,\n          baseFormat: gl.STENCIL_ATTACHMENT,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false,\n          attachment: gl.STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth16:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT16 : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth24:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT24,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth32:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT32F,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.FLOAT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth24Stencil8:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        return {\n          internalFormat: gl.DEPTH32F_STENCIL8,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.FLOAT_32_UNSIGNED_INT_24_8_REV,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      default:\n        throw new Error(`this RenderBufferDepthFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * @internal\n   * 检测是否支持相应纹理格式。\n   */\n  static _supportTextureFormat(format: TextureFormat, rhi): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case TextureFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferColorFormat(format: RenderBufferColorFormat, rhi): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case RenderBufferColorFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferFloat) || !rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n      case RenderBufferColorFormat.R16G16B16A16:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferHalfFloat) || !rhi.canIUse(GLCapabilityType.textureHalfFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferDepthFormat(format: RenderBufferDepthFormat, rhi, isTexture: boolean): boolean {\n    const isWebGL2: boolean = rhi.isWebGL2;\n    let isSupported = true;\n\n    if (isTexture && !rhi.canIUse(GLCapabilityType.depthTexture)) {\n      return false;\n    }\n\n    switch (format) {\n      case RenderBufferDepthFormat.Stencil:\n        {\n          isSupported = false;\n        }\n        break;\n      case RenderBufferDepthFormat.Depth24:\n      case RenderBufferDepthFormat.Depth32:\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        {\n          if (!isWebGL2) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  public _glTexture: WebGLTexture;\n\n  /** @internal */\n  public _formatDetail: TextureFormatDetail;\n\n  protected _width: number;\n  protected _height: number;\n\n  /** @internal */\n  protected _rhi;\n  /** @internal */\n  protected _target: GLenum;\n  /** @internal */\n  protected _mipmap: boolean;\n  /** @internal */\n  protected _mipmapCount: number;\n\n  private _wrapModeU: TextureWrapMode;\n  private _wrapModeV: TextureWrapMode;\n  private _filterMode: TextureFilterMode;\n  private _anisoLevel: number = 1;\n\n  /**\n   * 纹理宽。\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * 纹理高。\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * 纹理坐标 U 的循环模式。\n   */\n  get wrapModeU(): TextureWrapMode {\n    return this._wrapModeU;\n  }\n\n  set wrapModeU(value: TextureWrapMode) {\n    if (value === this._wrapModeU) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._wrapModeU = value;\n\n    this._bind();\n    this._setWrapMode(value, gl.TEXTURE_WRAP_S);\n    this._unbind();\n  }\n\n  /**\n   * 纹理坐标 V 的循环模式。\n   */\n  get wrapModeV(): TextureWrapMode {\n    return this._wrapModeV;\n  }\n\n  set wrapModeV(value: TextureWrapMode) {\n    if (value === this._wrapModeV) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._wrapModeV = value;\n\n    this._bind();\n    this._setWrapMode(value, gl.TEXTURE_WRAP_T);\n    this._unbind();\n  }\n\n  /**\n   * 多级纹理的数量。\n   */\n  get mipmapCount(): number {\n    return this._mipmapCount;\n  }\n\n  /**\n   * 纹理的过滤模式。\n   */\n  get filterMode(): TextureFilterMode {\n    return this._filterMode;\n  }\n\n  set filterMode(value: TextureFilterMode) {\n    if (value === this._filterMode) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._filterMode = value;\n\n    this._bind();\n    switch (value) {\n      case TextureFilterMode.Point:\n        gl.texParameteri(this._target, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(this._target, gl.TEXTURE_MIN_FILTER, this._mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST);\n        break;\n      case TextureFilterMode.Bilinear:\n        gl.texParameteri(this._target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(this._target, gl.TEXTURE_MIN_FILTER, this._mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR);\n        break;\n      case TextureFilterMode.Trilinear:\n        gl.texParameteri(this._target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(this._target, gl.TEXTURE_MIN_FILTER, this._mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n        break;\n    }\n    this._unbind();\n  }\n\n  /**\n   * 各向异性过滤等级。\n   */\n  get anisoLevel(): number {\n    return this._anisoLevel;\n  }\n\n  set anisoLevel(value: number) {\n    const max = this._rhi.capability.maxAnisoLevel;\n\n    if (value > max) {\n      Logger.warn(`anisoLevel:${value}, exceeds the limit and is automatically downgraded to:${max}`);\n      value = max;\n    }\n\n    if (value < 1) {\n      Logger.warn(`anisoLevel:${value}, must be greater than 0, and is automatically downgraded to 1`);\n      value = 1;\n    }\n\n    if (value === this._anisoLevel) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext & EXT_texture_filter_anisotropic = this._rhi.gl;\n\n    this._anisoLevel = value;\n\n    this._bind();\n    gl.texParameterf(this._target, gl.TEXTURE_MAX_ANISOTROPY_EXT, value);\n    this._unbind();\n  }\n\n  /**\n   * 根据第0级数据生成多级纹理。\n   */\n  public generateMipmaps(): void {\n    if (!this._mipmap) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._bind();\n    gl.generateMipmap(this._target);\n    this._unbind();\n  }\n\n  onDestroy() {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    gl.deleteTexture(this._glTexture);\n    this._glTexture = null;\n    this._formatDetail = null;\n    // TODO: delete\n    this._rhi = null;\n  }\n\n  /** @internal */\n  public _bind(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    gl.bindTexture(this._target, this._glTexture);\n  }\n\n  /** @internal */\n  public _unbind(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    gl.bindTexture(this._target, null);\n  }\n\n  /**\n   * @internal\n   * 根据指定区域获得像素颜色缓冲。\n   * @param face - 如果是立方体纹理，可以选择读取第几个面\n   * @param x - 区域起始X坐标\n   * @param y - 区域起始Y坐标\n   * @param width - 区域宽\n   * @param height - 区域高\n   * @param out - 颜色数据缓冲\n   */\n  protected _getPixelBuffer(\n    face: TextureCubeFace | null,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    out: ArrayBufferView\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    if (!Texture._readFrameBuffer) {\n      Texture._readFrameBuffer = gl.createFramebuffer();\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, Texture._readFrameBuffer);\n\n    if (face != null) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        this._glTexture,\n        0\n      );\n    } else {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._glTexture, 0);\n    }\n    gl.readPixels(x, y, width, height, baseFormat, dataType, out);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  /**\n   * @internal\n   * 预开辟 mipmap 显存\n   */\n  protected _initMipmap(isCube: boolean): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2 = this._rhi.isWebGL2;\n    let { internalFormat, baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n\n    if (isWebGL2) {\n      gl.texStorage2D(this._target, this._mipmapCount, internalFormat, this._width, this._height);\n    } else {\n      // In WebGL 1, internalformat must be the same as baseFormat\n      if (baseFormat !== internalFormat) {\n        internalFormat = baseFormat;\n      }\n\n      if (!isCube) {\n        for (let i = 0; i < this._mipmapCount; i++) {\n          const width = Math.max(1, this._width >> i);\n          const height = Math.max(1, this._height >> i);\n\n          gl.texImage2D(this._target, i, internalFormat, width, height, 0, baseFormat, dataType, null);\n        }\n      } else {\n        for (let i = 0; i < this._mipmapCount; i++) {\n          const size = Math.max(1, this._width >> i);\n          for (let faceIndex = 0; faceIndex < 6; faceIndex++) {\n            gl.texImage2D(\n              gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n              i,\n              internalFormat,\n              size,\n              size,\n              0,\n              baseFormat,\n              dataType,\n              null\n            );\n          }\n        }\n      }\n    }\n\n    this._unbind();\n  }\n\n  /**\n   * @internal\n   * 获取相应size的最大mip级别,rounding down\n   * http://download.nvidia.com/developer/Papers/2005/NP2_Mipmapping/NP2_Mipmap_Creation.pdf\n   */\n  protected _getMaxMiplevel(size: number): number {\n    return Math.floor(Math.log2(size));\n  }\n\n  /**\n   * @internal\n   */\n  protected _getMipmapCount(): number {\n    return this._mipmap ? Math.floor(Math.log2(Math.max(this._width, this._height))) + 1 : 1;\n  }\n\n  /**\n   * @internal\n   */\n  private _setWrapMode(value: TextureWrapMode, pname: GLenum): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n\n    if (\n      !isWebGL2 &&\n      value !== TextureWrapMode.Clamp &&\n      (!Texture._isPowerOf2(this._width) || !Texture._isPowerOf2(this._height))\n    ) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for REPEAT or MIRRORED_REPEAT in WebGL1,and has automatically downgraded to CLAMP_TO_EDGE\"\n      );\n      value = TextureWrapMode.Clamp;\n    }\n\n    switch (value) {\n      case TextureWrapMode.Clamp:\n        gl.texParameteri(this._target, pname, gl.CLAMP_TO_EDGE);\n        break;\n      case TextureWrapMode.Repeat:\n        gl.texParameteri(this._target, pname, gl.REPEAT);\n        break;\n      case TextureWrapMode.Mirror:\n        gl.texParameteri(this._target, pname, gl.MIRRORED_REPEAT);\n        break;\n    }\n  }\n\n  // TODO: delete\n  constructor(engine?: Engine) {\n    super(engine);\n\n    this._gcPriority = 900;\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { TextureFilterMode, TextureFormat, TextureWrapMode } from \"./enums\";\nimport { Texture } from \"./Texture\";\n\n/**\n * 2D纹理。\n */\nexport class Texture2D extends Texture {\n  private _format: TextureFormat;\n  /** 向下兼容 WebGL1.0。 */\n  private _compressedMipFilled: number = 0;\n\n  /**\n   * 纹理的格式。\n   */\n  get format(): TextureFormat {\n    return this._format;\n  }\n\n  /**\n   * 构建一个2D纹理。\n   * @param width - 宽\n   * @param height - 高\n   * @param format - 格式，默认值 `TextureFormat.R8G8B8A8`\n   * @param mipmap - 是否使用多级纹理\n   * @param engine - 可选引擎\n   */\n  constructor(\n    width: number,\n    height: number,\n    format: TextureFormat = TextureFormat.R8G8B8A8,\n    mipmap: boolean = true,\n    engine?: Engine\n  ) {\n    super();\n    engine = engine || Engine._getDefaultEngine();\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (mipmap && !isWebGL2 && (!Texture._isPowerOf2(width) || !Texture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    const formatDetail = Texture._getFormatDetail(format, gl, isWebGL2);\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = formatDetail;\n    this._rhi = rhi;\n    this._target = gl.TEXTURE_2D;\n    this._mipmap = mipmap;\n    this._width = width;\n    this._height = height;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    (formatDetail.isCompressed && !isWebGL2) || this._initMipmap(false);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Repeat;\n  }\n\n  /**\n   * 通过颜色缓冲数据、指定区域和纹理层级设置像素，同样适用于压缩格式。\n   * 如果为WebGL1.0平台且纹理格式为压缩格式，第一次上传必须填满纹理。\n   * @param pixelBuffer - 颜色缓冲数据\n   * @param mipLevel - 纹理层级\n   * @param x - 数据起始X坐标\n   * @param y - 数据起始Y坐标\n   * @param width - 数据宽度。如果为空的话 width 为 mipLevel 对应的宽度减去 x , mipLevel 对应的宽度为 Math.max(1, this.width >> mipLevel)\n   * @param height - 数据高度。如果为空的话 height 为 mipLevel 对应的高度减去 y , mipLevel 对应的高度为 Math.max(1, this.height >> mipLevel)\n   */\n  setPixelBuffer(\n    colorBuffer: ArrayBufferView,\n    mipLevel: number = 0,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipWidth = Math.max(1, this._width >> mipLevel);\n    const mipHeight = Math.max(1, this._height >> mipLevel);\n\n    x = x || 0;\n    y = y || 0;\n    width = width || mipWidth - x;\n    height = height || mipHeight - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedMipFilled & mipBit) {\n        gl.compressedTexSubImage2D(this._target, mipLevel, x, y, width, height, internalFormat, colorBuffer);\n      } else {\n        gl.compressedTexImage2D(this._target, mipLevel, internalFormat, width, height, 0, colorBuffer);\n        this._compressedMipFilled |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(this._target, mipLevel, x, y, width, height, baseFormat, dataType, colorBuffer);\n    }\n\n    this._unbind();\n  }\n\n  /**\n   * 通过图源、指定区域和纹理层级设置像素。\n   * @param imageSource - 纹理源\n   * @param mipLevel - 多级纹理层级\n   * @param flipY - 是否翻转Y轴\n   * @param premultiplyAlpha - 是否预乘透明通道\n   * @param x - 区域起始X坐标\n   * @param y - 区域起始Y坐标\n   */\n  setImageSource(\n    imageSource: TexImageSource,\n    mipLevel: number = 0,\n    flipY: boolean = false,\n    premultiplyAlpha: boolean = false,\n    x?: number,\n    y?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(this._target, mipLevel, x || 0, y || 0, baseFormat, dataType, imageSource);\n    this._unbind();\n  }\n\n  /**\n   * 根据指定区域获得像素颜色缓冲。\n   * @param x - 区域起始X坐标\n   * @param y - 区域起始Y坐标\n   * @param width - 区域宽\n   * @param height - 区域高\n   * @param out - 颜色数据缓冲\n   */\n  getPixelBuffer(x: number, y: number, width: number, height: number, out: ArrayBufferView): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(null, x, y, width, height, out);\n  }\n}\n","/**\n * 缓冲的用途。\n */\nexport enum BufferUsage {\n  /** 缓冲区的内容修改一次，使用多次。*/\n  Static,\n  /** 缓冲区的内容经常被修改，使用多次。*/\n  Dynamic,\n  /** 缓冲区的内容修改一次，使用几次。*/\n  Stream\n}\n","/**\n * 顶点元素格式。\n */\nexport enum VertexElementFormat {\n  /** 32-bit 浮点数。*/\n  Single,\n  /** 二维 32-bit 浮点数。*/\n  Vector2,\n  /** 三维 32-bit 浮点数。*/\n  Vector3,\n  /** 四维 32-bit 浮点数。*/\n  Vector4,\n  /** 四维 8-bit 整型,范围是 [-128,127]。*/\n  Byte4,\n  /** 四维 8-bit 无符号整型，范围是 [0,255]。*/\n  UByte4,\n  /** 四维 8-bit 归一化整型，范围是 [-1,1]。*/\n  NormalizedByte4,\n  /** 四维 8-bit 归一化无符号整型，范围是 [0,1]。*/\n  NormalizedUByte4,\n  /** 二维 16-bit 整型，范围是 [-32768, 32767]。*/\n  Short2,\n  /** 二维 16-bit 无符号整型，范围是 [0, 65535]。*/\n  UShort2,\n  /** 二维 16-bit 归一化整型，范围是 [-1, 1]。*/\n  NormalizedShort2,\n  /** 二维 16-bit 归一化无符号整型，范围是 [0, 1]。*/\n  NormalizedUShort2,\n  /** 四维 16-bit 整型，范围是 [-32768, 32767]。*/\n  Short4,\n  /** 四维 16-bit 无符号整型，范围是 [0, 65535]。*/\n  UShort4,\n  /** 四维 16-bit 归一化整型，范围是 [-1, 1]。*/\n  NormalizedShort4,\n  /** 四维 16-bit 归一化无符号整型，范围是 [0, 1]。*/\n  NormalizedUShort4\n}\n","/**\n * 索引格式。\n */\nexport enum IndexFormat {\n  /** 8 位。*/\n  UInt8,\n  /** 16 位。*/\n  UInt16,\n  /** 32 位。*/\n  UInt32\n}\n","import { BufferUsage } from \"./enums/BufferUsage\";\nimport { VertexElementFormat } from \"./enums/VertexElementFormat\";\nimport { DataType } from \"../base/Constant\";\nimport { IndexFormat } from \"./enums/IndexFormat\";\n\nexport interface ElementInfo {\n  size: number;\n  type: DataType;\n}\n\nexport class BufferUtil {\n  /**\n   * @internal\n   */\n  static _getGLBufferUsage(gl: WebGLRenderingContext, bufferUsage: BufferUsage): number {\n    switch (bufferUsage) {\n      case BufferUsage.Static:\n        return gl.STATIC_DRAW;\n      case BufferUsage.Dynamic:\n        return gl.DYNAMIC_DRAW;\n      case BufferUsage.Stream:\n        return gl.STREAM_DRAW;\n    }\n  }\n\n  static _getGLIndexType(indexFormat: IndexFormat): DataType {\n    switch (indexFormat) {\n      case IndexFormat.UInt8:\n        return DataType.UNSIGNED_BYTE;\n      case IndexFormat.UInt16:\n        return DataType.UNSIGNED_SHORT;\n      case IndexFormat.UInt32:\n        return DataType.UNSIGNED_INT;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _getElementInfo(format: VertexElementFormat): ElementInfo {\n    let size: number;\n    let type: DataType;\n    switch (format) {\n      case VertexElementFormat.Single:\n        size = 1;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Vector2:\n        size = 2;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Vector3:\n        size = 3;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Vector4:\n        size = 4;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Byte4:\n        size = 4;\n        type = DataType.UNSIGNED_BYTE;\n        break;\n      case VertexElementFormat.Short2:\n        size = 2;\n        type = DataType.SHORT;\n        break;\n      case VertexElementFormat.Short4:\n        size = 4;\n        type = DataType.SHORT;\n        break;\n      case VertexElementFormat.UShort2:\n        size = 2;\n        type = DataType.UNSIGNED_SHORT;\n        break;\n      case VertexElementFormat.UShort4:\n        size = 4;\n        type = DataType.UNSIGNED_SHORT;\n        break;\n      default:\n        break;\n    }\n    return { size, type };\n  }\n}\n","/**\n * 绘制基元拓扑。\n */\nexport enum PrimitiveTopology {\n  /** 绘制一系列点。*/\n  Points = 0,\n  /** 绘制一系列单独线段，每两个点作为一条线段的端点。*/\n  Lines = 1,\n  /** 绘制一系列线段，上一点连接下一点，并且最后一点与第一个点相连。*/\n  LineLoop = 2,\n  /** 绘制一系列线段，上一点连接下一点。*/\n  LineStrip = 3,\n  /** 绘制一系列三角形, 每三个点绘制一个三角形。*/\n  Triangles = 4,\n  /** 绘制一个三角带。*/\n  TriangleStrip = 5,\n  /** 绘制一个三角扇。*/\n  TriangleFan = 6\n}\n","import { IndexFormat } from \"./enums/IndexFormat\";\nimport { IndexBuffer } from \"./IndexBuffer\";\n\n/**\n * 索引缓冲绑定。\n */\nexport class IndexBufferBinding {\n  /** @internal */\n  _buffer: IndexBuffer;\n  /** @internal */\n  _format: IndexFormat;\n\n  /**\n   * 索引缓冲。\n   */\n  get buffer(): IndexBuffer {\n    return this._buffer;\n  }\n\n  /**\n   * 索引格式。\n   */\n  get format(): IndexFormat {\n    return this._format;\n  }\n\n  /**\n   * 创建索引缓冲绑定。\n   * @param buffer - 索引缓冲\n   * @param format - 索引格式\n   */\n  constructor(buffer: IndexBuffer, format: IndexFormat) {\n    this._buffer = buffer;\n    this._format = format;\n  }\n}\n","import { AssetObject } from \"../asset/AssetObject\";\nimport { BoundingSphere } from \"../bounding-info/BoudingSphere\";\nimport { OBB } from \"../bounding-info/OBB\";\nimport { BufferUtil } from \"../graphic/BufferUtil\";\nimport { IndexFormat } from \"../graphic/enums/IndexFormat\";\nimport { PrimitiveTopology } from \"../graphic/enums/PrimitiveTopology\";\nimport { IndexBuffer } from \"../graphic/IndexBuffer\";\nimport { IndexBufferBinding } from \"../graphic/IndexBufferBinding\";\nimport { VertexBufferBinding } from \"../graphic/VertexBufferBinding\";\nimport { VertexElement } from \"../graphic/VertexElement\";\n\n// TODO Destroy VAO and Buffer，ref to rhi refactor\n/**\n * primitive(triangles, lines) data, vbo+indices, equal glTF meshes.primitives define\n * @private\n */\nexport class Primitive extends AssetObject {\n  private static _primitiveID: number = 0;\n\n  /** 绘制模式。*/\n  primitiveTopology: PrimitiveTopology = PrimitiveTopology.Triangles;\n  /** 绘制偏移。*/\n  drawOffset: number = 0;\n  /** 绘制数量。*/\n  drawCount: number = 0;\n  /** 实例数量，0 表示关闭实例渲染。*/\n  instanceCount: number = 0;\n\n  _vertexElementMap: object = {};\n\n  _glIndexType: number;\n\n  private _vertexBufferBindings: VertexBufferBinding[] = [];\n  private _indexBufferBinding: IndexBufferBinding;\n  private _vertexElements: VertexElement[] = [];\n\n  /**\n   * 顶点缓冲绑定信息集合。\n   */\n  get vertexBufferBindings(): Readonly<VertexBufferBinding[]> {\n    return this._vertexBufferBindings;\n  }\n\n  /**\n   * 顶点元素集合。\n   */\n  get vertexElements(): Readonly<VertexElement[]> {\n    return this._vertexElements;\n  }\n\n  /**\n   * 索引缓冲绑定信息。\n   */\n  get indexBufferBinding(): IndexBufferBinding {\n    return this._indexBufferBinding;\n  }\n\n  readonly id: number;\n  material = null;\n  materialIndex: number;\n  targets: any[] = [];\n  boundingBox: OBB = null;\n  boundingSphere: BoundingSphere = null;\n  isInFrustum: boolean = true;\n\n  get attributes() {\n    return this._vertexElementMap;\n  }\n\n  constructor(name?: string) {\n    super();\n    this.id = Primitive._primitiveID++;\n    this.name = name;\n  }\n\n  /**\n   * 设置顶点缓冲绑定信息。\n   * @param bufferBindings - 缓冲绑定集合\n   * @param firstIndex - 第一个绑定索引\n   */\n  setVertexBufferBindings(bufferBindings: VertexBufferBinding | VertexBufferBinding[], firstIndex: number = 0): void {\n    const bindings = this._vertexBufferBindings;\n    const multiBindings = <VertexBufferBinding[]>bufferBindings;\n    const isArray = multiBindings.length !== undefined;\n    if (isArray) {\n      const count = multiBindings.length;\n      const needLength = firstIndex + count;\n      bindings.length < needLength && (bindings.length = needLength);\n      for (let i = 0; i < count; i++) {\n        this._vertexBufferBindings[firstIndex + i] = multiBindings[i];\n      }\n    } else {\n      const singleBinding = <VertexBufferBinding>bufferBindings;\n      const needLength = firstIndex + 1;\n      bindings.length < needLength && (bindings.length = needLength);\n      this._vertexBufferBindings[firstIndex] = singleBinding;\n    }\n  }\n\n  /**\n   * 设置索引缓冲绑定。\n   * @param buffer - 索引缓冲\n   * @param format - 索引缓冲格式\n   */\n  setIndexBufferBinding(buffer: IndexBuffer, format: IndexFormat): void {\n    const binding = this._indexBufferBinding;\n    if (binding) {\n      binding._buffer = buffer;\n      binding._format = format;\n    } else {\n      this._indexBufferBinding = new IndexBufferBinding(buffer, format);\n    }\n    this._glIndexType = BufferUtil._getGLIndexType(format);\n  }\n\n  /**\n   * 添加顶点元素集合。\n   * @param elements\n   */\n  addVertexElements(elements: VertexElement | VertexElement[]): void {\n    const isArray = (<VertexElement[]>elements).length !== undefined;\n    if (isArray) {\n      const addElements = <VertexElement[]>elements;\n      for (let i = 0, n = addElements.length; i < n; i++) {\n        this._addVertexElement(addElements[i]);\n      }\n    } else {\n      this._addVertexElement(<VertexElement>elements);\n    }\n  }\n\n  removeVertexElements(vertexElements: VertexElement | VertexElement[]): void {}\n\n  // updateWeightsIndices(indices: number[]) {\n  //   if (this.targets.length !== indices.length || indices.length === 0) {\n  //     return;\n  //   }\n  //   for (let i = 0; i < indices.length; i++) {\n  //     const currentIndex = indices[i];\n  //     Object.keys(this.targets[i]).forEach((key: string) => {\n  //       const semantic = this.targets[i][key].name;\n  //       const index = this.targets[currentIndex][key].vertexBufferIndex;\n  //       // this.updateAttribBufferIndex(semantic, index);\n  //     });\n  //   }\n  // }\n\n  // updateAttribBufferIndex(semantic: string, index: number) {\n  //   this.vertexAttributes[semantic].vertexBufferIndex = index;\n  // }\n\n  destroy() {\n    //TODO:这里销毁不应该直接销毁Buffer，按照以前的机制这里暂时这样处理。\n    const vertexBufferBindings = this._vertexBufferBindings;\n    if (vertexBufferBindings) {\n      for (let i = 0, n = vertexBufferBindings.length; i < n; i++) {\n        const vertexBufferBinding = vertexBufferBindings[i];\n        if (vertexBufferBinding) {\n          vertexBufferBinding.buffer.destroy();\n        }\n      }\n      this._vertexBufferBindings = null;\n    }\n\n    const indexBufferBinding = this._indexBufferBinding;\n    if (indexBufferBinding) {\n      indexBufferBinding.buffer.destroy();\n      this._indexBufferBinding = null;\n    }\n\n    this._vertexElements = null;\n    this._vertexElementMap = null;\n\n    if (this.glAsset) {\n      this.glAsset.finalize();\n      this.glAsset = null;\n    }\n  }\n\n  private _addVertexElement(element: VertexElement): void {\n    const { semantic } = element;\n    if (this._vertexElementMap[semantic]) {\n      throw \"the same semantic already exists.\";\n    }\n    this._vertexElementMap[semantic] = element;\n    this._vertexElements.push(element);\n  }\n}\n","import { Material } from \"./Material\";\n\n/**\n * 管理多个 Technique, 根据渲染的需要自动切换内部的 Technique 对象\n * @remarks 典型应用：Shadow Mapping 算法中，场景使用一个统一的 replace material 渲染深度贴图\n */\nexport class ComplexMaterial extends Material {\n  private _techniquePool;\n\n  /**\n   * 构造函数\n   * @param {string} name 名称\n   */\n  constructor(name) {\n    super(name);\n\n    this._techniquePool = {}; // technique pool: [key]->value\n  }\n\n  /**\n   * 在绘制之前，准备好内部的 Technique 对象\n   */\n  prepareDrawing(context, component, primitive) {\n    const camera = context.camera;\n    const tech = this._requireTechnique(camera, component, primitive);\n\n    if (tech) {\n      this._technique = tech;\n      super.prepareDrawing(context, component, primitive);\n    }\n  }\n\n  /**\n   * 清空所有Technique。\n   */\n  clearTechniques() {\n    this._techniquePool = {};\n  }\n\n  /**\n   * 根据当前对象的渲染需求，取得一个可用的 Technique\n   */\n  _requireTechnique(camera, component, primitive) {\n    const key = this._getTechniqueKey(camera, component, primitive);\n    let tech = this._techniquePool[key];\n    if (!tech) {\n      tech = this._generateTechnique(camera, component, primitive);\n      this._techniquePool[key] = tech;\n    }\n\n    return tech;\n  }\n\n  /**\n   * 由派生类去实现，针对某个特定的对象，生成一个新的它所需要的 Technique 对象\n   */\n  _generateTechnique(camera, component, primitive) {}\n\n  /**\n   * 按照当前对象是否为 skin、骨骼个数，生成一个 Technique 的索引字符串\n   */\n  _getTechniqueKey(camera, component, primitive) {\n    const isSkin = component.skin != null;\n    const jontCount = isSkin ? component.skin.joints.length : 0;\n\n    let key = isSkin ? \"skin_\" : \"static_\";\n    if (isSkin) {\n      key += \"jont\" + jontCount;\n    }\n\n    return key;\n  }\n}\n","import pbr_common_frag_define from \"./common_frag_define.glsl\";\nimport pbr_util_frag_define from \"./util_frag_define.glsl\";\n\n/** IBL define */\nimport pbr_envmap_light_frag_define from \"./envmap_light_frag_define.glsl\";\n\n/** prop & texture */\nimport pbr_base_frag_define from \"./base_frag_define.glsl\";\nimport pbr_texture_frag_define from \"./texture_frag_define.glsl\";\n\n/** runtime context */\nimport pbr_runtime_frag_define from \"./runtime_frag_define.glsl\";\n\n// todo: generalize\nimport pbr_normal_frag_define from \"./normal_frag_define.glsl\";\n\n// todo: BxDF\nimport pbr_brdf_cook_torrance_frag_define from \"./brdf_cook_torrance_frag_define.glsl\";\n\n/** direct + IBL */\nimport pbr_direct_irradiance_frag_define from \"./direct_irradiance_frag_define.glsl\";\nimport pbr_ibl_specular_frag_define from \"./ibl_specular_frag_define.glsl\";\nimport pbr_ibl_diffuse_frag_define from \"./ibl_diffuse_frag_define.glsl\";\n\nimport pbr_begin_frag from \"./begin_frag.glsl\";\nimport pbr_direct_irradiance_frag from \"./direct_irradiance_frag.glsl\";\nimport pbr_ibl_diffuse_frag from \"./ibl_diffuse_frag.glsl\";\nimport pbr_ibl_specular_frag from \"./ibl_specular_frag.glsl\";\nimport pbr_end_frag from \"./end_frag.glsl\";\n\nexport default {\n  pbr_common_frag_define,\n  pbr_util_frag_define,\n\n  pbr_envmap_light_frag_define,\n\n  pbr_base_frag_define,\n  pbr_texture_frag_define,\n\n  pbr_runtime_frag_define,\n\n  pbr_normal_frag_define,\n\n  pbr_brdf_cook_torrance_frag_define,\n\n  pbr_direct_irradiance_frag_define,\n  pbr_ibl_specular_frag_define,\n  pbr_ibl_diffuse_frag_define,\n\n  pbr_begin_frag,\n  pbr_direct_irradiance_frag,\n  pbr_ibl_diffuse_frag,\n  pbr_ibl_specular_frag,\n  pbr_end_frag\n};\n","import common from \"./common.glsl\";\nimport common_vert from \"./common_vert.glsl\";\nimport common_frag from \"./common_frag.glsl\";\n\nimport color_share from \"./color_share.glsl\";\nimport normal_share from \"./normal_share.glsl\";\nimport uv_share from \"./uv_share.glsl\";\nimport worldpos_share from \"./worldpos_share.glsl\";\nimport shadow_share from \"./shadow_share.glsl\";\nimport fog_share from \"./fog_share.glsl\";\n\nimport begin_normal_vert from \"./begin_normal_vert.glsl\";\nimport begin_position_vert from \"./begin_position_vert.glsl\";\n\nimport morph_target_vert from \"./morph_target_vert.glsl\";\n\nimport position_vert from \"./position_vert.glsl\";\nimport color_vert from \"./color_vert.glsl\";\nimport normal_vert from \"./normal_vert.glsl\";\nimport skinning_vert from \"./skinning_vert.glsl\";\nimport uv_vert from \"./uv_vert.glsl\";\nimport worldpos_vert from \"./worldpos_vert.glsl\";\nimport shadow_vert from \"./shadow_vert.glsl\";\nimport morph_vert from \"./morph_vert.glsl\";\nimport fog_vert from \"./fog_vert.glsl\";\n\nimport ambient_light_frag from \"./ambient_light_frag.glsl\";\nimport direct_light_frag from \"./direct_light_frag.glsl\";\nimport point_light_frag from \"./point_light_frag.glsl\";\nimport spot_light_frag from \"./spot_light_frag.glsl\";\nimport mobile_material_frag from \"./mobile_material_frag.glsl\";\nimport fog_frag from \"./fog_frag.glsl\";\n\nimport begin_mobile_frag from \"./begin_mobile_frag.glsl\";\nimport begin_normal_frag from \"./begin_normal_frag.glsl\";\nimport begin_viewdir_frag from \"./begin_viewdir_frag.glsl\";\n\nimport mobile_blinnphong_frag from \"./mobile_blinnphong_frag.glsl\";\nimport mobile_lambert_frag from \"./mobile_lambert_frag.glsl\";\n\nimport noise_common from \"./noise_common.glsl\";\nimport noise_cellular_2D from \"./noise_cellular_2D.glsl\";\nimport noise_cellular_2x2 from \"./noise_cellular_2x2.glsl\";\nimport noise_cellular_2x2x2 from \"./noise_cellular_2x2x2.glsl\";\nimport noise_cellular_3D from \"./noise_cellular_3D.glsl\";\nimport noise_cellular from \"./noise_cellular.glsl\";\nimport noise_perlin_2D from \"./noise_perlin_2D.glsl\";\nimport noise_perlin_3D from \"./noise_perlin_3D.glsl\";\nimport noise_perlin_4D from \"./noise_perlin_4D.glsl\";\nimport noise_perlin from \"./noise_perlin.glsl\";\nimport noise_psrd_2D from \"./noise_psrd_2D.glsl\";\nimport noise_simplex_2D from \"./noise_simplex_2D.glsl\";\nimport noise_simplex_3D_grad from \"./noise_simplex_3D_grad.glsl\";\nimport noise_simplex_3D from \"./noise_simplex_3D.glsl\";\nimport noise_simplex_4D from \"./noise_simplex_4D.glsl\";\nimport noise_simplex from \"./noise_simplex.glsl\";\n\nimport perturbation_share from \"./perturbation_share.glsl\";\nimport perturbation_frag from \"./perturbation_frag.glsl\";\nimport refraction_share from \"./refraction_share.glsl\";\nimport refraction_frag from \"./refraction_frag.glsl\";\n\nimport clipPlane_vert_define from \"./clipPlane_vert_define.glsl\";\nimport clipPlane_vert from \"./clipPlane_vert.glsl\";\nimport clipPlane_frag_define from \"./clipPlane_frag_define.glsl\";\nimport clipPlane_frag from \"./clipPlane_frag.glsl\";\n\nimport gamma_frag from \"./gamma_frag.glsl\";\n\nimport PBRShaderLib from \"./pbr\";\nimport oit_frag from \"./oit/oit_frag.glsl\";\nimport oit_frag_define from \"./oit/oit_frag_define.glsl\";\n\nexport const ShaderLib = {\n  common,\n  common_vert,\n  common_frag,\n\n  color_share,\n  normal_share,\n  uv_share,\n  worldpos_share,\n  shadow_share,\n  fog_share,\n\n  begin_normal_vert,\n  begin_position_vert,\n\n  morph_target_vert,\n\n  position_vert,\n  color_vert,\n  normal_vert,\n  skinning_vert,\n  uv_vert,\n  worldpos_vert,\n  shadow_vert,\n  morph_vert,\n  fog_vert,\n\n  ambient_light_frag,\n  direct_light_frag,\n  point_light_frag,\n  spot_light_frag,\n  mobile_material_frag,\n  fog_frag,\n\n  begin_mobile_frag,\n  begin_normal_frag,\n  begin_viewdir_frag,\n\n  mobile_blinnphong_frag,\n  mobile_lambert_frag,\n\n  noise_common,\n  noise_cellular_2D,\n  noise_cellular_2x2,\n  noise_cellular_2x2x2,\n  noise_cellular_3D,\n  noise_cellular,\n  noise_perlin_2D,\n  noise_perlin_3D,\n  noise_perlin_4D,\n  noise_perlin,\n  noise_psrd_2D,\n  noise_simplex_2D,\n  noise_simplex_3D_grad,\n  noise_simplex_3D,\n  noise_simplex_4D,\n  noise_simplex,\n\n  perturbation_share,\n  perturbation_frag,\n  refraction_share,\n  refraction_frag,\n\n  clipPlane_vert_define,\n  clipPlane_vert,\n  clipPlane_frag_define,\n  clipPlane_frag,\n\n  gamma_frag,\n\n  oit_frag,\n  oit_frag_define,\n\n  ...PBRShaderLib\n};\n\nexport function InjectShaderSlices(obj) {\n  Object.assign(ShaderLib, obj);\n}\n","import { ShaderLib, InjectShaderSlices } from \"./ShaderLib\";\nimport { Logger } from \"../base/Logger\";\n\nclass ShaderFactory {\n  /**\n   * GLSL 版本\n   * @param {string} version - \"100\" | \"300 es\"\n   * */\n  static parseVersion(version: string = \"100\") {\n    return `#version ${version}\\n`;\n  }\n\n  static parsePrecision(vertP: string, fragP: string, compileVert?: boolean) {\n    const downgrade = \"mediump\";\n\n    return `\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n          precision ${compileVert ? vertP : fragP} float;\n          precision ${compileVert ? vertP : fragP} int;\n\n          #define O3_VERTEX_PRECISION ${vertP}\n          #define O3_FRAGMENT_PRECISION ${fragP}\n        #else\n          precision ${downgrade} float;\n          precision ${downgrade} int;\n\n          #define O3_VERTEX_PRECISION ${downgrade}\n          #define O3_FRAGMENT_PRECISION ${downgrade}\n        #endif\n      `;\n  }\n\n  static parseShaderName(name) {\n    return `#define O3_SHADER_NAME ${name}\\n`;\n  }\n\n  static parseAttributeMacros(macros) {\n    return (\n      \"#define O3_ATTRIBUTE_MACROS_START\\n\" +\n      macros.map((m) => `#define ${m}\\n`).join(\"\") +\n      \"#define O3_ATTRIBUTE_MACROS_END\\n\"\n    );\n  }\n\n  static parseCustomMacros(macros) {\n    return (\n      \"#define O3_CUSTOM_MACROS_START\\n\" +\n      macros.map((m) => `#define ${m}\\n`).join(\"\") +\n      \"#define O3_CUSTOM_MACROS_END\\n\"\n    );\n  }\n\n  static parseShader(src) {\n    return ShaderFactory.parseIncludes(src);\n  }\n\n  static parseIncludes(src) {\n    const regex = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n    function replace(match, slice) {\n      var replace = ShaderLib[slice];\n\n      if (replace === undefined) {\n        Logger.error(`Shader slice \"${match.trim()}\" not founded.`);\n        return \"\";\n      }\n\n      return ShaderFactory.parseIncludes(replace);\n    }\n\n    return src.replace(regex, replace);\n  }\n\n  static InjectShaderSlices(slices) {\n    InjectShaderSlices(slices);\n  }\n\n  /**\n   * 相应版本的 extension\n   * @param {string[]} extensions - such as [\"GL_EXT_shader_texture_lod\"]\n   * */\n  static parseExtension(extensions: string[]) {\n    return (\n      `#define O3_EXTENSION_START\\n` +\n      extensions.map((e) => `#extension ${e} : enable\\n`).join(\"\") +\n      `#define O3_EXTENSION_END\\n`\n    );\n  }\n\n  /**\n   * 切换低版本 GLSL 到 GLSL 300 es\n   * @param {string} shader - code\n   * @param {boolean} isFrag - 是否为片元着色器。\n   * */\n  static convertTo300(shader: string, isFrag?: boolean) {\n    const isGLSL300 = shader.includes(\"#version 300 es\");\n\n    // 如果本来就是新版本着色器，则无需转换。\n    if (isGLSL300) return shader;\n\n    /** 替换版本 */\n    shader = shader.replace(/#version 100/, \"#version 300 es\");\n    /** 修饰符替换 */\n    shader = shader.replace(/\\battribute\\b/g, \"in\");\n    shader = shader.replace(/\\bvarying\\b/g, isFrag ? \"in\" : \"out\");\n\n    /** 内置变量替换 */\n    shader = shader.replace(/\\btexture(2D|Cube)\\s*\\(/g, \"texture(\");\n    shader = shader.replace(/\\btexture(2D|Cube)LodEXT\\s*\\(/g, \"textureLod(\");\n    if (isFrag) {\n      const isMRT = /\\bgl_FragData\\[.+?\\]/g.test(shader);\n      if (isMRT) {\n        shader = shader.replace(/\\bgl_FragColor\\b/g, \"gl_FragData[0]\");\n        const result = shader.match(/\\bgl_FragData\\[.+?\\]/g);\n        shader = this.replaceMRTShader(shader, result);\n      } else {\n        shader = shader.replace(/void\\s+?main\\s*\\(/g, `out vec4 glFragColor;\\nvoid main(`);\n        shader = shader.replace(/\\bgl_FragColor\\b/g, \"glFragColor\");\n      }\n    }\n\n    return shader;\n  }\n\n  /**\n   * 返回相应 shaderCode 中的 draw buffer 长度\n   * @param shader - shader code\n   */\n  static getMaxDrawBuffers(shader: string): number {\n    const mrtIndexSet = new Set();\n    const result = shader.match(/\\bgl_FragData\\[.+?\\]/g) || [];\n\n    for (let i = 0; i < result.length; i++) {\n      const res = result[i].match(/\\bgl_FragData\\[(.+?)\\]/);\n      mrtIndexSet.add(res[1]);\n    }\n\n    return mrtIndexSet.size;\n  }\n\n  /**\n   * 1. 兼容 gl_FragColor 和 gl_FragData 同时存在的报错\n   * */\n  static compatible(fragmentShader: string) {\n    const hasFragData = /\\bgl_FragData\\[.+?\\]/g.test(fragmentShader);\n    if (hasFragData) {\n      fragmentShader = fragmentShader.replace(/\\bgl_FragColor\\b/g, \"gl_FragData[0]\");\n    }\n    return fragmentShader;\n  }\n\n  private static replaceMRTShader(shader: string, result: string[]): string {\n    let declaration = \"\";\n    const mrtIndexSet = new Set();\n\n    for (let i = 0; i < result.length; i++) {\n      const res = result[i].match(/\\bgl_FragData\\[(.+?)\\]/);\n      mrtIndexSet.add(res[1]);\n    }\n\n    mrtIndexSet.forEach((index) => {\n      declaration += `layout(location=${index}) out vec4 fragOutColor${index};\\n`;\n    });\n    declaration += `void main(`;\n\n    shader = shader.replace(/\\bgl_FragData\\[(.+?)\\]/g, \"fragOutColor$1\");\n\n    shader = shader.replace(/void\\s+?main\\s*\\(/g, declaration);\n    return shader;\n  }\n}\n\nexport { ShaderFactory };\n","/**\n * 定义 VertexBuffer 或 IndexBuffer 在 SetData 时如何刷新。\n */\nexport enum SetDataOptions {\n  /** 可覆盖部分 GPU 正在使用的数据，并保证正确的渲染效果。*/\n  None,\n  /** 完全丢弃之前的缓冲，返回一块新的缓冲块并不影响之前使用缓冲的渲染。*/\n  Discard\n  ///** 需要保证不会覆盖 GPU 正在使用的数据，setData 后可立即返回并不中断渲染。*/\n  //NoOverwrite\n}\n","import { Engine } from \"../Engine\";\nimport { HardwareRenderer } from \"../HardwareRenderer\";\nimport { BufferUsage } from \"./enums/BufferUsage\";\nimport { IndexFormat } from \"./enums/IndexFormat\";\nimport { BufferUtil } from \"./BufferUtil\";\nimport { SetDataOptions } from \"./enums/SetDataOptions\";\n\n/**\n * 索引缓冲。\n */\nexport class IndexBuffer {\n  _nativeBuffer: WebGLBuffer;\n  _glBufferUsage: number;\n\n  private _hardwareRenderer: HardwareRenderer;\n  private _engine: Engine;\n  private _bufferUsage: BufferUsage;\n  private _byteLength: number;\n\n  /**\n   * 引擎。\n   */\n  get engine(): Engine {\n    return this._engine;\n  }\n\n  /**\n   * 长度,以字节为单位。\n   */\n  get byteLength(): number {\n    return this._byteLength;\n  }\n\n  /**\n   * 索引缓冲用途。\n   */\n  get bufferUsage(): BufferUsage {\n    return this._bufferUsage;\n  }\n\n  /**\n   * 创建索引缓冲。\n   * @param engine - 引擎\n   * @param byteLength - 长度，字节为单位\n   * @param bufferUsage - 索引缓冲用途\n   */\n  constructor(engine: Engine, byteLength: number, bufferUsage?: BufferUsage);\n\n  /**\n   * 创建索引缓冲。\n   * @param engine - 引擎\n   * @param data - 所以缓冲数据\n   * @param bufferUsage - 索引缓冲用途\n   */\n  constructor(engine: Engine, data: ArrayBuffer | ArrayBufferView, bufferUsage?: BufferUsage);\n\n  constructor(\n    engine: Engine,\n    byteLengthOrData: number | ArrayBuffer | ArrayBufferView,\n    bufferUsage: BufferUsage = BufferUsage.Static\n  ) {\n    this._engine = engine;\n    this._bufferUsage = bufferUsage;\n\n    const hardwareRenderer = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = hardwareRenderer.gl;\n    const glBufferUsage = BufferUtil._getGLBufferUsage(gl, bufferUsage);\n\n    this._nativeBuffer = gl.createBuffer();\n    this._hardwareRenderer = hardwareRenderer;\n    this._glBufferUsage = glBufferUsage;\n\n    this.bind();\n    if (typeof byteLengthOrData === \"number\") {\n      this._byteLength = byteLengthOrData;\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, byteLengthOrData, glBufferUsage);\n    } else {\n      this._byteLength = byteLengthOrData.byteLength;\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, byteLengthOrData, glBufferUsage);\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  /**\n   * 绑定。\n   */\n  bind(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._nativeBuffer);\n  }\n\n  /**\n   * 设置索引数据。\n   * @param data - 索引数据\n   */\n  setData(data: ArrayBuffer | ArrayBufferView): void;\n\n  /**\n   * 设置索引数据。\n   * @param data - 索引数据\n   * @param bufferByteOffset - 缓冲偏移，以字节为单位\n   */\n  setData(data: ArrayBuffer | ArrayBufferView, bufferByteOffset: number): void;\n\n  /**\n   * 设置索引数据。\n   * @param data - 索引数据\n   * @param bufferByteOffset - 缓冲偏移，以字节为单位\n   * @param dataOffset - 数据偏移\n   * @param dataLength - 数据长度\n   */\n  setData(data: ArrayBuffer | ArrayBufferView, bufferByteOffset: number, dataOffset: number, dataLength: number): void;\n\n  /**\n   * 设置索引数据。\n   * @param data - 索引数据\n   * @param bufferByteOffset - 缓冲偏移，以字节为单位\n   * @param dataOffset - 数据偏移\n   * @param dataLength - 数据长度\n   * @param options - 操作选项\n   */\n  setData(\n    data: ArrayBuffer | ArrayBufferView,\n    bufferByteOffset: number,\n    dataOffset: number,\n    dataLength: number,\n    options: SetDataOptions\n  ): void;\n\n  setData(\n    data: ArrayBuffer | ArrayBufferView,\n    bufferByteOffset: number = 0,\n    dataOffset: number = 0,\n    dataLength?: number,\n    options: SetDataOptions = SetDataOptions.None\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    const isWebGL2: boolean = this._hardwareRenderer.isWebGL2;\n    this.bind();\n\n    if (options === SetDataOptions.Discard) {\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._byteLength, this._glBufferUsage);\n    }\n\n    const byteSize = (<Uint8Array>data).BYTES_PER_ELEMENT || 1; //TypeArray is BYTES_PER_ELEMENT , unTypeArray is 1\n    const dataByteLength = byteSize * dataLength;\n    if (dataOffset !== 0 || dataByteLength < data.byteLength) {\n      const isArrayBufferView = (<ArrayBufferView>data).byteOffset !== undefined;\n      if (isWebGL2 && isArrayBufferView) {\n        gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, bufferByteOffset, <ArrayBufferView>data, dataOffset, dataLength);\n      } else {\n        const subData = new Uint8Array(\n          isArrayBufferView ? (<ArrayBufferView>data).buffer : <ArrayBuffer>data,\n          dataOffset * byteSize,\n          dataByteLength\n        );\n        gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, bufferByteOffset, subData);\n      }\n    } else {\n      gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, bufferByteOffset, data);\n    }\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  }\n\n  /**\n   * 获取索引数据。\n   * @param data - 索引输出数据\n   */\n  getData(data: ArrayBufferView): void;\n\n  /**\n   * 获取索引数据。\n   * @param data - 索引输出数据\n   * @param bufferByteOffset - 缓冲读取偏移\n   */\n  getData(data: ArrayBufferView, bufferByteOffset: number): void;\n\n  /**\n   * 获取索引数据。\n   * @param data - 索引输出数据\n   * @param bufferByteOffset - 缓冲读取偏移\n   * @param dataOffset - 输出偏移\n   * @param dataLength - 输出长度\n   */\n  getData(data: ArrayBufferView, bufferByteOffset: number, dataOffset: number, dataLength: number): void;\n\n  getData(data: ArrayBufferView, bufferByteOffset: number = 0, dataOffset: number = 0, dataLength?: number): void {\n    const isWebGL2: boolean = this._hardwareRenderer.isWebGL2;\n\n    if (isWebGL2) {\n      const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n      this.bind();\n      gl.getBufferSubData(gl.ELEMENT_ARRAY_BUFFER, bufferByteOffset, data, dataOffset, dataLength);\n    } else {\n      throw \"IndexBuffer is write-only on WebGL1.0 platforms.\";\n    }\n  }\n\n  /**\n   * 销毁。\n   */\n  destroy(): void {\n    if (this._nativeBuffer) {\n      const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n      gl.deleteBuffer(this._nativeBuffer);\n      this._nativeBuffer = null;\n      this._engine = null;\n      this._hardwareRenderer = null;\n    }\n  }\n\n  /**\n   * @deprecated\n   */\n  resize(byteLength: number) {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n\n    this.bind();\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, byteLength, this._glBufferUsage);\n    this._byteLength = byteLength;\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { HardwareRenderer } from \"../HardwareRenderer\";\nimport { BufferUtil } from \"./BufferUtil\";\nimport { BufferUsage } from \"./enums/BufferUsage\";\nimport { SetDataOptions } from \"./enums/SetDataOptions\";\n\n/**\n * 顶点缓冲。\n */\nexport class VertexBuffer {\n  _glBufferUsage: number;\n  _nativeBuffer: WebGLBuffer;\n\n  private _hardwareRenderer: HardwareRenderer;\n  private _engine: Engine;\n  private _byteLength: number;\n  private _bufferUsage: BufferUsage;\n\n  /**\n   * 引擎。\n   */\n  get engine(): Engine {\n    return this._engine;\n  }\n\n  /**\n   * 长度,以字节为单位。\n   */\n  get byteLength(): number {\n    return this._byteLength;\n  }\n\n  /**\n   * 顶点缓冲用途\n   */\n  get bufferUsage(): BufferUsage {\n    return this._bufferUsage;\n  }\n\n  /**\n   * 创建顶点缓冲。\n   * @param engine - 引擎\n   * @param byteLength - 长度，字节为单位\n   * @param bufferUsage - 顶点缓冲用途\n   */\n  constructor(engine: Engine, byteLength: number, bufferUsage?: BufferUsage);\n\n  /**\n   * 创建顶点缓冲。\n   * @param engine - 引擎\n   * @param data - 数据\n   * @param bufferUsage - 顶点缓冲用途\n   */\n  constructor(engine: Engine, data: ArrayBuffer | ArrayBufferView, bufferUsage?: BufferUsage);\n\n  constructor(\n    engine: Engine,\n    byteLengthOrData: number | ArrayBuffer | ArrayBufferView,\n    bufferUsage: BufferUsage = BufferUsage.Static\n  ) {\n    this._engine = engine;\n    this._bufferUsage = bufferUsage;\n\n    const hardwareRenderer = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = hardwareRenderer.gl;\n    const glBufferUsage = BufferUtil._getGLBufferUsage(gl, bufferUsage);\n\n    this._nativeBuffer = gl.createBuffer();\n    this._hardwareRenderer = hardwareRenderer;\n    this._glBufferUsage = glBufferUsage;\n\n    this.bind();\n    if (typeof byteLengthOrData === \"number\") {\n      this._byteLength = byteLengthOrData;\n      gl.bufferData(gl.ARRAY_BUFFER, byteLengthOrData, glBufferUsage);\n    } else {\n      this._byteLength = byteLengthOrData.byteLength;\n      gl.bufferData(gl.ARRAY_BUFFER, byteLengthOrData, glBufferUsage);\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  /**\n   * 绑定。\n   */\n  bind(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._nativeBuffer);\n  }\n\n  /**\n   * 设置顶点数据。\n   * @param data - 顶点数据\n   */\n  setData(data: ArrayBuffer | ArrayBufferView): void;\n\n  /**\n   * 设置顶点数据。\n   * @param data - 顶点数据\n   * @param bufferByteOffset - 缓冲偏移，以字节为单位\n   */\n  setData(data: ArrayBuffer | ArrayBufferView, bufferByteOffset: number): void;\n\n  /**\n   * 设置顶点数据。\n   * @param data - 顶点数据\n   * @param bufferByteOffset - 缓冲偏移，以字节为单位\n   * @param dataOffset - 数据偏移\n   * @param dataLength - 数据长度\n   */\n  setData(data: ArrayBuffer | ArrayBufferView, bufferByteOffset: number, dataOffset: number, dataLength: number): void;\n\n  /**\n   * 设置顶点数据。\n   * @param data - 顶点数据\n   * @param bufferByteOffset - 缓冲偏移，以字节为单位\n   * @param dataOffset - 数据偏移\n   * @param dataLength - 数据长度\n   * @param options - 操作选项\n   */\n  setData(\n    data: ArrayBuffer | ArrayBufferView,\n    bufferByteOffset: number,\n    dataOffset: number,\n    dataLength: number,\n    options: SetDataOptions\n  ): void;\n\n  setData(\n    data: ArrayBuffer | ArrayBufferView,\n    bufferByteOffset: number = 0,\n    dataOffset: number = 0,\n    dataLength?: number,\n    options: SetDataOptions = SetDataOptions.None\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    const isWebGL2: boolean = this._hardwareRenderer.isWebGL2;\n    this.bind();\n\n    if (options === SetDataOptions.Discard) {\n      gl.bufferData(gl.ARRAY_BUFFER, this._byteLength, this._glBufferUsage);\n    }\n\n    const byteSize = (<Uint8Array>data).BYTES_PER_ELEMENT || 1; //TypeArray is BYTES_PER_ELEMENT , unTypeArray is 1\n    const dataByteLength = byteSize * dataLength;\n    if (dataOffset !== 0 || dataByteLength < data.byteLength) {\n      const isArrayBufferView = (<ArrayBufferView>data).byteOffset !== undefined;\n      if (isWebGL2 && isArrayBufferView) {\n        gl.bufferSubData(gl.ARRAY_BUFFER, bufferByteOffset, <ArrayBufferView>data, dataOffset, dataLength);\n      } else {\n        const subData = new Uint8Array(\n          isArrayBufferView ? (<ArrayBufferView>data).buffer : <ArrayBuffer>data,\n          dataOffset * byteSize,\n          dataByteLength\n        );\n        gl.bufferSubData(gl.ARRAY_BUFFER, bufferByteOffset, subData);\n      }\n    } else {\n      gl.bufferSubData(gl.ARRAY_BUFFER, bufferByteOffset, data);\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  /**\n   * 获取顶点数据。\n   * @param data - 顶点输出数据\n   */\n  getData(data: ArrayBufferView): void;\n\n  /**\n   * 获取顶点数据。\n   * @param data - 顶点输出数据\n   * @param bufferByteOffset - 缓冲读取偏移，以字节为单位\n   */\n  getData(data: ArrayBufferView, bufferByteOffset: number): void;\n\n  /**\n   * 获取顶点数据。\n   * @param data - 顶点输出数据\n   * @param bufferByteOffset - 缓冲读取偏移，以字节为单位\n   * @param dataOffset - 输出偏移\n   * @param dataLength - 输出长度\n   */\n  getData(data: ArrayBufferView, bufferByteOffset: number, dataOffset: number, dataLength: number): void;\n\n  getData(data: ArrayBufferView, bufferByteOffset: number = 0, dataOffset: number = 0, dataLength?: number): void {\n    const isWebGL2: boolean = this._hardwareRenderer.isWebGL2;\n\n    if (isWebGL2) {\n      const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n      this.bind();\n      gl.getBufferSubData(gl.ARRAY_BUFFER, bufferByteOffset, data, dataOffset, dataLength);\n    } else {\n      throw \"IndexBuffer is write-only on WebGL1.0 platforms.\";\n    }\n  }\n\n  /**\n   * 销毁。\n   */\n  destroy(): void {\n    if (this._nativeBuffer) {\n      const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n      gl.deleteBuffer(this._nativeBuffer);\n      this._nativeBuffer = null;\n      this._engine = null;\n      this._hardwareRenderer = null;\n    }\n  }\n\n  /**\n   * @deprecated\n   */\n  resize(dataLength: number) {\n    this.bind();\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    gl.bufferData(gl.ARRAY_BUFFER, dataLength, this._glBufferUsage);\n    this._byteLength = dataLength;\n  }\n}\n","import { VertexBuffer } from \"./VertexBuffer\";\n\n/**\n * 顶点缓冲绑定。\n */\nexport class VertexBufferBinding {\n  /** @internal */\n  _buffer: VertexBuffer;\n  /** @internal */\n  _stride: number;\n\n  /**\n   * 顶点缓冲。\n   */\n  get buffer(): VertexBuffer {\n    return this._buffer;\n  }\n\n  /**\n   * 顶点跨度。\n   */\n  get stride(): number {\n    return this._stride;\n  }\n\n  /**\n   * 创建顶点缓冲绑定。\n   * @param buffer - 顶点缓冲\n   * @param stride - 顶点跨度\n   */\n  constructor(buffer: VertexBuffer, stride: number) {\n    this._buffer = buffer;\n    this._stride = stride;\n  }\n}\n","import { VertexElementFormat } from \"./enums/VertexElementFormat\";\nimport { ElementInfo, BufferUtil } from \"./BufferUtil\";\n\n/**\n * 顶点元素。\n */\nexport class VertexElement {\n  public readonly normalized = false;\n\n  _glElementInfo: ElementInfo;\n\n  private _semantic: string;\n  private _offset: number;\n  private _format: VertexElementFormat;\n  private _vertexBufferIndex: number;\n  private _instanceDivisor: number;\n\n  /**\n   * 顶点输入签名。\n   */\n  get semantic(): string {\n    return this._semantic;\n  }\n\n  /**\n   * 顶点的偏移，以字节为单位。\n   */\n  get offset(): number {\n    return this._offset;\n  }\n\n  /**\n   * 顶点元素格式。\n   */\n  get format(): VertexElementFormat {\n    return this._format;\n  }\n\n  /**\n   * 顶点缓冲索引。\n   */\n  get vertexBufferIndex(): number {\n    return this._vertexBufferIndex;\n  }\n\n  /**\n   * 实例除数，0表示不开启实例，大于1表示开启。\n   */\n  get instanceDivisor(): number {\n    return this._instanceDivisor;\n  }\n\n  /**\n   * 构造顶点元素。\n   * @param semantic - 顶点着色器输入签名。\n   * @param offset - 顶点的偏移，以字节为单位\n   * @param format - 顶点元素格式\n   * @param vertexBufferIndex - 顶点缓冲索引\n   * @param instanceDivisor - 实例除数，0表示不开启实例，大于1表示开启\n   */\n  constructor(\n    semantic: string,\n    offset: number,\n    format: VertexElementFormat,\n    vertexBufferIndex: number,\n    instanceDivisor: number = 0\n  ) {\n    this._semantic = semantic;\n    this._offset = offset;\n    this._format = format;\n    this._vertexBufferIndex = vertexBufferIndex;\n    this._glElementInfo = BufferUtil._getElementInfo(this.format);\n    this._instanceDivisor = Math.floor(instanceDivisor);\n  }\n\n  /**\n   * @deprecated\n   */\n  get elementInfo(): ElementInfo {\n    return this._glElementInfo;\n  }\n}\n","import { Material } from \"./Material\";\nimport { TechniqueStates, Attributes, Uniforms } from \"./type\";\nimport { AssetObject } from \"../asset/AssetObject\";\nimport { UniformSemantic, DataType } from \"../base/Constant\";\nimport { Logger } from \"../base/Logger\";\nimport { Camera } from \"../Camera\";\nimport { ShaderFactory } from \"../shaderlib/ShaderFactory\";\nimport { Primitive } from \"../primitive/Primitive\";\nimport { VertexElement, VertexElementFormat } from \"../graphic\";\n\n/**\n * 渲染单个对象所需的控制对象，作为 Material 的模块使用。对应 glTF 里面的 technique 对象\n * @class\n */\nexport class RenderTechnique extends AssetObject {\n  // 是否可用\n  public isValid: boolean = false;\n  // Unifrom记录数组\n  private _uniforms: Uniforms = RenderTechnique.commonUniforms;\n  // Attribute记录对象\n  private _attributes: Attributes = RenderTechnique.commonAttributes;\n  /**\n   * 渲染状态控制对象\n   * {\n   *  enable:[],\n   *  disable:[],\n   *  functions:{\n   *    \"func_name\":[]\n   *  }\n   * }\n   *\n   * function name: \"blendColor\", \"blendEquationSeparate\", \"blendFuncSeparate\",\n   * \"colorMask\", \"cullFace\", \"depthFunc\", \"depthMask\", \"depthRange\", \"frontFace\",\n   * \"lineWidth\", \"polygonOffset\", and \"scissor\"\n   * @member {object}\n   */\n  public states: TechniqueStates = null;\n  /**\n   * Vertex Shader 代码\n   * @member {string}\n   */\n  public vertexShader: string = \"\";\n  /**\n   * Fragment Shader 代码\n   * @member {string}\n   */\n  public fragmentShader: string = \"\";\n\n  /**\n   * GLSL 原始版本\n   * 若 autoConvert = true, WebGL 2 时着色器为旧版本，则升级到 300 版本\n   * @member {String} - \"100\" | \"300 es\"\n   */\n  public version = \"100\";\n\n  /** 自动转换 GLSL 版本 */\n  public autoConvert = true;\n\n  /**\n   * Vertex Shader 的精度\n   * @member {String}\n   */\n  public vertexPrecision = \"highp\";\n  /**\n   * Fragment Shader 的精度\n   * @member {String}\n   */\n  public fragmentPrecision = \"mediump\";\n  /**\n   * 自定义宏\n   * @member {Array}\n   */\n  public customMacros = [];\n\n  /**\n   * WebGL 1.0 时着色器中使用的拓展\n   * @member {Array}\n   */\n  public shaderExtension100 = [\"GL_EXT_shader_texture_lod\", \"GL_OES_standard_derivatives\", \"GL_EXT_draw_buffers\"];\n\n  /**\n   * WebGL 2.0 时着色器中使用的拓展\n   * @member {Array}\n   */\n  public shaderExtension300 = [];\n\n  public _needCompile = true;\n\n  private _recreateHeader: boolean;\n  private _vsHeader: string;\n  private _vsCode: string;\n  private _fsHeader: string;\n  private _fsCode: string;\n  private _fogMacro: string;\n  public attribLocSet: any;\n\n  /**\n   * 构造函数\n   * @param {string} name 名称\n   */\n  constructor(public name: string) {\n    super();\n  }\n\n  get attributes() {\n    return this._attributes;\n  }\n\n  set attributes(v) {\n    this._attributes = Object.assign({}, RenderTechnique.commonAttributes, v);\n  }\n\n  get uniforms() {\n    return this._uniforms;\n  }\n\n  set uniforms(v) {\n    this._uniforms = Object.assign({}, RenderTechnique.commonUniforms, v);\n  }\n\n  compile(camera: Camera, component, primitive: Primitive, material: Material) {\n    this.parseFog(camera);\n\n    if (this._needCompile) {\n      const rhi = camera.engine._hardwareRenderer;\n      const isWebGL2 = rhi?.isWebGL2;\n\n      material.preCompile?.(this);\n\n      const attribMacros = this.getAttributeDefines(camera, component, primitive, material);\n\n      if (this._recreateHeader) {\n        // reset configs\n        this.attributes = this.attributes;\n        this.uniforms = this.uniforms;\n      }\n\n      if (!this._vsHeader || this._recreateHeader)\n        this._vsHeader =\n          ShaderFactory.parseVersion(this.version) +\n          ShaderFactory.parseShaderName((this.name || \"VOID\").toUpperCase() + \"_VERT\") +\n          \"\\n\" +\n          ShaderFactory.parsePrecision(this.vertexPrecision, this.fragmentPrecision, true) +\n          \"\\n\" +\n          ShaderFactory.parseAttributeMacros(attribMacros) +\n          \"\\n\" +\n          ShaderFactory.parseCustomMacros(this.customMacros) +\n          \"\\n\";\n\n      if (!this._vsCode) this._vsCode = ShaderFactory.parseShader(this.vertexShader);\n\n      this.vertexShader = this._vsHeader + this._vsCode;\n\n      if (!this._fsHeader || this._recreateHeader)\n        this._fsHeader =\n          ShaderFactory.parseVersion(this.version) +\n          ShaderFactory.parseShaderName((this.name || \"VOID\").toUpperCase() + \"_FRAG\") +\n          \"\\n\" +\n          ShaderFactory.parseExtension(isWebGL2 ? this.shaderExtension300 : this.shaderExtension100) +\n          ShaderFactory.parsePrecision(this.vertexPrecision, this.fragmentPrecision) +\n          \"\\n\" +\n          ShaderFactory.parseAttributeMacros(attribMacros) +\n          \"\\n\" +\n          ShaderFactory.parseCustomMacros(this.customMacros) +\n          \"\\n\";\n\n      if (!this._fsCode) this._fsCode = ShaderFactory.parseShader(this.fragmentShader);\n\n      this.fragmentShader = this._fsHeader + this._fsCode;\n\n      /**\n       * 若 autoConvert = true,  WebGL 2 时着色器为旧版本，则升级到 300 版本\n       * 若 WebGL1,兼容 gl_FragColor 和 gl_FragData 同时存在的报错\n       * */\n      if (this.autoConvert && isWebGL2 && this.version !== \"300 es\") {\n        const maxDrawBuffers = rhi.capability.maxDrawBuffers;\n        const shaderMaxDrawBuffers = ShaderFactory.getMaxDrawBuffers(this.fragmentShader);\n\n        if (shaderMaxDrawBuffers <= maxDrawBuffers) {\n          this.vertexShader = ShaderFactory.convertTo300(this.vertexShader);\n          this.fragmentShader = ShaderFactory.convertTo300(this.fragmentShader, true);\n        }\n      } else if (!isWebGL2 && this.version !== \"300es\") {\n        this.fragmentShader = ShaderFactory.compatible(this.fragmentShader);\n      }\n\n      this._needCompile = false;\n      this._recreateHeader = false;\n\n      material.postCompile?.(this);\n    }\n  }\n\n  getAttributeDefines(camera: Camera, component, primitive: Primitive, material) {\n    const rhi = camera.scene.engine._hardwareRenderer;\n    const gl = rhi.gl;\n    const _macros = [];\n    if (!primitive) return _macros;\n\n    const attribNames = Object.keys(primitive._vertexElementMap);\n\n    if (attribNames.indexOf(\"TEXCOORD_0\") > -1) _macros.push(\"O3_HAS_UV\");\n    if (attribNames.indexOf(\"NORMAL\") > -1) _macros.push(\"O3_HAS_NORMAL\");\n    if (attribNames.indexOf(\"TANGENT\") > -1) _macros.push(\"O3_HAS_TANGENT\");\n    if (attribNames.indexOf(\"JOINTS_0\") > -1) {\n      _macros.push(\"O3_HAS_SKIN\");\n      if (component.jointNodes?.length) {\n        const maxAttribUniformVec4 = rhi.renderStates.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n        const maxJoints = Math.floor((maxAttribUniformVec4 - 20) / 4);\n        const joints = component.jointNodes.length;\n\n        if (joints > maxJoints) {\n          /** 是否使用骨骼纹理 */\n          if (rhi.canIUseMoreJoints) {\n            _macros.push(\"O3_USE_JOINT_TEXTURE\");\n          } else {\n            Logger.error(\n              `component's joints count(${joints}) greater than device's MAX_VERTEX_UNIFORM_VECTORS number ${maxAttribUniformVec4}, suggest joint count less than ${maxJoints}.`,\n              component\n            );\n          }\n        } else if (material.maxJointsNum > 0) {\n          // 使用最大关节数，保证所有 SkinnedMeshRenderer 都可以共用材质\n          _macros.push(`O3_JOINTS_NUM ${material.maxJointsNum}`);\n        }\n      }\n    }\n    if (attribNames.indexOf(\"COLOR_0\") > -1) {\n      _macros.push(\"O3_HAS_VERTEXCOLOR\");\n      if ((<VertexElement>primitive._vertexElementMap[\"COLOR_0\"]).format === VertexElementFormat.Vector4)\n        _macros.push(\"O3_HAS_VERTEXALPHA\");\n    }\n\n    // if (component.weights) {\n    //   const maxAttribs = rhi.renderStates.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    //   if (attribNames.length > maxAttribs) {\n    //     Logger.warn(`too many morph targets, beyond the MAX_VERTEX_ATTRIBS limit ${maxAttribs}`);\n    //   }\n    //   const targetNum = component.weights.length;\n    //   _macros.push(\"O3_HAS_MORPH\");\n    //   _macros.push(`O3_MORPH_NUM ${targetNum}`);\n\n    //   if (attribNames.indexOf(\"POSITION_0\") > -1) _macros.push(\"O3_MORPH_POSITION\");\n    //   if (attribNames.indexOf(\"NORMAL_0\") > -1) _macros.push(\"O3_MORPH_NORMAL\");\n    //   if (attribNames.indexOf(\"TANGENT_0\") > -1) _macros.push(\"O3_MORPH_TANGENT\");\n\n    //   this._attributes = Object.assign(this.attributes, this.createMorphConfig(primitive, targetNum));\n    //   this._uniforms.u_morphWeights = {\n    //     name: \"u_morphWeights\",\n    //     semantic: UniformSemantic.MORPHWEIGHTS,\n    //     type: DataType.FLOAT\n    //   };\n    //   // }\n    // }\n\n    const scene = camera.scene as any;\n    if (scene.hasFogFeature) {\n      _macros.push(...scene.getFogMacro());\n    }\n\n    return _macros;\n  }\n\n  parseFog(camera) {\n    const scene = camera.scene;\n    if (scene.hasFogFeature) {\n      const fogMacro = scene.getFogMacro();\n      if (this._fogMacro !== fogMacro) {\n        this._needCompile = true;\n        this._recreateHeader = true;\n        this._fogMacro = fogMacro;\n      }\n    }\n  }\n\n  createMorphConfig(primitive: Primitive, targetNum: number) {\n    const attributes = Object.keys(primitive._vertexElementMap);\n    const morphConfig = {};\n    for (let i = 0; i < targetNum; i++) {\n      if (attributes.indexOf(`POSITION_${i}`) > -1)\n        morphConfig[`a_position${i}`] = {\n          name: `a_position${i}`,\n          semantic: `POSITION_${i}`,\n          type: DataType.FLOAT_VEC3\n        };\n\n      if (attributes.indexOf(`NORMAL_${i}`) > -1)\n        morphConfig[`a_normal${i}`] = {\n          name: `a_normal${i}`,\n          semantic: `NORMAL_${i}`,\n          type: DataType.FLOAT_VEC3\n        };\n\n      if (attributes.indexOf(`TANGENT_${i}`) > -1)\n        morphConfig[`a_tangent${i}`] = {\n          name: `a_tangent${i}`,\n          semantic: `TANGENT_${i}`,\n          type: DataType.FLOAT_VEC3\n        };\n    }\n\n    return morphConfig;\n  }\n\n  static commonAttributes = {\n    a_position: {\n      name: \"a_position\",\n      semantic: \"POSITION\",\n      type: DataType.FLOAT_VEC3\n    },\n    a_uv: {\n      name: \"a_uv\",\n      semantic: \"TEXCOORD_0\",\n      type: DataType.FLOAT_VEC2\n    },\n    a_normal: {\n      name: \"a_noraml\",\n      semantic: \"NORMAL\",\n      type: DataType.FLOAT_VEC3\n    },\n    a_tangent: {\n      name: \"a_tangent\",\n      semantic: \"TANGENT\",\n      type: DataType.FLOAT_VEC4\n    },\n    a_color: {\n      name: \"a_color\",\n      semantic: \"COLOR_0\",\n      type: DataType.FLOAT_VEC4\n    },\n    a_joint: {\n      name: \"a_joint\",\n      semantic: \"JOINTS_0\",\n      type: DataType.FLOAT_VEC4\n    },\n    a_weight: {\n      name: \"a_weight\",\n      semantic: \"WEIGHTS_0\",\n      type: DataType.FLOAT_VEC4\n    }\n  };\n\n  static commonUniforms = {\n    u_localMat: {\n      name: \"u_localMat\",\n      semantic: UniformSemantic.LOCAL,\n      type: DataType.FLOAT_MAT4\n    },\n    u_modelMat: {\n      name: \"u_modelMat\",\n      semantic: UniformSemantic.MODEL,\n      type: DataType.FLOAT_MAT4\n    },\n    u_viewMat: {\n      name: \"u_viewMat\",\n      semantic: UniformSemantic.VIEW,\n      type: DataType.FLOAT_MAT4\n    },\n    u_projMat: {\n      name: \"u_projMat\",\n      semantic: UniformSemantic.PROJECTION,\n      type: DataType.FLOAT_MAT4\n    },\n    u_MVMat: {\n      name: \"u_MVMat\",\n      semantic: UniformSemantic.MODELVIEW,\n      type: DataType.FLOAT_MAT4\n    },\n    u_MVPMat: {\n      name: \"u_MVPMat\",\n      semantic: UniformSemantic.MODELVIEWPROJECTION,\n      type: DataType.FLOAT_MAT4\n    },\n    u_normalMat: {\n      name: \"u_normalMat\",\n      semantic: UniformSemantic.MODELINVERSETRANSPOSE,\n      type: DataType.FLOAT_MAT3\n    },\n    u_cameraPos: {\n      name: \"u_cameraPos\",\n      type: DataType.FLOAT_VEC3,\n      semantic: UniformSemantic.EYEPOS\n    },\n    u_time: {\n      name: \"u_time\",\n      type: DataType.FLOAT,\n      semantic: UniformSemantic.TIME\n    },\n    u_jointMatrix: {\n      name: \"u_jointMatrix\",\n      semantic: UniformSemantic.JOINTMATRIX,\n      type: DataType.FLOAT_MAT4_ARRAY\n    },\n    u_jointSampler: {\n      name: \"u_jointSampler\",\n      semantic: UniformSemantic.JOINTTEXTURE,\n      type: DataType.SAMPLER_2D\n    },\n    u_jointCount: {\n      name: \"u_jointCount\",\n      semantic: UniformSemantic.JOINTCOUNT,\n      type: DataType.FLOAT\n    },\n    u_fogColor: {\n      name: \"u_fogColor\",\n      type: DataType.FLOAT_VEC3\n    },\n    u_fogDensity: {\n      name: \"u_fogDensity\",\n      type: DataType.FLOAT\n    },\n    u_fogNear: {\n      name: \"u_fogNear\",\n      type: DataType.FLOAT\n    },\n    u_fogFar: {\n      name: \"u_fogFar\",\n      type: DataType.FLOAT\n    }\n  };\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { TextureCubeFace, TextureFilterMode, TextureFormat, TextureWrapMode } from \"./enums\";\nimport { Texture } from \"./Texture\";\n\n/**\n * 立方体纹理。\n * @todo 日后调整为TextureCube命名\n */\nexport class TextureCubeMap extends Texture {\n  private _format: TextureFormat;\n  /** 向下兼容 WebGL1.0 */\n  private _compressedFaceFilled: number[] = [0, 0, 0, 0, 0, 0];\n\n  /**\n   * 纹理的格式。\n   */\n  get format(): TextureFormat {\n    return this._format;\n  }\n\n  /**\n   * 创建立方体纹理。\n   * @param size - 尺寸\n   * @param format - 格式，默认 TextureFormat.R8G8B8A8\n   * @param mipmap - 是否使用多级纹理\n   * @param engine - 可选引擎\n   */\n  constructor(size: number, format: TextureFormat = TextureFormat.R8G8B8A8, mipmap: boolean = true, engine?: Engine) {\n    super();\n    engine = engine || Engine._getDefaultEngine();\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (mipmap && !isWebGL2 && !Texture._isPowerOf2(size)) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    const formatDetail = Texture._getFormatDetail(format, gl, isWebGL2);\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = formatDetail;\n    this._rhi = rhi;\n    this._target = gl.TEXTURE_CUBE_MAP;\n    this._mipmap = mipmap;\n    this._width = size;\n    this._height = size;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    (formatDetail.isCompressed && !isWebGL2) || this._initMipmap(true);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Clamp;\n  }\n\n  /**\n   * 通过指定立方体面、像素缓冲数据、区域和纹理层级设置像素，同样适用于压缩格式。\n   * 压缩纹理在 WebGL1 时必须先填满纹理，才能写子区域\n   * @param face - 立方体面\n   * @param colorBuffer - 颜色缓冲\n   * @param mipLevel - 多级纹理层级\n   * @param x - 区域起始X坐标\n   * @param y - 区域起始Y坐标\n   * @param width - 区域宽。如果为空的话 width 为 mipLevel 对应的宽度减去 x , mipLevel 对应的宽度为 Math.max(1, this.width >> mipLevel)\n   * @param height - 区域高。如果为空的话 height 为 mipLevel 对应的高度减去 y , mipLevel 对应的高度为 Math.max(1, this.height >> mipLevel)\n   */\n  setPixelBuffer(\n    face: TextureCubeFace,\n    colorBuffer: ArrayBufferView,\n    mipLevel: number = 0,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipSize = Math.max(1, this._width >> mipLevel);\n\n    x = x || 0;\n    y = y || 0;\n    width = width || mipSize - x;\n    height = height || mipSize - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedFaceFilled[face] & mipBit) {\n        gl.compressedTexSubImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          x,\n          y,\n          width,\n          height,\n          internalFormat,\n          colorBuffer\n        );\n      } else {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          internalFormat,\n          width,\n          height,\n          0,\n          colorBuffer\n        );\n        this._compressedFaceFilled[face] |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        mipLevel,\n        x,\n        y,\n        width,\n        height,\n        baseFormat,\n        dataType,\n        colorBuffer\n      );\n    }\n\n    this._unbind();\n  }\n\n  /**\n   * 通过指定立方体面、图源、区域和纹理层级设置像素。\n   * @param face - 立方体面\n   * @param imageSource - 纹理源\n   * @param mipLevel - 多级纹理层级\n   * @param flipY - 是否翻转Y轴\n   * @param premultipltAlpha - 是否预乘透明通道\n   * @param x - 区域起始X坐标\n   * @param y - 区域起始Y坐标\n   */\n  setImageSource(\n    face: TextureCubeFace,\n    imageSource: TexImageSource,\n    mipLevel: number = 0,\n    flipY: boolean = false,\n    premultiplyAlpha: boolean = false,\n    x?: number,\n    y?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n      mipLevel,\n      x || 0,\n      y || 0,\n      baseFormat,\n      dataType,\n      imageSource\n    );\n    this._unbind();\n  }\n\n  /**\n   * 根据立方体面和指定区域获得像素颜色缓冲。\n   * @param face - 可以选择读取第几个面\n   * @param x - 区域起始X坐标\n   * @param y - 区域起始Y坐标\n   * @param width - 区域宽\n   * @param height - 区域高\n   * @param out - 颜色数据缓冲\n   */\n  getPixelBuffer(\n    face: TextureCubeFace,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    out: ArrayBufferView\n  ): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(face, x, y, width, height, out);\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { RenderBufferDepthFormat, TextureFilterMode, TextureWrapMode } from \"./enums\";\nimport { Texture } from \"./Texture\";\n\n/**\n * 类应用于渲染深度纹理。\n */\nexport class RenderDepthTexture extends Texture {\n  /** @internal */\n  public _isCube: boolean = false;\n\n  private _format: RenderBufferDepthFormat;\n  private _autoMipmap: boolean = false;\n\n  /**\n   * 格式。\n   */\n  get format(): RenderBufferDepthFormat {\n    return this._format;\n  }\n\n  /**\n   * 是否自动生成多级纹理。\n   */\n  get autoGenerateMipmaps(): boolean {\n    return this._autoMipmap;\n  }\n\n  set autoGenerateMipmaps(value: boolean) {\n    this._autoMipmap = value;\n  }\n\n  /**\n   * 构造渲染深度纹理。\n   * @param width - 宽\n   * @param height - 高\n   * @param format - 格式。默认 RenderBufferDepthFormat.Depth,深度纹理,自动选择精度\n   * @param mipmap - 是否使用多级纹理\n   * @param isCube - 是否为立方体模式\n   * @param engine - 可选引擎\n   */\n  constructor(\n    width: number,\n    height: number,\n    format: RenderBufferDepthFormat = RenderBufferDepthFormat.Depth,\n    mipmap: boolean = false,\n    isCube: boolean = false,\n    engine?: Engine\n  ) {\n    super();\n    engine = engine || Engine._getDefaultEngine();\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportRenderBufferDepthFormat(format, rhi, true)) {\n      throw new Error(`RenderBufferDepthFormat is not supported:${RenderBufferDepthFormat[format]}`);\n    }\n\n    if (isCube && width !== height) {\n      throw new Error(\"The cube texture must have the same width and height\");\n    }\n    if (mipmap && !isWebGL2 && (!Texture._isPowerOf2(width) || !Texture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = Texture._getRenderBufferDepthFormatDetail(format, gl, isWebGL2);\n    this._isCube = isCube;\n    this._rhi = rhi;\n    this._target = isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n    this._mipmap = mipmap;\n    this._width = width;\n    this._height = height;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    this._initMipmap(isCube);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Clamp;\n  }\n}\n","import { AssetObject } from \"../asset/AssetObject\";\nimport { GLCapabilityType } from \"../base/Constant\";\nimport { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { RenderBufferDepthFormat, TextureCubeFace } from \"./enums\";\nimport { RenderColorTexture } from \"./RenderColorTexture\";\nimport { RenderDepthTexture } from \"./RenderDepthTexture\";\nimport { Texture } from \"./Texture\";\n\n/**\n * 用于离屏幕渲染的渲染目标。\n */\nexport class RenderTarget extends AssetObject {\n  public _frameBuffer: WebGLFramebuffer;\n  public _MSAAFrameBuffer: WebGLFramebuffer | null;\n\n  private _rhi;\n  private _width: number;\n  private _height: number;\n  private _antiAliasing: number;\n  private _colorTextures: RenderColorTexture[];\n  private _depthTexture: RenderDepthTexture | null;\n  private _depthRenderBuffer: WebGLRenderbuffer | null;\n  private _MSAAColorRenderBuffers: WebGLRenderbuffer[] = [];\n  private _MSAADepthRenderBuffer: WebGLRenderbuffer | null;\n  private _oriDrawBuffers: GLenum[];\n  private _blitDrawBuffers: GLenum[] | null;\n\n  /** 渲染目标宽。 */\n  get width(): number {\n    return this._width;\n  }\n\n  /** 渲染目标高。 */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * 颜色纹理数量。\n   */\n  get colorTextureCount(): number {\n    return this._colorTextures.length;\n  }\n\n  /**\n   * 深度纹理。\n   */\n  get depthTexture(): RenderDepthTexture | null {\n    return this._depthTexture;\n  }\n\n  /**\n   * 抗锯齿级别。\n   * 如果设置的抗锯齿级别大于硬件支持的最大级别，将使用硬件的最大级别。\n   */\n  get antiAliasing(): number {\n    return this._antiAliasing;\n  }\n\n  /**\n   * 通过颜色纹理和深度格式创建渲染目标，使用内部深度缓冲，无法获取深度纹理。\n   * @param width - 宽\n   * @param height - 高\n   * @param colorTexture - 颜色纹理\n   * @param depthFormat - 深度格式,默认 RenderBufferDepthFormat.Depth,自动选择精度\n   * @param antiAliasing - 抗锯齿级别,默认 1\n   * @param engine - 可选引擎\n   */\n  constructor(\n    width: number,\n    height: number,\n    colorTexture: RenderColorTexture,\n    depthFormat?: RenderBufferDepthFormat | null,\n    antiAliasing?: number,\n    engine?: Engine\n  );\n\n  /**\n   * 通过颜色纹理和深度纹理创建渲染目标。不传颜色纹理时，只生成深度纹理\n   * @param width - 宽\n   * @param height - 高\n   * @param colorTexture - 颜色纹理\n   * @param depthTexture - 深度纹理\n   * @param antiAliasing - 抗锯齿级别,默认 1\n   * @param engine - 可选引擎\n   */\n  constructor(\n    width: number,\n    height: number,\n    colorTexture: RenderColorTexture | null,\n    depthTexture: RenderDepthTexture,\n    antiAliasing?: number,\n    engine?: Engine\n  );\n\n  /**\n   * 通过颜色纹理数组和深度格式创建渲染目标，使用内部深度缓冲，无法获取深度纹理。\n   * @param width - 宽\n   * @param height - 高\n   * @param colorTextures - 颜色纹理数组\n   * @param depthFormat - 深度格式,默认 RenderBufferDepthFormat.Depth,自动选择精度\n   * @param antiAliasing - 抗锯齿级别,默认 1\n   * @param engine - 可选引擎\n   */\n  constructor(\n    width: number,\n    height: number,\n    colorTextures: RenderColorTexture[],\n    depthFormat?: RenderBufferDepthFormat | null,\n    antiAliasing?: number,\n    engine?: Engine\n  );\n\n  /**\n   * 通过颜色纹理数组和深度纹理创建渲染目标。\n   * @param width - 宽\n   * @param height - 高\n   * @param colorTextures - 颜色纹理数组\n   * @param depthTexture - 深度纹理\n   * @param antiAliasing - 抗锯齿级别,默认 1\n   * @param engine - 可选引擎\n   */\n  constructor(\n    width: number,\n    height: number,\n    colorTextures: RenderColorTexture[],\n    depthTexture: RenderDepthTexture,\n    antiAliasing?: number,\n    engine?: Engine\n  );\n\n  /**\n   * @internal\n   */\n  constructor(\n    width: number,\n    height: number,\n    renderTexture: RenderColorTexture | Array<RenderColorTexture> | null,\n    depth: RenderDepthTexture | RenderBufferDepthFormat | null = RenderBufferDepthFormat.Depth,\n    antiAliasing: number = 1,\n    engine?: Engine\n  ) {\n    super();\n    engine = engine || Engine._getDefaultEngine();\n    const rhi = engine._hardwareRenderer;\n\n    /** todo\n     * MRT + Cube + [,MSAA]\n     * MRT + MSAA\n     */\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n\n    if (!(depth instanceof RenderDepthTexture) && !Texture._supportRenderBufferDepthFormat(depth, rhi, false)) {\n      throw new Error(`RenderBufferDepthFormat is not supported:${RenderBufferDepthFormat[depth]}`);\n    }\n\n    if ((renderTexture as RenderColorTexture[])?.length > 1 && !rhi.canIUse(GLCapabilityType.drawBuffers)) {\n      throw new Error(\"MRT is not supported\");\n    }\n\n    // handle this._colorTextures\n    if (renderTexture) {\n      this._colorTextures = renderTexture instanceof Array ? renderTexture.slice() : [renderTexture];\n    } else {\n      this._colorTextures = [];\n    }\n\n    if (this._colorTextures.some((v: RenderColorTexture) => v.width !== width || v.height !== height)) {\n      throw new Error(\"RenderColorTexture's size must as same as RenderTarget\");\n    }\n\n    if (depth instanceof RenderDepthTexture && (depth.width !== width || depth.height !== height)) {\n      throw new Error(\"RenderDepthTexture's size must as same as RenderTarget\");\n    }\n\n    // todo: necessary to support MRT + Cube + [,MSAA] ?\n    if (this._colorTextures.length > 1 && this._colorTextures.some((v: RenderColorTexture) => v._isCube)) {\n      throw new Error(\"MRT+Cube+[,MSAA] is not supported\");\n    }\n\n    const maxAntiAliasing = rhi.capability.maxAntiAliasing;\n    if (antiAliasing > maxAntiAliasing) {\n      Logger.warn(`MSAA antiAliasing exceeds the limit and is automatically downgraded to:${maxAntiAliasing}`);\n      antiAliasing = maxAntiAliasing;\n    }\n\n    this._rhi = rhi;\n    this._width = width;\n    this._height = height;\n    this._frameBuffer = gl.createFramebuffer();\n    this._antiAliasing = antiAliasing;\n\n    if (depth instanceof RenderDepthTexture) {\n      this._depthTexture = depth;\n    }\n\n    // 绑定主 FBO\n    this._bindMainFBO(depth);\n\n    // 绑定 MSAA FBO\n    if (antiAliasing > 1) {\n      this._MSAAFrameBuffer = gl.createFramebuffer();\n      this._bindMSAAFBO(depth);\n    }\n  }\n\n  /**\n   * 通过索引获取颜色纹理。\n   * @param index\n   */\n  public getColorTexture(index: number = 0): RenderColorTexture | null {\n    return this._colorTextures[index];\n  }\n\n  /**\n   * 销毁。\n   */\n  public destroy(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    gl.deleteFramebuffer(this._frameBuffer);\n    this._depthRenderBuffer && gl.deleteRenderbuffer(this._depthRenderBuffer);\n    this._MSAAFrameBuffer && gl.deleteFramebuffer(this._MSAAFrameBuffer);\n    this._MSAADepthRenderBuffer && gl.deleteRenderbuffer(this._MSAADepthRenderBuffer);\n\n    for (let i = 0; i < this._colorTextures.length; i++) {\n      this._colorTextures[i].destroy();\n    }\n\n    for (let i = 0; i < this._MSAAColorRenderBuffers.length; i++) {\n      gl.deleteRenderbuffer(this._MSAAColorRenderBuffers[i]);\n    }\n\n    this._depthTexture && this._depthTexture.destroy();\n\n    this._frameBuffer = null;\n    this._colorTextures.length = 0;\n    this._depthTexture = null;\n    this._depthRenderBuffer = null;\n    this._MSAAFrameBuffer = null;\n    this._MSAAColorRenderBuffers.length = 0;\n    this._MSAADepthRenderBuffer = null;\n  }\n\n  /**\n   * 激活 RenderTarget 对象\n   * 如果开启 MSAA,则激活 MSAA FBO,后续进行 this._blitRenderTarget() 进行交换 FBO\n   * 如果未开启 MSAA,则激活主 FBO\n   */\n  public _activeRenderTarget(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    if (this._MSAAFrameBuffer) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n    }\n  }\n\n  /**\n   * 设置渲染到立方体纹理的哪个面\n   * @param faceIndex - 立方体纹理面\n   */\n  public _setRenderTargetFace(faceIndex: TextureCubeFace): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const colorTexture = this._colorTextures[0];\n    const depthTexture = this._depthTexture;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    // 绑定颜色纹理\n    if (colorTexture?._isCube) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n        colorTexture._glTexture,\n        0\n      );\n    }\n\n    // 绑定深度纹理\n    if (depthTexture?._isCube) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        depthTexture._formatDetail.attachment,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n        depthTexture._glTexture,\n        0\n      );\n    }\n\n    // 还原当前激活的 FBO\n    this._activeRenderTarget();\n  }\n\n  /**\n   * Blit FBO.\n   */\n  public _blitRenderTarget(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const mask = gl.COLOR_BUFFER_BIT | (this._depthTexture ? gl.DEPTH_BUFFER_BIT : 0);\n    const colorTextureLength = this._colorTextures.length;\n\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this._MSAAFrameBuffer);\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this._frameBuffer);\n\n    for (let textureIndex = 0; textureIndex < colorTextureLength; textureIndex++) {\n      const attachment = gl.COLOR_ATTACHMENT0 + textureIndex;\n\n      this._blitDrawBuffers[textureIndex] = attachment;\n\n      gl.readBuffer(attachment);\n      gl.drawBuffers(this._blitDrawBuffers);\n      gl.blitFramebuffer(0, 0, this._width, this._height, 0, 0, this._width, this._height, mask, gl.NEAREST);\n\n      this._blitDrawBuffers[textureIndex] = gl.NONE;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  /**\n   * 绑定主 FBO\n   */\n  private _bindMainFBO(renderDepth: RenderDepthTexture | RenderBufferDepthFormat | null): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const colorTextureLength = this._colorTextures.length;\n    const drawBuffers = new Array(colorTextureLength);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    /** color render buffer */\n    for (let i = 0; i < colorTextureLength; i++) {\n      const colorTexture = this._colorTextures[i];\n      const attachment = gl.COLOR_ATTACHMENT0 + i;\n\n      drawBuffers[i] = attachment;\n\n      // 立方体纹理请调用 _setRenderTargetFace()\n      if (!colorTexture._isCube) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, colorTexture._glTexture, 0);\n      }\n    }\n\n    if (colorTextureLength > 1) {\n      gl.drawBuffers(drawBuffers);\n    }\n    this._oriDrawBuffers = drawBuffers;\n\n    /** depth render buffer */\n    if (renderDepth !== null) {\n      if (renderDepth instanceof RenderDepthTexture) {\n        // 立方体纹理请调用 _setRenderTargetFace()\n        if (!renderDepth._isCube) {\n          gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            renderDepth._formatDetail.attachment,\n            gl.TEXTURE_2D,\n            renderDepth._glTexture,\n            0\n          );\n        }\n      } else if (this._antiAliasing <= 1) {\n        const { internalFormat, attachment } = Texture._getRenderBufferDepthFormatDetail(renderDepth, gl, isWebGL2);\n        const depthRenderBuffer = gl.createRenderbuffer();\n\n        this._depthRenderBuffer = depthRenderBuffer;\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, this._width, this._height);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, depthRenderBuffer);\n      }\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  /**\n   * 绑定 MSAA FBO\n   */\n  private _bindMSAAFBO(renderDepth: RenderDepthTexture | RenderBufferDepthFormat | null): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const MSAADepthRenderBuffer = gl.createRenderbuffer();\n    const colorTextureLength = this._colorTextures.length;\n\n    this._blitDrawBuffers = new Array(colorTextureLength);\n    this._MSAADepthRenderBuffer = MSAADepthRenderBuffer;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n\n    // prepare MRT+MSAA color RBOs\n    for (let i = 0; i < colorTextureLength; i++) {\n      const MSAAColorRenderBuffer = gl.createRenderbuffer();\n\n      this._MSAAColorRenderBuffers[i] = MSAAColorRenderBuffer;\n      this._blitDrawBuffers[i] = gl.NONE;\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAAColorRenderBuffer);\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        this._antiAliasing,\n        this._colorTextures[i]._formatDetail.internalFormat,\n        this._width,\n        this._height\n      );\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.RENDERBUFFER, MSAAColorRenderBuffer);\n    }\n    gl.drawBuffers(this._oriDrawBuffers);\n\n    // prepare MSAA depth RBO\n    if (renderDepth !== null) {\n      const { internalFormat, attachment } =\n        renderDepth instanceof RenderDepthTexture\n          ? renderDepth._formatDetail\n          : Texture._getRenderBufferDepthFormatDetail(renderDepth, gl, isWebGL2);\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAADepthRenderBuffer);\n      gl.renderbufferStorageMultisample(gl.RENDERBUFFER, this._antiAliasing, internalFormat, this._width, this._height);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, MSAADepthRenderBuffer);\n    }\n\n    this._checkFrameBuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  /**\n   * 检查 FBO\n   */\n  private _checkFrameBuffer(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    switch (e) {\n      case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n        throw new Error(\n          \"The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete\"\n        );\n      case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n        throw new Error(\"There is no attachment\");\n      case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n        throw new Error(\" Height and width of the attachment are not the same.\");\n      case gl.FRAMEBUFFER_UNSUPPORTED:\n        throw new Error(\n          \"The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer\"\n        );\n    }\n\n    if (isWebGL2 && e === gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE) {\n      throw new Error(\n        \"The values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are non-zero if the attached images are a mix of renderbuffers and textures.\"\n      );\n    }\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { RenderBufferColorFormat, TextureCubeFace, TextureFilterMode, TextureWrapMode } from \"./enums\";\nimport { Texture } from \"./Texture\";\n\n/**\n * 类应用于渲染颜色纹理。\n */\nexport class RenderColorTexture extends Texture {\n  /** @internal */\n  public _isCube: boolean = false;\n\n  private _format: RenderBufferColorFormat;\n  private _autoMipmap: boolean = false;\n\n  /**\n   * 格式。\n   */\n  get format(): RenderBufferColorFormat {\n    return this._format;\n  }\n\n  /**\n   * 是否自动生成多级纹理。\n   */\n  get autoGenerateMipmaps(): boolean {\n    return this._autoMipmap;\n  }\n\n  set autoGenerateMipmaps(value: boolean) {\n    this._autoMipmap = value;\n  }\n\n  /**\n   * 构造渲染纹理。\n   * @param width - 宽\n   * @param height - 高\n   * @param format - 格式，默认 RenderBufferColorFormat.R8G8B8A8\n   * @param mipmap - 是否使用多级纹理\n   * @param isCube - 是否为立方体模式\n   * @param engine - 可选引擎\n   */\n  constructor(\n    width: number,\n    height: number,\n    format: RenderBufferColorFormat = RenderBufferColorFormat.R8G8B8A8,\n    mipmap: boolean = false,\n    isCube: boolean = false,\n    engine?: Engine\n  ) {\n    super(engine);\n    engine = engine || Engine._getDefaultEngine();\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportRenderBufferColorFormat(format, rhi)) {\n      throw new Error(`RenderBufferColorFormat is not supported:${RenderBufferColorFormat[format]}`);\n    }\n\n    if (isCube && width !== height) {\n      throw new Error(\"The cube texture must have the same width and height\");\n    }\n    if (mipmap && !isWebGL2 && (!Texture._isPowerOf2(width) || !Texture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = Texture._getRenderBufferColorFormatDetail(format, gl, isWebGL2);\n    this._isCube = isCube;\n    this._rhi = rhi;\n    this._target = isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n    this._mipmap = mipmap;\n    this._width = width;\n    this._height = height;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    this._initMipmap(isCube);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Clamp;\n  }\n\n  /**\n   * 根据立方体面和指定区域获得颜色像素缓冲。\n   * @param face - 如果是立方体纹理，可以选择读取第几个面;立方体纹理读取面，isCube=true时生效\n   * @param x - 区域起始X坐标\n   * @param y - 区域起始Y坐标\n   * @param width - 区域宽\n   * @param height - 区域高\n   * @param out - 颜色像素缓冲\n   */\n  public getPixelBuffer(\n    face: TextureCubeFace | null,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    out: ArrayBufferView\n  ): void {\n    super._getPixelBuffer(face, x, y, width, height, out);\n  }\n}\n","/**\n * 动画循环播放模式\n * @readonly\n */\nexport enum WrapMode {\n  /** 只播放一次 */\n  ONCE = 0,\n  /** 循环播放 */\n  LOOP = 1\n  // FOREVER: 2,\n  // PINGPONG: 3\n}\n\n/**\n * 动画事件类型\n * @readonly\n */\nexport enum AnimationEvent {\n  /** 播放模式为 WrapMode.ONCE，结束后触发 */\n  FINISHED = 0,\n  /** 播放模式为 WrapMode.LOOP，每次循环结束后触发 */\n  LOOP_END = 1,\n  /** 动画播放到距离开始的某个时间点后，触发的事件 */\n  FRAME_EVENT = 2\n}\n\n/**\n * 动画插值方式\n * @readonly\n */\nexport enum InterpolationType {\n  /** 线性插值 */\n  LINEAR = 0,\n  /** 三次贝塞尔曲线插值 */\n  CUBICSPLINE = 1,\n  /** 步进插值 */\n  STEP = 2\n}\n","import { InterpolationType } from \"./AnimationConst\";\nimport { IChannel, ISample, List, Value } from \"./types\";\nimport { AssetObject } from \"../asset/AssetObject\";\n\nexport enum TagetType {\n  position = 0,\n  rotation = 1,\n  scale = 2,\n  other = 3\n}\n\n/**\n * Data for an animation, set of Samples and Channels\n * @extends AssetObject\n */\nexport class AnimationClip extends AssetObject {\n  private static _tagetTypeMap: Object = {\n    position: TagetType.position,\n    rotation: TagetType.rotation,\n    scale: TagetType.scale\n  };\n\n  public duration: number;\n\n  public durationIndex: number;\n\n  public samplers: ISample[];\n\n  public channels: IChannel[];\n  /**\n   * @constructor\n   * @param {string} name\n   */\n  constructor(public readonly name: string) {\n    super();\n\n    /** @member {Array} */\n    this.samplers = [];\n\n    /** @member {Array} */\n    this.channels = [];\n  }\n\n  /**\n   * 添加一个 sampler\n   * @param {Float32Array} _input\n   * @param {Float32Array} _output\n   * @param {number} _outputSize\n   * @param {constant} _interpolation\n   */\n  public addSampler(\n    _input: List,\n    _output: List,\n    _outputSize: number,\n    _interpolation: InterpolationType = InterpolationType.LINEAR\n  ) {\n    // FIXME - adapt old error animation export file\n    if (_interpolation === InterpolationType.CUBICSPLINE) {\n      if (_outputSize <= 4) {\n        _interpolation = InterpolationType.LINEAR;\n      } else {\n        _outputSize /= 3;\n      }\n    }\n\n    // sampler object, defines an curve\n    const sampler = {\n      input: _input,\n      output: _output,\n      outputSize: _outputSize,\n      interpolation: _interpolation\n    };\n    this.samplers.push(sampler);\n  }\n\n  /**\n   * 添加 channel\n   * @param {number} samplerIndex\n   * @param {string} targetID, Entity name\n   * @param {string} targetPath, Transform property name: position, rotation, scale\n   */\n  public addChannel(samplerIndex: number, targetID: string, targetPath: string) {\n    const bindSampler = this.samplers[samplerIndex];\n\n    let tagetType: TagetType = AnimationClip._tagetTypeMap[targetPath];\n    // channel object, bind a Sample to an Object property\n    const channel = {\n      sampler: bindSampler,\n      target: {\n        id: targetID,\n        path: targetPath,\n        pathType: tagetType ?? TagetType.other\n      }\n    };\n\n    this.channels.push(channel);\n  }\n\n  /**\n   * 取得 channel 的总数\n   * @return {number} number of channels\n   */\n  public getChannelCount(): number {\n    return this.channels.length;\n  }\n\n  /**\n   * 取得 channel 的作用的 object\n   * @return channel objects\n   * @param {number} channelIndex\n   */\n  public getChannelObject(channelIndex: number) {\n    return this.channels[channelIndex];\n  }\n\n  /**\n   * 取得 channel 的 frame count\n   * @return channel frame count\n   * @param {number} channelIndex\n   */\n  public getFrameCount(channelIndex: number): number {\n    const sampler = this.channels[channelIndex].sampler;\n    return sampler.input.length;\n  }\n\n  /**\n   * 取得 channel 的 frame time\n   * @return channel frame time\n   * @param {number} channelIndex\n   * @param {number} frameIndex\n   */\n  public getFrameTime(channelIndex: number, frameIndex: number): number {\n    const sampler = this.channels[channelIndex].sampler;\n    return sampler.input[frameIndex];\n  }\n\n  /**\n   * 取得 channel 的时间长度\n   * @return channel time length\n   * @param {number} channelIndex\n   */\n  public getChannelTimeLength(channelIndex: number): number {\n    const sampler = this.channels[channelIndex].sampler;\n    const frameCount = sampler.input.length;\n    return sampler.input[frameCount - 1];\n  }\n\n  /**\n   * 取得 channel 的值\n   * @return channel value\n   * @param {number} channelIndex\n   */\n  public createChannelValue(channelIndex: number): number | Float32Array | number[] {\n    const sampler = this.channels[channelIndex].sampler;\n\n    return new Float32Array(sampler.outputSize);\n  }\n\n  /**\n   * @private\n   * @param {Value} outValue\n   * @param {number} channelIndex\n   * @param {number} frameIndex\n   * @param {number} nextFrameIndex\n   * @param {number} alpha\n   */\n  public evaluate(\n    outValue: Value,\n    channelIndex: number,\n    frameIndex: number,\n    nextFrameIndex: number,\n    alpha: number\n  ): Value {\n    const channel = this.channels[channelIndex];\n    const output = channel.sampler.output;\n    const outputSize = channel.sampler.outputSize;\n\n    switch (channel.sampler.interpolation) {\n      case InterpolationType.CUBICSPLINE:\n        this.evaluateCubicSpline(outValue, output, outputSize, frameIndex, nextFrameIndex, alpha);\n        break;\n      case InterpolationType.LINEAR:\n        this.evaluateLinear(outValue, output, outputSize, frameIndex, nextFrameIndex, alpha);\n        break;\n    }\n\n    return outValue;\n  }\n\n  public evaluateCubicSpline(\n    outValue: Value,\n    output: List,\n    outputSize: number,\n    frameIndex: number,\n    nextFrameIndex: number,\n    alpha: number\n  ) {\n    const squared = alpha * alpha;\n    const cubed = alpha * squared;\n    const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\n    const part2 = -2.0 * cubed + 3.0 * squared;\n    const part3 = cubed - 2.0 * squared + alpha;\n    const part4 = cubed - squared;\n\n    for (let i = outputSize; i >= 0; i--) {\n      const t1 = output[frameIndex * outputSize * 3 + i];\n      const v1 = output[frameIndex * outputSize * 3 + outputSize + i];\n      const t2 = output[frameIndex * outputSize * 3 + outputSize * 2 + i];\n      const v2 = output[nextFrameIndex * outputSize * 3 + outputSize + i];\n\n      outValue[i] = v1 * part1 + v2 * part2 + t1 * part3 + t2 * part4;\n    }\n  }\n\n  public evaluateLinear(\n    outValue: Value,\n    output: List,\n    outputSize: number,\n    frameIndex: number,\n    nextFrameIndex: number,\n    alpha: number\n  ) {\n    switch (outputSize) {\n      case 1:\n        outValue[0] = output[frameIndex] * (1 - alpha) + output[nextFrameIndex] * alpha;\n        break;\n      case 4:\n        // const start = new Quaternion(\n        //   output[frameIndex * outputSize],\n        //   output[frameIndex * outputSize + 1],\n        //   output[frameIndex * outputSize + 2],\n        //   output[frameIndex * outputSize + 3]\n        // );\n        // const end = new Quaternion(\n        //   output[nextFrameIndex * outputSize],\n        //   output[nextFrameIndex * outputSize + 1],\n        //   output[nextFrameIndex * outputSize + 2],\n        //   output[nextFrameIndex * outputSize + 3]\n        // );\n        // Quaternion.slerp(start, end, alpha, <Quaternion>outValue);\n        this._quaSlerp(outValue, output, frameIndex * outputSize, output, nextFrameIndex * outputSize, alpha);\n        break;\n      default:\n        for (let i = outputSize; i >= 0; i--) {\n          outValue[i] =\n            output[frameIndex * outputSize + i] * (1 - alpha) + output[nextFrameIndex * outputSize + i] * alpha;\n        }\n        break;\n    } // end of switch\n  }\n\n  private _quaSlerp(out, a, aIndex, b, bIndex, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0 + aIndex],\n      ay = a[1 + aIndex],\n      az = a[2 + aIndex],\n      aw = a[3 + aIndex];\n    let bx = b[0 + bIndex],\n      by = b[1 + bIndex],\n      bz = b[2 + bIndex],\n      bw = b[3 + bIndex];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n      // standard case (slerp)\n      omega = Math.acos(cosom);\n      sinom = Math.sin(omega);\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      // \"from\" and \"to\" quaternions are very close\n      //  ... so we can do a linear interpolation\n      scale0 = 1.0 - t;\n      scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n  }\n}\n","import { Event } from \"../base/Event\";\nimport { EventDispatcher } from \"../base/EventDispatcher\";\nimport { Logger } from \"../base/Logger\";\nimport { Component } from \"../Component\";\nimport { Entity } from \"../Entity\";\nimport { SkinnedMeshRenderer } from \"../mesh/SkinnedMeshRenderer\";\nimport { AnimationClip } from \"./AnimationClip\";\nimport { AnimationEvent, WrapMode } from \"./AnimationConst\";\nimport { AnimationOptions, IChannelState, IChannelTarget } from \"./types\";\n\n/**\n * AnimationClip playback\n * @extends EventDispatcher\n * @see class AnimationClip\n * @private\n */\nexport class AnimationLayer extends EventDispatcher {\n  /**\n   * @return is playing˝\n   */\n  get isPlaying(): boolean {\n    return this._animClip && this._isPlaying;\n  }\n\n  public layerWeight: number;\n\n  public mixTagetLayer: AnimationLayer;\n\n  public isFading: number;\n\n  public fadeDeltaTime: number;\n\n  public crossFadeDuration: number;\n\n  public fadeDuration: number;\n\n  public crossFadeDeltaTime: number;\n\n  public isMixLayer: boolean;\n\n  public hasMixLayer: boolean;\n\n  public mixEntity: Entity;\n\n  private _activedEvents: Event[];\n\n  private _animClip: AnimationClip;\n\n  private _isPlaying: boolean;\n\n  private _wrapMode: WrapMode;\n\n  private _channelStates: IChannelState[];\n\n  private _animClipLength: number;\n\n  private _frameEvents: any[];\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.layerWeight = 1.0;\n\n    this._activedEvents = [];\n  }\n\n  /**\n   * @param {AnimationClip} nextAnimClip, anim clip to playback next\n   * @param {Entity} rootEntity\n   * @return can mix with current AnimationClip\n   */\n  public canMix(nextAnimClip: AnimationClip, rootEntity: Entity): boolean {\n    if (!this._animClip || !this._isPlaying || this.isMixLayer || this.isFading) {\n      return false;\n    }\n\n    if (this._animClip.getChannelCount() !== nextAnimClip.getChannelCount()) {\n      return false;\n    }\n\n    const count = this._animClip.getChannelCount();\n    for (let i = count - 1; i >= 0; i--) {\n      const curChannel = this._animClip.getChannelObject(i);\n      const curTargetObject = this._findChannelTarget(rootEntity, curChannel.target);\n\n      const nextChannel = nextAnimClip.getChannelObject(i);\n      const nextTargetObject = this._findChannelTarget(rootEntity, nextChannel.target);\n\n      if (curTargetObject !== nextTargetObject) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * mix animClip with target animationLayer\n   * @param {AnimationClip} animClip, anim clip to mix\n   * @param {AnimationLayer} targetLayer, target animationLayer\n   * @param {Entity} rootEntity, root node of skeleton animation\n   * @param {Entity} mixNode, mix bone node\n   * @param {AnimationOptions} options, animation events options\n   */\n  public mix(\n    animClip: AnimationClip,\n    targetLayer: AnimationLayer,\n    rootEntity: Entity,\n    mixEntity: Entity,\n    options: { wrapMode?: WrapMode } = {}\n  ) {\n    this._isPlaying = targetLayer.isPlaying;\n    this._animClip = animClip;\n    this._wrapMode = typeof options.wrapMode !== \"undefined\" ? options.wrapMode : targetLayer._wrapMode;\n\n    this._addEvents(options);\n\n    this._channelStates = [];\n    this._animClipLength = 0;\n\n    // -- create new state object\n    if (this._isPlaying) {\n      const targetChannelStates = targetLayer._channelStates;\n      const count = this._animClip.getChannelCount();\n      for (let i = count - 1; i >= 0; i--) {\n        const channel = this._animClip.getChannelObject(i);\n        const targetObject = this._findChannelTarget(mixEntity, channel.target);\n        this._channelStates[i] = {\n          frameTime: 0.0,\n          currentFrame: 0,\n          currentValue: this._animClip.createChannelValue(i),\n          mixWeight: targetObject ? 1 : 0\n        };\n\n        targetChannelStates[i].mixWeight =\n          targetChannelStates[i].mixWeight === undefined ? 1 : targetChannelStates[i].mixWeight;\n        if (targetChannelStates[i].mixWeight === 1) {\n          targetChannelStates[i].mixWeight = targetObject ? 0 : 1;\n        }\n\n        const channelTimeLength = this._animClip.getChannelTimeLength(i);\n        this._animClipLength = this._animClipLength > channelTimeLength ? this._animClipLength : channelTimeLength;\n      } // end of for\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public removeMixWeight() {\n    const count = this._channelStates.length;\n    for (let i = count - 1; i >= 0; i--) {\n      if (this._channelStates[i].mixWeight === 1) {\n        this.mixTagetLayer._channelStates[i].mixWeight = 1;\n      }\n    }\n  }\n\n  /**\n   * play specify anim clip\n   * @param {AnimationClip} animClip, anim clip to playback\n   * @param {Entity} rootEntity, root node of Skeleton Animation\n   * @param {AnimationOptions} options\n   */\n  public play(\n    animClip: AnimationClip,\n    rootEntity: Entity,\n    options: AnimationOptions = { wrapMode: WrapMode.LOOP }\n  ): false | IChannelTarget[] {\n    this._isPlaying = !!animClip;\n    this._animClip = animClip;\n    this._wrapMode = typeof options.wrapMode !== \"undefined\" ? options.wrapMode : WrapMode.LOOP;\n\n    this._addEvents(options);\n\n    this._channelStates = [];\n    this._animClipLength = 0;\n\n    // -- create new state object\n    if (this._isPlaying) {\n      const count = this._animClip.getChannelCount();\n      const channelTargets: IChannelTarget[] = [];\n      for (let i = count - 1; i >= 0; i--) {\n        const channel = this._animClip.getChannelObject(i);\n        const targetObject = this._findChannelTarget(rootEntity, channel.target);\n        if (!targetObject) {\n          Logger.warn(\"Can not find channel target:\" + channel.target.id);\n        }\n        this._channelStates[i] = {\n          frameTime: 0.0,\n          currentFrame: 0,\n          currentValue: this._animClip.createChannelValue(i)\n        };\n\n        channelTargets[i] = {\n          targetObject,\n          path: channel.target.path,\n          pathType: channel.target.pathType,\n          outputSize: channel.sampler.outputSize\n        };\n\n        const channelTimeLength = this._animClip.getChannelTimeLength(i);\n        this._animClipLength = this._animClipLength > channelTimeLength ? this._animClipLength : channelTimeLength;\n      } // end of for\n\n      return channelTargets;\n    }\n\n    return false;\n  }\n\n  /**\n   * stop play anim clip\n   * @param {boolean} rightnow stop it immediately, or it will stop at the end of the clip\n   */\n  public stop(rightnow: boolean) {\n    if (!this._animClip || !this._isPlaying) {\n      return;\n    }\n\n    if (rightnow) {\n      this._isPlaying = false;\n    } else {\n      this._wrapMode = WrapMode.ONCE;\n    }\n  }\n\n  /**\n   * update animation states only\n   * @param {number} deltaTime\n   */\n  public updateState(deltaTime: number) {\n    if (!this._animClip || !this._isPlaying) {\n      return;\n    }\n\n    // 更新Animation Layer 的权重\n    if (this.isFading) {\n      this.fadeDeltaTime += deltaTime;\n      this.layerWeight = 1.0 - this.fadeDeltaTime / this.fadeDuration;\n      if (this.layerWeight <= 0) {\n        this._isPlaying = false;\n      }\n    } else if (this.crossFadeDuration) {\n      this.crossFadeDeltaTime += deltaTime;\n      this.layerWeight = this.crossFadeDeltaTime / this.crossFadeDuration;\n      if (this.layerWeight >= 1.0) {\n        this.layerWeight = 1.0;\n        delete this.crossFadeDuration;\n      }\n    }\n\n    deltaTime = deltaTime / 1000;\n    this._activeEvents(deltaTime);\n\n    // -- update channelStates\n    const count = this._animClip.getChannelCount();\n    let playingCount = 0;\n    for (let i = count - 1; i >= 0; i--) {\n      if (this._updateChannelState(deltaTime, i)) {\n        playingCount++;\n      }\n    }\n\n    if (playingCount === 0) {\n      this._isPlaying = false;\n\n      if (this.isMixLayer) {\n        this.removeMixWeight();\n      }\n    }\n  }\n\n  /**\n   * @return channel layer weight\n   * @param {number} channelIndex\n   */\n  public getChannelLayerWeight(channelIndex: number): number {\n    if ((this.hasMixLayer || this.isMixLayer) && channelIndex < this._channelStates.length) {\n      const mixWeight = this._channelStates[channelIndex].mixWeight;\n      const layerWeight = this.isMixLayer ? this.mixTagetLayer.layerWeight : this.layerWeight;\n      return mixWeight * layerWeight;\n    }\n    return this.layerWeight;\n  }\n\n  /**\n   * @return channel value\n   * @param {number} channelIndex\n   */\n  public getChannelValue(channelIndex: number) {\n    return this._channelStates[channelIndex].currentValue;\n  }\n\n  /**\n   * 触发动画事件\n   */\n  public triggerEvents() {\n    this._activedEvents &&\n      this._activedEvents.forEach((event) => {\n        this.trigger(event);\n      });\n\n    this._activedEvents.length = 0;\n  }\n\n  /**\n   * 跳转到某一帧\n   * @param {number} frameTime\n   */\n  public jumpToFrame(frameTime: number) {\n    const count = this._animClip.getChannelCount();\n    for (let i = count - 1; i >= 0; i--) {\n      // 1. - clear pre frameTime\n      const channelState = this._channelStates[i];\n      channelState.frameTime = 0;\n\n      // 2. - update new frameTime\n      this._updateChannelState(frameTime, i);\n    }\n  }\n\n  /**\n   * update state and value of channel\n   * @param {float} deltaTime\n   * @param {number} channelIndex\n   * @private\n   */\n  public _updateChannelState(deltaTime, channelIndex) {\n    const animClip = this._animClip;\n    const channelState = this._channelStates[channelIndex];\n    const animClipLength = animClip.getChannelTimeLength(channelIndex);\n\n    channelState.frameTime += deltaTime;\n    if (channelState.frameTime > animClipLength) {\n      switch (this._wrapMode) {\n        case WrapMode.ONCE:\n          channelState.frameTime = animClipLength;\n          break;\n        case WrapMode.LOOP:\n          channelState.frameTime = channelState.frameTime % this._animClipLength;\n          break;\n        default:\n          Logger.error(\"Unknown Anim wrap Mode: \" + this._wrapMode);\n      }\n    } // end of if\n\n    if (channelState.mixWeight && channelState.mixWeight === 0) {\n      return true;\n    }\n\n    const frameTime = Math.min(channelState.frameTime, animClipLength);\n    const lerpState = this._getKeyAndAlpha(animClip.getChannelObject(channelIndex), frameTime);\n    channelState.currentValue = animClip.evaluate(\n      channelState.currentValue,\n      channelIndex,\n      lerpState.currentKey,\n      lerpState.nextKey,\n      lerpState.alpha\n    );\n\n    if (this._wrapMode === WrapMode.ONCE && channelState.frameTime >= animClipLength) {\n      return false;\n    }\n    return true;\n  }\n  // -- private ----------------------------------------------------------\n  /**\n   * @param {Object} add animation events\n   * @private\n   */\n  private _addEvents(options: any) {\n    this.removeAllEventListeners();\n\n    this._frameEvents = [];\n    if (options.events) {\n      let frameEventIndex = 0;\n      for (let i = options.events.length - 1; i >= 0; i--) {\n        const event = options.events[i];\n        let eventType = event.type;\n        if (event.type === AnimationEvent.FRAME_EVENT) {\n          eventType = \"frameEvent\" + frameEventIndex;\n          frameEventIndex++;\n          this._frameEvents.push({\n            eventType,\n            triggerTime: event.triggerTime,\n            triggered: false\n          });\n        }\n        this.addEventListener(eventType, (e) => {\n          event.callback();\n        });\n      } // end of for\n    } // end of if\n  }\n\n  /**\n   * 激活动画事件\n   * @param {number} deltaTime\n   * @private\n   */\n  private _activeEvents(deltaTime: number) {\n    // 触发Frame Event\n    const index = this._animClip.durationIndex;\n\n    if (this._frameEvents.length > 0 && this._channelStates.length > 0) {\n      const curFrameTime = this._channelStates[index].frameTime + deltaTime;\n      for (let i = this._frameEvents.length - 1; i >= 0; i--) {\n        const frameEvent = this._frameEvents[i];\n        if (!frameEvent.triggered && curFrameTime > frameEvent.triggerTime) {\n          this._activedEvents.push(new Event(frameEvent.eventType, this));\n          frameEvent.triggered = true;\n        }\n      }\n    }\n\n    if (this._channelStates.length > 0 && this._channelStates[index].frameTime + deltaTime >= this._animClip.duration) {\n      if (this._wrapMode === WrapMode.LOOP) {\n        // 重置Frame Event状态\n        if (this._frameEvents.length > 0) {\n          for (let i = this._frameEvents.length - 1; i >= 0; i--) {\n            this._frameEvents[i].triggered = false;\n          }\n        }\n        // 激活Loop End Event\n        if (this.hasEvent(AnimationEvent.LOOP_END)) {\n          this._activedEvents.push(new Event(AnimationEvent.LOOP_END, this));\n        }\n      } else if (this.hasEvent(AnimationEvent.FINISHED)) {\n        // 激活Finish Event\n        this._activedEvents.push(new Event(AnimationEvent.FINISHED, this));\n      }\n    }\n  }\n\n  /**\n   * update state of channel\n   * @param {Entity} rootNode\n   * @param {object} target\n   * @private\n   */\n  private _findChannelTarget(rootNode: Entity, target: any): Entity | Component {\n    const targetID = target.id;\n    let targetSceneObject: Entity = null;\n    if (rootNode.name === targetID) {\n      targetSceneObject = rootNode;\n    } else {\n      targetSceneObject = rootNode.findByName(targetID);\n    }\n\n    if (target.path === \"weights\") {\n      return targetSceneObject.getComponent(SkinnedMeshRenderer);\n    } else {\n      return targetSceneObject;\n    }\n  }\n\n  /**\n   * @return current and next key id, current alpha\n   * @param {number} channel\n   * @param {float} time\n   * @private\n   */\n  private _getKeyAndAlpha(channel, time: number) {\n    let keyTime = 0;\n    let currentKey = 0;\n    let nextKey = 0;\n\n    const timeKeys = channel.sampler.input;\n    const numKeys = timeKeys.length;\n    for (let i = numKeys - 1; i >= 0; i--) {\n      if (time > timeKeys[i]) {\n        keyTime = time - timeKeys[i];\n        currentKey = i;\n        break;\n      }\n    }\n\n    nextKey = currentKey + 1;\n    if (nextKey >= numKeys) {\n      switch (this._wrapMode) {\n        case WrapMode.ONCE:\n          nextKey = numKeys - 1;\n          break;\n        case WrapMode.LOOP:\n          nextKey = 0;\n          break;\n      }\n    }\n\n    const keyLength = timeKeys[nextKey] - timeKeys[currentKey];\n    const alpha = nextKey === currentKey || keyLength < 0.00001 ? 1 : keyTime / keyLength;\n\n    return {\n      currentKey,\n      nextKey,\n      alpha\n    };\n  }\n}\n","import { CommonMaterial } from \"./CommonMaterial\";\nimport ConstantShader from \"./shader/Constant.glsl\";\n\n/**\n * 显示固定颜色（不计算光照）的材质\n * color = <emission> + <ambient> * al\n */\nexport class ConstantMaterial extends CommonMaterial {\n  /**\n   * 生成内部所使用的 Technique 对象\n   * @private\n   */\n  _generateTechnique() {\n    this._internalGenerate(\"ConstantMaterial\", ConstantShader);\n  }\n}\n","import { DataType, RenderState } from \"../base/Constant\";\nimport { Texture2D } from \"../texture/Texture2D\";\nimport { CommonMaterial } from \"./CommonMaterial\";\nimport FRAG_SHADER from \"./shader/Texture.glsl\";\n\n/**\n * 无光照贴图材质\n */\nexport class TextureMaterial extends CommonMaterial {\n  static TECH_NAME = \"Texture\";\n  static DISABLE_SHARE = true;\n\n  /**\n   * 构造函数\n   * @param {string} name 名称\n   */\n  constructor(name) {\n    super(name || \"TextureMaterial\");\n  }\n\n  _generateTechnique() {\n    this._internalGenerate(\"Texture\", FRAG_SHADER);\n  }\n\n  /**\n   * 设定材质参数值\n   * @param {string} name 参数名称\n   * @param {*} value 参数值\n   */\n  setValue(name, value) {\n    if (name === \"doubleSided\") {\n      this._setDoubleSidedDisplay(value);\n    }\n\n    super.setValue(name, value);\n  }\n\n  /**\n   * 纹理贴图\n   * @member {Texture2D}\n   */\n  set texture(v) {\n    this.setValue(\"u_diffuse\", v);\n  }\n  get texture() {\n    return this.getValue(\"u_diffuse\");\n  }\n\n  /**\n   * 是否双面显示\n   * @member {boolean}\n   */\n  set doubleSided(v) {\n    this.setValue(\"doubleSided\", v);\n  }\n  get doubleSided() {\n    return this.getValue(\"doubleSided\");\n  }\n\n  /**\n   * 添加 uniform 定义\n   * @private\n   */\n  _generateFragmentUniform() {\n    const uniforms: any = {};\n\n    if (this.texture instanceof Texture2D) {\n      uniforms.u_diffuse = {\n        name: \"u_diffuse\",\n        paramName: \"_MainTex\",\n        type: DataType.SAMPLER_2D\n      };\n    }\n    return {\n      ...super._generateFragmentUniform(),\n      ...uniforms\n    };\n  }\n\n  _generateMacros() {\n    const macros = super._generateMacros();\n\n    if (this.texture instanceof Texture2D) macros.push(\"O3_DIFFUSE_TEXTURE\");\n\n    return macros;\n  }\n\n  /**\n   * 设置材质是否双面显示\n   * @private\n   */\n  _setDoubleSidedDisplay(value) {\n    this._technique.states.disable = [];\n\n    if (value) {\n      this._technique.states.disable.push(RenderState.CULL_FACE);\n    }\n  }\n}\n","import { BlendFunc, DataType, MaterialType, RenderState } from \"../base/Constant\";\nimport { Texture2D } from \"../texture/Texture2D\";\nimport { CommonMaterial } from \"./CommonMaterial\";\nimport FRAG_SHADER from \"./shader/Texture.glsl\";\n\n/**\n * 支持透明的无光照贴图材质\n */\nexport class TransparentMaterial extends CommonMaterial {\n  static TECH_NAME = \"Transparent\";\n  static DISABLE_SHARE = true;\n\n  /**\n   * 构造函数\n   * @param {string} name 名称\n   */\n  constructor(name) {\n    super(name || \"TransparentMaterial\");\n  }\n\n  _generateTechnique() {\n    this.renderStates = {\n      enable: [RenderState.BLEND],\n      disable: [RenderState.CULL_FACE],\n      functions: {\n        blendFunc: [BlendFunc.SRC_ALPHA, BlendFunc.ONE_MINUS_SRC_ALPHA],\n        depthMask: [false]\n      }\n    };\n    this.renderType = MaterialType.TRANSPARENT;\n\n    this._internalGenerate(\"Transparent\", FRAG_SHADER);\n  }\n\n  /**\n   * 纹理贴图\n   * @member {Texture2D}\n   */\n  set texture(v) {\n    this.setValue(\"u_diffuse\", v);\n  }\n\n  get texture() {\n    return this.getValue(\"u_diffuse\");\n  }\n\n  /**\n   * 添加 uniform 定义\n   * @private\n   */\n  _generateFragmentUniform() {\n    const uniforms: any = {};\n    if (this.texture instanceof Texture2D) {\n      uniforms.u_diffuse = {\n        name: \"u_diffuse\",\n        paramName: \"_MainTex\",\n        type: DataType.SAMPLER_2D\n      };\n    }\n    return {\n      ...super._generateFragmentUniform(),\n      ...uniforms\n    };\n  }\n\n  _generateMacros() {\n    const macros = super._generateMacros();\n\n    if (this.texture instanceof Texture2D) macros.push(\"O3_DIFFUSE_TEXTURE\");\n\n    return macros;\n  }\n}\n","import { BlendFunc, DataType, RenderState, UniformSemantic } from \"../base/Constant\";\nimport { Material } from \"../material/Material\";\nimport { RenderTechnique } from \"../material/RenderTechnique\";\nimport { TechniqueStates } from \"../material/type\";\nimport { DisableConfig, EnableConfig, FunctionConfig } from \"./type\";\n\nexport class ShaderMaterial extends Material {\n  // Vertex Shader 代码\n  public vertexShader: string = \"\";\n  // Fragment Shader 代码\n  public fragmentShader: string = \"\";\n  // 是否可用\n  public isValid: boolean = true;\n  // Attribute记录对象\n  public attributes = {};\n  // Unifrom记录数组\n  private _uniforms = ShaderMaterial.commonUniforms;\n  // 渲染状态控制对象\n  private _renderStates: TechniqueStates = {\n    enable: [],\n    disable: [],\n    functions: {}\n  };\n  // 渲染状态控制对象中的 enable 配置项\n  private _enableConfig: EnableConfig = [];\n  // 渲染状态控制对象中的 disable 配置项\n  private _disableConfig: DisableConfig = [];\n  // 渲染状态控制对象中的 function 配置项\n  private _functionsConfig: FunctionConfig = {\n    blendFunc: [BlendFunc.SRC_ALPHA, BlendFunc.ONE_MINUS_SRC_ALPHA]\n  };\n\n  constructor(name) {\n    super(name);\n  }\n\n  // 开始渲染指定对象\n  prepareDrawing(context, component, primitive) {\n    const camera = context.camera;\n    if (!this._technique) {\n      const tech = this._generateTechnique(camera, component, primitive);\n      this._technique = tech;\n    }\n    super.prepareDrawing(context, component, primitive);\n  }\n\n  // 更新technique\n  updateTechnique() {\n    this._technique = null;\n  }\n\n  // 生成内部的 Technique 对象\n  _generateTechnique(camera, component, primitive) {\n    const tech = new RenderTechnique(\"ShaderMaterial\");\n\n    tech.isValid = this.isValid;\n    tech.uniforms = this.uniforms;\n    tech.attributes = this.attributes;\n    tech.states = this.renderStates;\n    tech.vertexShader = this.vertexShader;\n    tech.fragmentShader = this.fragmentShader;\n    return tech;\n  }\n\n  addState(key: string, state: Array<any>) {\n    this.renderStates[key] = union(this.renderStates[key], state);\n  }\n\n  removeState(key: string, state: any) {\n    this.renderStates[key] = this.renderStates[key].filter((value) => value !== state);\n  }\n\n  get renderStates() {\n    return this._renderStates;\n  }\n\n  set renderStates(value) {\n    const { enable = [], disable = [], functions = {} } = value;\n    // 为了防止冲突，把预置的几个属性放在_enableConfig里面，此处需过滤掉\n    const enableState = enable.filter((value) => ShaderMaterial.commonEnable.indexOf(value) < 0);\n    const disableState = disable.filter((value) => ShaderMaterial.commonDisable.indexOf(value) < 0);\n    this._renderStates.enable = union(enableState, this._enableConfig);\n    this._renderStates.disable = union(disableState, this._disableConfig);\n    this._renderStates.functions = Object.assign({}, functions, this._functionsConfig);\n  }\n\n  get uniforms() {\n    return this._uniforms;\n  }\n\n  set uniforms(value) {\n    this._uniforms = Object.assign({}, ShaderMaterial.commonUniforms, value);\n  }\n\n  // 是否开启片元的颜色融合计算\n  set blend(value: boolean) {\n    if (value) {\n      this._enableConfig = union(this._enableConfig, [RenderState.BLEND]);\n    } else {\n      this._enableConfig = this._enableConfig.filter((state) => state !== RenderState.BLEND);\n      this.removeState(\"enable\", RenderState.BLEND);\n    }\n    this.renderStates = this._renderStates;\n  }\n\n  // 混合源因子\n  set blendSrcFactor(value: string) {\n    this._functionsConfig.blendFunc[0] = value;\n    this.renderStates = this._renderStates;\n  }\n\n  // 混合目标因子\n  set blendDstFactor(value: string) {\n    this._functionsConfig.blendFunc[1] = value;\n    this.renderStates = this._renderStates;\n  }\n\n  // 是否双面显示\n  set doubleSide(value: boolean) {\n    if (value) {\n      this._disableConfig = union(this._disableConfig, [RenderState.CULL_FACE]);\n    } else {\n      this._disableConfig = this._disableConfig.filter((state) => state !== RenderState.CULL_FACE);\n      this.removeState(\"disable\", RenderState.CULL_FACE);\n    }\n    this.renderStates = this._renderStates;\n  }\n\n  // 是否开启深度测试\n  set depthTest(value: boolean) {\n    if (!value) {\n      this._disableConfig = union(this._disableConfig, [RenderState.DEPTH_TEST]);\n    } else {\n      this._disableConfig = this._disableConfig.filter((state) => state !== RenderState.DEPTH_TEST);\n      this.removeState(\"disable\", RenderState.DEPTH_TEST);\n    }\n    this.renderStates = this._renderStates;\n  }\n\n  static commonUniforms = {\n    matModelViewProjection: {\n      name: \"matModelViewProjection\",\n      semantic: UniformSemantic.MODELVIEWPROJECTION,\n      type: DataType.FLOAT_MAT4\n    },\n    matModelView: {\n      name: \"matModelView\",\n      semantic: UniformSemantic.MODELVIEW,\n      type: DataType.FLOAT_MAT4\n    }\n  };\n\n  static commonEnable = [RenderState.BLEND];\n  static commonDisable = [RenderState.CULL_FACE, RenderState.DEPTH_TEST];\n}\n\nexport function union(arr1: Array<any>, arr2: Array<any>): Array<any> {\n  return arr1.concat(arr2.filter((v) => !(arr1.indexOf(v) > -1)));\n}\n","/**\n * 绘制组，描述了绘制范围。\n */\nexport class DrawGroup {\n  /** 偏移。 */\n  offset: number = 0;\n  /** 数量。 */\n  count: number = 0;\n}\n","import { AssetObject } from \"../asset/AssetObject\";\nimport { DrawGroup } from \"../graphic/DrawGroup\";\nimport { IndexFormat } from \"../graphic/enums/IndexFormat\";\nimport { PrimitiveTopology } from \"../graphic/enums/PrimitiveTopology\";\nimport { IndexBuffer } from \"../graphic/IndexBuffer\";\nimport { IndexBufferBinding } from \"../graphic/IndexBufferBinding\";\nimport { VertexBufferBinding } from \"../graphic/VertexBufferBinding\";\nimport { VertexElement } from \"../graphic/VertexElement\";\nimport { Primitive } from \"../primitive/Primitive\";\nimport { BoundingBox } from \"../RenderableComponent\";\n\n/**\n * 缓冲几何体。\n */\nexport class BufferGeometry extends AssetObject {\n  private static _geometryCount = 0;\n\n  _primitive: Primitive;\n\n  private _bounds: BoundingBox;\n  private _drawGroups: DrawGroup[] = [];\n\n  /**\n   * 顶点缓冲绑定信息集合。\n   */\n  get vertexBufferBindings(): Readonly<VertexBufferBinding[]> {\n    return this._primitive.vertexBufferBindings;\n  }\n\n  /**\n   * 顶点元素集合。\n   */\n  get vertexElements(): Readonly<VertexElement[]> {\n    return this._primitive.vertexElements;\n  }\n\n  /**\n   * 索引缓冲绑定信息。\n   */\n  get indexBufferBinding(): IndexBufferBinding {\n    return this._primitive.indexBufferBinding;\n  }\n\n  /**\n   * 实例数量,0 表示关闭。\n   */\n  get instancedCount(): number {\n    return this._primitive.instanceCount;\n  }\n\n  set instancedCount(count: number) {\n    this._primitive.instanceCount = count;\n  }\n\n  /**\n   * 绘制基元拓扑模式。\n   */\n  set primitiveTopology(topology: PrimitiveTopology) {\n    this._primitive.primitiveTopology = topology;\n  }\n\n  get primitiveTopology(): PrimitiveTopology {\n    return this._primitive.primitiveTopology;\n  }\n\n  /**\n   * 绘制组集合。\n   */\n  get drawGroups(): Readonly<DrawGroup[]> {\n    return this._drawGroups;\n  }\n\n  /**\n   * 第一个绘制组。\n   */\n  get drawGroup(): DrawGroup | null {\n    return this._drawGroups[0] || null;\n  }\n\n  /**\n   * 绘制组数量。\n   */\n  get drawGroupCount(): number {\n    return this._drawGroups.length;\n  }\n\n  /**\n   * 包围体。\n   */\n  get bounds(): any {\n    return this._bounds;\n  }\n\n  set bounds(value: any) {\n    this._bounds = value;\n  }\n\n  /**\n   * 创建几何体缓冲。\n   * @param name - 名称\n   */\n  constructor(name?: string) {\n    super();\n    name = name || \"BufferGeometry\" + BufferGeometry._geometryCount++;\n\n    this._primitive = new Primitive();\n    this._drawGroups.push(new DrawGroup());\n  }\n\n  /**\n   * 设置顶点缓冲。\n   * @param vertexBufferBinding - 顶点缓冲绑定\n   */\n  setVertexBufferBindings(vertexBufferBinding: VertexBufferBinding): void;\n\n  /**\n   * 设置顶点缓冲。\n   * @param vertexBufferBinding - 顶点缓冲绑定\n   * @param index - 顶点缓冲索引\n   */\n  setVertexBufferBindings(vertexBufferBinding: VertexBufferBinding, index: number): void;\n\n  /**\n   * 设置顶点缓冲。\n   * @param vertexBufferBindings - 顶点缓冲绑定\n   */\n  setVertexBufferBindings(vertexBufferBindings: VertexBufferBinding[]): void;\n\n  /**\n   * 设置顶点缓冲。\n   * @param vertexBufferBindings - 顶点缓冲绑定\n   * @param firstIndex - 第一个顶点缓冲索引\n   */\n  setVertexBufferBindings(vertexBufferBindings: VertexBufferBinding[], firstIndex: number): void;\n\n  setVertexBufferBindings(\n    vertexBufferBindings: VertexBufferBinding | VertexBufferBinding[],\n    firstIndex: number = 0\n  ): void {\n    this._primitive.setVertexBufferBindings(vertexBufferBindings, firstIndex);\n  }\n\n  /**\n   * 设置索引缓冲。\n   * @param buffer - 索引缓冲\n   * @param format - 索引缓冲格式\n   */\n  setIndexBufferBinding(buffer: IndexBuffer, format: IndexFormat): void {\n    this._primitive.setIndexBufferBinding(buffer, format);\n  }\n\n  /**\n   * 添加顶点元素集合。\n   * @param elements - 顶点元素集合。\n   */\n  addVertexElements(elements: VertexElement | VertexElement[]): void {\n    this._primitive.addVertexElements(elements);\n  }\n\n  /**\n   * 添加绘制组。\n   * @param offset - 偏移\n   * @param count - 数量\n   */\n  addDrawGroup(offset: number, count: number): DrawGroup {\n    const drawGroup = new DrawGroup();\n    drawGroup.offset = offset;\n    drawGroup.count = count;\n    this._drawGroups.push(drawGroup);\n    return drawGroup;\n  }\n\n  /**\n   * 移除绘制组。\n   * @param drawGroup -绘制组。\n   */\n  removeDrawGroup(drawGroup: DrawGroup): void {\n    const drawGroups = this._drawGroups;\n    const index = drawGroups.indexOf(drawGroup);\n    if (index !== -1) {\n      drawGroups.splice(index, 1);\n    }\n  }\n\n  /**\n   * 清空绘制组。\n   */\n  clearDrawGroup(): void {\n    this._drawGroups.length = 0;\n  }\n\n  /**\n   * 释放内部资源对象。\n   */\n  destroy(): void {\n    if (this._primitive) {\n      this._primitive.destroy();\n      this._primitive = null;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _render(): void {}\n}\n","import { Engine } from \"../Engine\";\nimport { GeometryShape } from \"./GeometryShape\";\nimport { FrontFace } from \"../base\";\n\n/**\n * 长方体\n */\nexport class CuboidGeometry extends GeometryShape {\n  /**\n   * 创建长方体。\n   * @param width - 宽\n   * @param height - 高\n   * @param depth - 深\n   * @param engine - 引擎\n   */\n  constructor(width: number = 1, height: number = 1, depth: number = 1, engine?: Engine) {\n    super();\n\n    const halfWidth: number = width / 2;\n    const halfHeight: number = height / 2;\n    const halfDepth: number = depth / 2;\n\n    // prettier-ignore\n    const vertices: Float32Array = new Float32Array([\n    \t// up\n    \t-halfWidth, halfHeight, -halfDepth, 0, 1, 0, 0, 0, halfWidth, halfHeight, -halfDepth, 0, 1, 0, 1, 0, halfWidth, halfHeight, halfDepth, 0, 1, 0, 1, 1, -halfWidth, halfHeight, halfDepth, 0, 1, 0, 0, 1,\n    \t// down\n    \t-halfWidth, -halfHeight, -halfDepth, 0, -1, 0, 0, 1, halfWidth, -halfHeight, -halfDepth, 0, -1, 0, 1, 1, halfWidth, -halfHeight, halfDepth, 0, -1, 0, 1, 0, -halfWidth, -halfHeight, halfDepth, 0, -1, 0, 0, 0,\n    \t// left\n    \t-halfWidth, halfHeight, -halfDepth, -1, 0, 0, 0, 0, -halfWidth, halfHeight, halfDepth, -1, 0, 0, 1, 0, -halfWidth, -halfHeight, halfDepth, -1, 0, 0, 1, 1, -halfWidth, -halfHeight, -halfDepth, -1, 0, 0, 0, 1,\n    \t// right\n    \thalfWidth, halfHeight, -halfDepth, 1, 0, 0, 1, 0, halfWidth, halfHeight, halfDepth, 1, 0, 0, 0, 0, halfWidth, -halfHeight, halfDepth, 1, 0, 0, 0, 1, halfWidth, -halfHeight, -halfDepth, 1, 0, 0, 1, 1,\n    \t// fornt\n    \t-halfWidth, halfHeight, halfDepth, 0, 0, 1, 0, 0, halfWidth, halfHeight, halfDepth, 0, 0, 1, 1, 0, halfWidth, -halfHeight, halfDepth, 0, 0, 1, 1, 1, -halfWidth, -halfHeight, halfDepth, 0, 0, 1, 0, 1,\n    \t// back\n    \t-halfWidth, halfHeight, -halfDepth, 0, 0, -1, 1, 0, halfWidth, halfHeight, -halfDepth, 0, 0, -1, 0, 0, halfWidth, -halfHeight, -halfDepth, 0, 0, -1, 0, 1, -halfWidth, -halfHeight, -halfDepth, 0, 0, -1, 1, 1]);\n\n    // prettier-ignore\n    const indices: Uint16Array = new Uint16Array([\n    \t// up\n    \t0, 2, 1, 2, 0, 3,\n    \t// donw\n    \t4, 6, 7, 6, 4, 5,\n    \t// left\n    \t8, 10, 9, 10, 8, 11,\n    \t// right\n    \t12, 14, 15, 14, 12, 13,\n    \t// fornt\n    \t16, 18, 17, 18, 16, 19,\n    \t// back\n    \t20, 22, 23, 22, 20, 21]);\n    this._initialize(engine, vertices, indices);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { BufferGeometry } from \"../geometry\";\nimport { GeometryShape } from \"./GeometryShape\";\n\n/**\n * SphereGeometry 球体创建类\n * @extends BufferGeometry\n */\nexport class SphereGeometry extends GeometryShape {\n  private _parameters;\n  private _thetaEnd;\n\n  /**\n   * @constructor\n   * @param {number} radius 半径\n   * @param {number} horizontalSegments 水平分段数\n   * @param {number} verticalSegments 垂直分段数\n   * @param {number} alphaStart 水平开始角度\n   * @param {number} alphaRange 水平角度范围\n   * @param {number} thetaStart 垂直开始角度\n   * @param {number} thetaRange 垂直角度范围\n   */\n  constructor(\n    radius?: number,\n    horizontalSegments?: number,\n    verticalSegments?: number,\n    alphaStart?: number,\n    alphaRange?: number,\n    thetaStart?: number,\n    thetaRange?: number,\n    engine?: Engine\n  ) {\n    super();\n    this._parameters = {\n      radius: radius || 1,\n      horizontalSegments: Math.max(3, Math.floor(horizontalSegments) || 8),\n      verticalSegments: Math.max(2, Math.floor(verticalSegments) || 6),\n      alphaStart: alphaStart || 0,\n      alphaRange: alphaRange || Math.PI * 2,\n      thetaStart: thetaStart || 0,\n      thetaRange: thetaRange || Math.PI\n    };\n    this._thetaEnd = this._parameters.thetaStart + this._parameters.thetaRange;\n    this.initialize(engine);\n  }\n\n  /**\n   * 构造球体数据\n   * @private\n   */\n  initialize(engine: Engine) {\n    const { verticalSegments, horizontalSegments } = this._parameters;\n    // 生成经纬线上的几何体顶点的数据\n    let index = 0;\n    const grid = [];\n    const vertices: Float32Array = new Float32Array((verticalSegments + 1) * (horizontalSegments + 1) * 8);\n    const indices = [];\n    // const positions = [];\n    for (let iy = 0; iy <= verticalSegments; iy++) {\n      const verticesRow = [];\n      const v = iy / verticalSegments;\n      for (let ix = 0; ix <= horizontalSegments; ix++) {\n        const u = ix / horizontalSegments;\n        let posX =\n          -this._parameters.radius *\n          Math.cos(this._parameters.alphaStart + u * this._parameters.alphaRange) *\n          Math.sin(this._parameters.thetaStart + v * this._parameters.thetaRange);\n        let posY = this._parameters.radius * Math.cos(this._parameters.thetaStart + v * this._parameters.thetaRange);\n        let posZ =\n          this._parameters.radius *\n          Math.sin(this._parameters.alphaStart + u * this._parameters.alphaRange) *\n          Math.sin(this._parameters.thetaStart + v * this._parameters.thetaRange);\n        posX = Math.abs(posX) < 1e-6 ? 0 : posX;\n        posY = Math.abs(posY) < 1e-6 ? 0 : posY;\n        posZ = Math.abs(posZ) < 1e-6 ? 0 : posZ;\n\n        const offset = index * 8;\n        // POSITION\n        vertices[offset] = posX;\n        vertices[offset + 1] = posY;\n        vertices[offset + 2] = posZ;\n        // NORMAL\n        vertices[offset + 3] = posX;\n        vertices[offset + 4] = posY;\n        vertices[offset + 5] = posZ;\n        // TEXCOORD_0\n        vertices[offset + 6] = u;\n        vertices[offset + 7] = 1 - v;\n\n        verticesRow.push(index++);\n      }\n      grid.push(verticesRow);\n    }\n\n    // 生成所有三角形顶点序号\n    for (let iy = 0; iy < verticalSegments; iy++) {\n      for (let ix = 0; ix < horizontalSegments; ix++) {\n        const a = grid[iy][ix + 1];\n        const b = grid[iy][ix];\n        const c = grid[iy + 1][ix];\n        const d = grid[iy + 1][ix + 1];\n\n        if (iy !== 0 || this._parameters.thetaStart > 0) indices.push(a, b, d);\n        if (iy !== verticalSegments - 1 || this._thetaEnd < Math.PI) indices.push(b, c, d);\n      }\n    }\n\n    this._initialize(engine, vertices, Uint16Array.from(indices));\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { GeometryShape } from \"./GeometryShape\";\n\n/**\n * CubeGeometry 平面创建类\n * @extends BufferGeometry\n */\nexport class PlaneGeometry extends GeometryShape {\n  private _parameters;\n  private halfWidth;\n  private halfHeight;\n\n  /**\n   * @constructor\n   * @param {number} width 宽\n   * @param {number} height 高\n   * @param {number} horizontalSegments 水平分段数\n   * @param {number} verticalSegments 垂直分段数\n   */\n  constructor(\n    width?: number,\n    height?: number,\n    horizontalSegments?: number,\n    verticalSegments?: number,\n    engine?: Engine\n  ) {\n    super();\n    this._parameters = {\n      width: width || 1,\n      height: height || 1,\n      horizontalSegments: Math.floor(horizontalSegments) || 1,\n      verticalSegments: Math.floor(verticalSegments) || 1\n    };\n\n    this.halfWidth = this._parameters.width / 2;\n    this.halfHeight = this._parameters.height / 2;\n    this.initialize(engine);\n  }\n\n  initialize(engine: Engine) {\n    const { verticalSegments, horizontalSegments } = this._parameters;\n    // 生成经纬线上的几何体顶点的数据\n    let index = 0;\n    let offset = 0;\n    const grid = [];\n    const vertices: Float32Array = new Float32Array((verticalSegments + 1) * (horizontalSegments + 1) * 8);\n    const indices: Uint16Array = new Uint16Array(verticalSegments * horizontalSegments * 6);\n\n    for (let iy = 0; iy <= verticalSegments; iy++) {\n      const verticesRow = [];\n      const v = iy / verticalSegments;\n      for (let ix = 0; ix <= horizontalSegments; ix++) {\n        const u = ix / horizontalSegments;\n        const posX = u * this._parameters.width - this.halfWidth;\n        const posY = v * this._parameters.height - this.halfHeight;\n\n        // POSITION\n        vertices[offset++] = posX;\n        vertices[offset++] = posY;\n        vertices[offset++] = 0;\n        // NORMAL\n        vertices[offset++] = 0;\n        vertices[offset++] = 0;\n        vertices[offset++] = 1;\n        // TEXCOORD_0\n        vertices[offset++] = u;\n        vertices[offset++] = 1 - v;\n\n        verticesRow.push(index++);\n      }\n      grid.push(verticesRow);\n    }\n\n    // 生成所有三角形顶点序号\n    index = 0;\n    for (let iy = 0; iy < verticalSegments; iy++) {\n      for (let ix = 0; ix < horizontalSegments; ix++) {\n        const a = grid[iy][ix + 1];\n        const b = grid[iy][ix];\n        const c = grid[iy + 1][ix];\n        const d = grid[iy + 1][ix + 1];\n\n        indices[index++] = a;\n        indices[index++] = c;\n        indices[index++] = b;\n        indices[index++] = a;\n        indices[index++] = d;\n        indices[index++] = c;\n      }\n    }\n\n    this._initialize(engine, vertices, indices);\n  }\n}\n","import { GeometryShape } from \"./GeometryShape\";\nimport { Engine } from \"../Engine\";\nimport { PrimitiveTopology } from \"../graphic/enums/PrimitiveTopology\";\n\ninterface CircleGeometryOptions {\n  radius?: number;\n  segments?: number;\n  thetaStart?: number;\n  thetaLength?: number;\n}\nexport class CircleGeometry extends GeometryShape {\n  /**\n   * 顶点\n   */\n  private radius: number = 1;\n  private segments: number = 16;\n  private thetaStart: number = 0;\n  private thetaLength: number = Math.PI * 2;\n\n  /**\n   * constructor\n   * @param radius 半径\n   */\n  constructor(options: CircleGeometryOptions = {}, engine?: Engine) {\n    super();\n\n    this.primitiveTopology = PrimitiveTopology.Triangles;\n    this.radius = options.radius || this.radius;\n    this.segments = options.segments || this.segments;\n    this.thetaStart = options.thetaStart || this.thetaStart;\n    this.thetaLength = options.thetaLength || this.thetaLength;\n    const { segments, radius } = this;\n\n    // init with center point\n    const vertices: Float32Array = new Float32Array((segments + 2) * 8);\n    // POSITION NORMAL TEXCOORD_0\n    vertices.set([0, 0, 0, 0, 0, 1, 0.5, 0.5]);\n\n    let index = 8;\n    for (let s = 0; s <= segments; s++) {\n      let segment = this.thetaStart + (s / segments) * this.thetaLength;\n      const x = radius * Math.cos(segment);\n      const y = radius * Math.sin(segment);\n\n      // POSITION\n      vertices[index++] = x;\n      vertices[index++] = y;\n      vertices[index++] = 0;\n      // NORMAL\n      vertices[index++] = 0;\n      vertices[index++] = 0;\n      vertices[index++] = 1;\n      // TEXCOORD_0\n      vertices[index++] = (x / radius + 1) * 0.5;\n      vertices[index++] = (y / radius + 1) * 0.5;\n    }\n\n    const indices: Uint16Array = new Uint16Array(segments * 3);\n    index = 0;\n    for (let i = 1; i <= segments; i++) {\n      indices[index++] = i;\n      indices[index++] = i + 1;\n      indices[index++] = 0;\n    }\n\n    this._initialize(engine, vertices, indices);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { VertexElementFormat } from \"../graphic/enums/VertexElementFormat\";\nimport { VertexElement } from \"../graphic/VertexElement\";\nimport { GeometryShape } from \"./GeometryShape\";\nimport { PrimitiveTopology } from \"../graphic/enums/PrimitiveTopology\";\n\n/**\n * 覆盖整个屏幕的一个矩形\n * @private\n */\nexport class ScreenQuadGeometry extends GeometryShape {\n  constructor(engine?: Engine) {\n    super();\n    this.primitiveTopology = PrimitiveTopology.TriangleFan;\n\n    const vertices: Float32Array = new Float32Array([-1, -1, 0, 0, 0, 1, -1, 0, 1, 0, 1, 1, 0, 1, 1, -1, 1, 0, 0, 1]);\n\n    const indices: Uint16Array = new Uint16Array([0, 1, 2, 3]);\n\n    this._initialize(engine, vertices, indices);\n    this._primitive.drawCount = indices.length; //TODO:临时添加,待底层结构调整删除\n  }\n\n  _initialize(engine: Engine, vertices: Float32Array, indices: Uint16Array) {\n    engine = engine || Engine._getDefaultEngine();\n\n    const vertexStride = 20;\n    const vertexElements = [\n      new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"TEXCOORD_0\", 12, VertexElementFormat.Vector2, 0)\n    ];\n    this._initBuffer(engine, vertices, indices, vertexStride, vertexElements);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { VertexElementFormat } from \"../graphic/enums/VertexElementFormat\";\nimport { VertexElement } from \"../graphic/VertexElement\";\nimport { GeometryShape } from \"./GeometryShape\";\n\nexport class TorusGeometry extends GeometryShape {\n  constructor(\n    private parameters: {\n      radius?: number;\n      tube?: number;\n      radialSegments?: number;\n      tubularSegments?: number;\n      arc?: number;\n    } = {},\n    engine?: Engine\n  ) {\n    super();\n\n    this.type = \"TorusBufferGeometry\";\n\n    const radius = this.parameters.radius || 1;\n    const tube = this.parameters.tube || 0.4;\n    const radialSegments = Math.floor(this.parameters.radialSegments) || 8;\n    const tubularSegments = Math.floor(this.parameters.tubularSegments) || 6;\n    const arc = this.parameters.arc || Math.PI * 2;\n\n    // buffers\n    const vertices: Float32Array = new Float32Array((radialSegments + 1) * (tubularSegments + 1) * 3);\n    const indices: Uint16Array = new Uint16Array(radialSegments * tubularSegments * 6);\n\n    // generate vertices, normals and uvs\n    let index = 0;\n    for (let j = 0; j <= radialSegments; j++) {\n      for (let i = 0; i <= tubularSegments; i++) {\n        const u = (i / tubularSegments) * arc;\n        const v = (j / radialSegments) * Math.PI * 2;\n\n        // POSITION\n        vertices[index++] = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertices[index++] = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertices[index++] = tube * Math.sin(v);\n      }\n    }\n\n    // generate indices\n    index = 0;\n    for (let j = 1; j <= radialSegments; j++) {\n      for (let i = 1; i <= tubularSegments; i++) {\n        // indices\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n\n        // faces\n        indices[index++] = a;\n        indices[index++] = b;\n        indices[index++] = d;\n        indices[index++] = b;\n        indices[index++] = c;\n        indices[index++] = d;\n      }\n    }\n    this._initialize(engine, vertices, indices);\n  }\n\n  _initialize(engine: Engine, vertices: Float32Array, indices: Uint16Array) {\n    engine = engine || Engine._getDefaultEngine();\n\n    const vertexStride = 12;\n    const vertexElements = [new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0)];\n\n    this._initBuffer(engine, vertices, indices, vertexStride, vertexElements);\n  }\n}\n","import { Entity } from \"../Entity\";\nimport { GeometryRenderer } from \"../geometry/GeometryRenderer\";\nimport { BlinnPhongMaterial } from \"../mobile-material/BlinnPhongMaterial\";\nimport { CuboidGeometry } from \"./Cuboid\";\nimport { CylinderGeometry } from \"./Cylinder\";\nimport { PlaneGeometry } from \"./Plane\";\nimport { SphereGeometry } from \"./Sphere\";\n\nexport class Model extends GeometryRenderer {\n  set geometryType(value: GeometryType) {\n    if (this._geometryType === value) {\n      return;\n    }\n\n    switch (value) {\n      case \"Sphere\":\n        const {\n          sphereRadius,\n          sphereHorizontalSegments,\n          sphereVerticalSegments,\n          sphereAlphaStart,\n          sphereAlphaRange,\n          sphereThetaStart,\n          sphereThetaRange\n        } = this._props as any;\n        this.geometry = new SphereGeometry(\n          sphereRadius,\n          sphereHorizontalSegments,\n          sphereVerticalSegments,\n          sphereAlphaStart,\n          sphereAlphaRange,\n          sphereThetaStart,\n          sphereThetaRange,\n          this.engine\n        );\n        break;\n\n      case \"Cylinder\":\n        const {\n          cylinderRadiusTop,\n          cylinderRadiusBottom,\n          cylinderHeight,\n          cylinderRadialSegments,\n          cylinderHeightSegments,\n          cylinderOpenEnded\n        } = this._props as any;\n        this.geometry = new CylinderGeometry(\n          cylinderRadiusTop,\n          cylinderRadiusBottom,\n          cylinderHeight,\n          cylinderRadialSegments,\n          cylinderHeightSegments,\n          cylinderOpenEnded,\n          undefined,\n          undefined,\n          undefined,\n          this.engine\n        );\n        break;\n\n      case \"Plane\":\n        const { planeWidth, planeHeight, planeHorizontalSegments, planeVerticalSegments } = this._props as any;\n        this.geometry = new PlaneGeometry(\n          planeWidth,\n          planeHeight,\n          planeHorizontalSegments,\n          planeVerticalSegments,\n          this.engine\n        );\n        break;\n\n      case \"Box\":\n        var { boxWidth, boxHeight, boxDepth } = this._props as any;\n        this.geometry = new CuboidGeometry(boxWidth, boxHeight, boxDepth, this.engine);\n        break;\n    }\n\n    this._geometryType = value;\n  }\n\n  get geometryType() {\n    return this._geometryType;\n  }\n\n  private _geometryType: GeometryType;\n\n  constructor(entity: Entity, props) {\n    super(entity, props);\n\n    const { geometryType = GeometryType.Box } = props;\n    if (!props.material) {\n      this._material = new BlinnPhongMaterial(\"mtl\");\n    }\n    this.geometryType = geometryType;\n  }\n\n  get material(): any {\n    return this._material;\n  }\n\n  set material(mtl: any) {\n    if (!mtl) {\n      this._material = new BlinnPhongMaterial(\"mtl\");\n    } else {\n      this._material = mtl;\n    }\n  }\n}\n\nenum GeometryType {\n  Box = \"Box\",\n  Cylinder = \"Cylinder\",\n  Plane = \"Plane\",\n  Sphere = \"Sphere\"\n}\n","import { SkyBoxMaterial } from \"./SkyBoxMaterial\";\nimport { GeometryRenderer } from \"../geometry/GeometryRenderer\";\nimport { CuboidGeometry } from \"../geometry-shape/Cuboid\";\n\n/**\n * 天空盒组件\n * @class\n */\nexport class SkyBox extends GeometryRenderer {\n  private _skyBoxMap: any;\n\n  /**\n   * 天空盒组件\n   * @param {Entity} entity 挂载节点\n   * @param {Object} props Object对象包含以下参数\n   * @param {TextureCubeMap} props.skyBoxMap 天空盒纹理\n   */\n  constructor(entity, props) {\n    super(entity, props);\n\n    const { skyBoxMap } = props;\n\n    /**\n     * 天空盒纹理\n     * @member {TextureCubeMap}\n     */\n    this.geometry = new CuboidGeometry(2, 2, 2, this.engine);\n    this.material = new SkyBoxMaterial();\n    this.skyBoxMap = skyBoxMap;\n  }\n\n  update() {\n    (this.material as SkyBoxMaterial).setModel(this.entity.transform.worldMatrix);\n  }\n\n  render(camera) {\n    if (!this._skyBoxMap) return;\n    super.render(camera);\n  }\n\n  /**\n   * 天空盒贴图\n   * @type {TextureCubeMap}\n   */\n  get skyBoxMap() {\n    return this._skyBoxMap;\n  }\n\n  set skyBoxMap(v) {\n    this._skyBoxMap = v;\n    this.getMaterial().setValue(\"u_cube\", v);\n  }\n}\n","import { BlendFunc } from \"../base/Constant\";\nimport { GPUParticleSystem } from \"./particle\";\n\n/**\n * 暂时只为编辑器使用\n */\nexport class Particle extends GPUParticleSystem {\n  private _config;\n  private _options;\n\n  constructor(node, props) {\n    super(node);\n\n    this._options = {\n      position: props.__position,\n      positionRandomness: props.__positionRandomness,\n      velocity: props.__velocity,\n      velocityRandomness: props.__velocityRandomness,\n      acceleration: props.__acceleration,\n      accelerationRandomness: props.__accelerationRandomness,\n      color: props.__color,\n      colorRandomness: props.__colorRandomness,\n      lifetime: props.__lifetime,\n      size: props.__size,\n      sizeRandomness: props.__sizeRandomness,\n      startAngle: props.__startAngle,\n      startAngleRandomness: props.__startAngleRandomness,\n      rotateRate: props.__rotateRate,\n      rotateRateRandomness: props.__rotateRateRandomness,\n      scaleFactor: props.__scaleFactor,\n      alpha: props.__alpha,\n      alphaRandomness: props.__alphaRandomness,\n      startTimeRandomness: props.__startTimeRandomness\n    };\n    // 粒子发射器环境参数\n    this._config = {\n      maxCount: props.__maxCount,\n      once: props.__once,\n      rotateToVelocity: props.__rotateToVelocity,\n      isScaleByLifetime: props.__isScaleByLifetime,\n      fadeIn: props.__fadeIn,\n      fadeOut: props.__fadeOut,\n      texture: props.__texture ? props.__texture : null,\n      maskTexture: props.__maskTexture ? props.__maskTexture : null,\n      // blendFunc: [props.__blendFunc01, props.__blendFunc02],\n      useOriginColor: props.__useOriginColor,\n      is2d: props.__is2d,\n      options: this._options\n    };\n    if (props.__spriteSheet) {\n      if (typeof props.__spriteSheet === \"object\" && props.__spriteSheet.length) {\n        this._config.spriteSheet = props.__spriteSheet;\n      } else if (typeof props.__spriteSheet === \"string\") {\n        try {\n          const spriteSheet = JSON.parse(props.__spriteSheet);\n          if (spriteSheet.length) {\n            this._config.spriteSheet = spriteSheet;\n          }\n        } catch (e) {}\n      }\n    }\n    if (props.__positionArray) {\n      if (typeof props.__positionArray === \"object\" && props.__positionArray.length) {\n        this._options.positionArray = props.__positionArray;\n      } else if (typeof props.__positionArray === \"string\") {\n        try {\n          const positionArray = JSON.parse(props.__positionArray);\n          if (positionArray.length) {\n            this._options.positionArray = positionArray;\n          }\n        } catch (e) {}\n      }\n    }\n    if (props.__separate) {\n      this._config.blendFuncSeparate = [\n        BlendFunc[props.__srcRGB || \"SRC_ALPHA\"],\n        BlendFunc[props.__dstRGB || \"ONE_MINUS_SRC_ALPHA\"],\n        BlendFunc[props.__srcAlpha || \"SRC_ALPHA\"],\n        BlendFunc[props.__dstAlpha || \"ONE_MINUS_SRC_ALPHA\"]\n      ];\n    } else if (props.__src && props.__dst) {\n      this._config.blendFunc = [BlendFunc[props.__src], BlendFunc[props.__dst]];\n    }\n    this.initialize(this._config);\n    if (props.__defaultStart === true || props.__defaultStart === undefined) {\n      this.start();\n    }\n  }\n\n  updateOption(key, value) {\n    this._options = {\n      ...this._options,\n      [key]: value\n    };\n    this._config = {\n      ...this._config,\n      options: {\n        ...this._options\n      }\n    };\n    this.initialize(this._config);\n    this.start();\n  }\n\n  updateConfig(key, value) {\n    this._config = {\n      ...this._config,\n      [key]: value\n    };\n    this.initialize(this._config);\n    this.start();\n  }\n\n  set __position(value) {\n    this.updateOption(\"position\", value);\n  }\n\n  set __positionRandomness(value) {\n    this.updateOption(\"positionRandomness\", value);\n  }\n\n  set __velocity(value) {\n    this.updateOption(\"velocity\", value);\n  }\n\n  set __velocityRandomness(value) {\n    this.updateOption(\"velocityRandomness\", value);\n  }\n\n  set __acceleration(value) {\n    this.updateOption(\"acceleration\", value);\n  }\n\n  set __accelerationRandomness(value) {\n    this.updateOption(\"accelerationRandomness\", value);\n  }\n\n  set __color(value) {\n    this.updateOption(\"color\", value);\n  }\n\n  set __colorRandomness(value) {\n    this.updateOption(\"colorRandomness\", value);\n  }\n\n  set __lifetime(value) {\n    this.updateOption(\"lifetime\", value);\n  }\n\n  set __size(value) {\n    this.updateOption(\"size\", value);\n  }\n\n  set __sizeRandomness(value) {\n    this.updateOption(\"sizeRandomness\", value);\n  }\n\n  set __startAngle(value) {\n    this.updateOption(\"startAngle\", value);\n  }\n\n  set __startAngleRandomness(value) {\n    this.updateOption(\"startAngleRandomness\", value);\n  }\n\n  set __rotateRate(value) {\n    this.updateOption(\"rotateRate\", value);\n  }\n\n  set __rotateRateRandomness(value) {\n    this.updateOption(\"rotateRateRandomness\", value);\n  }\n\n  set __scaleFactor(value) {\n    this.updateOption(\"scaleFactor\", value);\n  }\n\n  set __alpha(value) {\n    this.updateOption(\"alpha\", value);\n  }\n\n  set __alphaRandomness(value) {\n    this.updateOption(\"alphaRandomness\", value);\n  }\n\n  set __startTimeRandomness(value) {\n    this.updateOption(\"startTimeRandomness\", value);\n  }\n\n  set __positionArray(value) {\n    if (typeof value === \"object\" && value.length) {\n      this.updateOption(\"positionArray\", value);\n    } else if (typeof value === \"string\") {\n      try {\n        const positionArray = JSON.parse(value);\n        if (positionArray.length) {\n          this.updateOption(\"positionArray\", positionArray);\n        } else {\n          this.updateOption(\"positionArray\", null);\n        }\n      } catch (e) {\n        this.updateOption(\"positionArray\", null);\n      }\n    } else {\n      this.updateOption(\"positionArray\", null);\n    }\n  }\n\n  set __maxCount(value) {\n    this.updateConfig(\"maxCount\", value);\n  }\n\n  set __useOriginColor(value) {\n    this.updateConfig(\"useOriginColor\", value);\n  }\n\n  set __once(value) {\n    this.updateConfig(\"once\", value);\n  }\n\n  set __rotateToVelocity(value) {\n    this.updateConfig(\"rotateToVelocity\", value);\n  }\n\n  set __isScaleByLifetime(value) {\n    this.updateConfig(\"isScaleByLifetime\", value);\n  }\n\n  set __fadeIn(value) {\n    this.updateConfig(\"fadeIn\", value);\n  }\n\n  set __fadeOut(value) {\n    this.updateConfig(\"fadeOut\", value);\n  }\n\n  set __texture(value) {\n    this.updateConfig(\"texture\", value);\n  }\n\n  set __maskTexture(value) {\n    this.updateConfig(\"maskTexture\", value);\n  }\n\n  set __spriteSheet(value) {\n    if (typeof value === \"object\" && value.length) {\n      this.updateConfig(\"spriteSheet\", value);\n    } else if (typeof value === \"string\") {\n      try {\n        const spriteSheet = JSON.parse(value);\n        if (spriteSheet.length) {\n          this.updateConfig(\"spriteSheet\", spriteSheet);\n        } else {\n          this.updateConfig(\"spriteSheet\", null);\n        }\n      } catch (e) {\n        this.updateConfig(\"spriteSheet\", null);\n      }\n    } else {\n      this.updateConfig(\"spriteSheet\", null);\n    }\n  }\n\n  set __is2d(value) {\n    this.updateConfig(\"is2d\", value);\n  }\n  // set __blendFunc01(value) {\n  //   this._config.blendFunc[0] = value;\n  //   this.updateConfig('blendFunc', this._config.blendFunc);\n  // }\n\n  // set __blendFunc02(value) {\n  //   this._config.blendFunc[1] = value;\n  //   this.updateConfig('blendFunc', this._config.blendFunc);\n  // }\n}\n","import FRAG_SHADER from \"./trail.fs.glsl\";\nimport VERT_SHADER from \"./trail.vs.glsl\";\nimport { Material } from \"../material/Material\";\nimport { RenderTechnique } from \"../material/RenderTechnique\";\nimport { BlendFunc, MaterialType, RenderState, DataType } from \"../base/Constant\";\n\nexport class TrailMaterial extends Material {\n  /**\n   * 生成内部所使用的 Technique 对象\n   * @private\n   */\n  _generateTechnique() {\n    //--\n    const tech = new RenderTechnique(\"trail_tech\");\n    tech.isValid = true;\n    tech.uniforms = {\n      u_texture: {\n        name: \"u_texture\",\n        type: DataType.SAMPLER_2D\n      }\n    };\n    tech.attributes = {};\n    tech.states = {\n      enable: [RenderState.BLEND],\n      functions: {\n        blendFunc: [BlendFunc.SRC_ALPHA, BlendFunc.ONE],\n        depthMask: [false]\n      }\n    };\n    tech.customMacros = [];\n    tech.vertexShader = VERT_SHADER;\n    tech.fragmentShader = FRAG_SHADER;\n\n    this._technique = tech;\n    this.renderType = MaterialType.TRANSPARENT;\n  }\n\n  /**\n   * 重写基类方法\n   * @private\n   */\n  prepareDrawing(context, component, primitive) {\n    if (this._technique === null) {\n      this._generateTechnique();\n    }\n\n    super.prepareDrawing(context, component, primitive);\n  }\n}\n","import { Vector3 } from \"@alipay/o3-math\";\nimport { ACollider } from \"../collider\";\n\n/**\n * Raycast检测的结果记录\n * @class\n */\nexport class RaycastHit {\n  public distance: number;\n  public collider: ACollider;\n  public point: Vector3;\n  /**\n   * 构造函数\n   */\n  constructor() {\n    /**\n     * 碰撞点离射线起点的距离\n     * @member {float}\n     */\n    this.distance = Number.MAX_VALUE;\n\n    /**\n     * 与射线相交的碰撞体\n     * @member {ACollider}\n     */\n    this.collider = null;\n\n    /**\n     * 碰撞体与射线的相交点\n     * @member {vec3}\n     */\n    this.point = null;\n  }\n}\n","import { SceneFeature } from \"../SceneFeature\";\nimport { Collider } from \"./Collider\";\n\nexport class ColliderFeature extends SceneFeature {\n  colliders: Collider[];\n  constructor() {\n    super();\n\n    this.colliders = [];\n  }\n\n  /**\n   * 添加一个 Collider 组件\n   * @param {Collider} collider 碰撞体对象\n   * @private\n   */\n  attachCollider(collider: Collider) {\n    this.colliders.push(collider);\n  }\n\n  /**\n   * 移除一个Collider组件\n   * @param {Collider} collider 碰撞体对象\n   * @private\n   */\n  detachCollider(collider: Collider) {\n    const index = this.colliders.indexOf(collider);\n    if (index != -1) {\n      this.colliders.splice(index, 1);\n    }\n  }\n}\n","import { ColliderFeature } from \"./ColliderFeature\";\nimport { MaskList } from \"../base/Constant\";\nimport { Entity } from \"../Entity\";\nimport { Component } from \"../Component\";\n\n/**\n * 碰撞体组件的基类, 定义碰撞体的数据\n */\nexport class Collider extends Component {\n  /**\n   * collider flg\n   */\n  tag: MaskList;\n  /**\n   * @constructor\n   * @param {Entity} entity\n   */\n  constructor(entity: Entity, props?: any) {\n    super(entity, props);\n\n    this.tag = props.tag || MaskList.EVERYTHING;\n  }\n\n  /** 事件回调：在对象Enable的时候，挂载到当前的Scene\n   * @private\n   */\n  _onEnable(): void {\n    this.scene.findFeature(ColliderFeature).attachCollider(this);\n  }\n\n  /** 事件回调：在对象Disable的时候，从当前的Scene移除\n   * @private\n   */\n  _onDisable(): void {\n    this.scene.findFeature(ColliderFeature).detachCollider(this);\n  }\n}\n","import { ColliderFeature } from \"./ColliderFeature\";\nimport { Scene } from \"../Scene\";\nScene.registerFeature(ColliderFeature);\n\n//-- colliders\nexport { ColliderFeature };\nexport { Collider as ACollider } from \"./Collider\";\nexport { ABoxCollider } from \"./ABoxCollider\";\nexport { PlaneCollider } from \"./PlaneCollider\";\nexport { ASphereCollider } from \"./ASphereCollider\";\nexport { BoxCollider } from \"./BoxCollider\";\nexport { SphereCollider } from \"./SphereCollider\";\n","import { Fog } from \"./Fog\";\n\n/**\n * 指数雾\n */\nexport class EXP2Fog extends Fog {\n  public density: number;\n  /**\n   * 指数变换的雾\n   * @param {*} node 节点\n   * @param {Object} [props] 包含以下参数\n   * @param {Vector3} [props.color=new Vector3(1, 0, 0)] 雾颜色\n   * @param {Number} [props.density=0.0025] 雾的浓度（0-1）\n   */\n  constructor(node, props) {\n    super(node, props);\n\n    /**\n     * 浓度\n     * @member {Number}\n     */\n    this.density = props.density === undefined ? 0.0025 : props.density;\n  }\n\n  /**\n   * @private\n   */\n  bindMaterialValues(mtl) {\n    mtl.setValue(\"u_fogColor\", this.color);\n    mtl.setValue(\"u_fogDensity\", this.density);\n  }\n}\n","import { EXP2Fog } from \"./EXP2Fog\";\nimport { Fog } from \"./Fog\";\nimport { SceneFeature } from \"../SceneFeature\";\n\n/**\n * 是否有雾效特性\n * @private\n */\nexport function hasFogFeature() {\n  return true;\n}\n\n/**\n * 获取雾效相关宏\n * @private\n */\nexport function getFogMacro() {\n  return this.findFeature(FogFeature).macro;\n}\n\n/**\n * 设置雾参数到材质\n * @param {Material} mtl 材质\n * @private\n */\nexport function bindFogToMaterial(mtl) {\n  this.findFeature(FogFeature).bindFogToMaterial(mtl);\n}\n\n/**\n * 雾效场景特性\n * @private\n */\nexport class FogFeature extends SceneFeature {\n  private _fog;\n  private _macros;\n\n  constructor() {\n    super();\n    this._fog = null;\n    this._macros = [];\n  }\n\n  /**\n   * 雾\n   */\n  get fog() {\n    return this._fog;\n  }\n\n  set fog(v) {\n    if (v !== this._fog) {\n      this._fog = v;\n      const macro = [];\n      if (v instanceof Fog) {\n        macro.push(\"O3_HAS_FOG\");\n\n        if (v instanceof EXP2Fog) {\n          macro.push(\"O3_FOG_EXP2\");\n        }\n      }\n\n      if (this._macros.length !== macro.length) {\n        this._macros = macro;\n      }\n    }\n  }\n\n  /**\n   * 宏\n   */\n  get macro() {\n    return this._macros;\n  }\n\n  /**\n   * @private\n   * 绑定雾参数到材质\n   * @param {Material} mtl 材质\n   */\n  bindFogToMaterial(mtl) {\n    if (this.fog && mtl.useFog) {\n      this.fog.bindMaterialValues(mtl);\n    }\n\n    return this;\n  }\n}\n","import { Fog } from \"./Fog\";\nimport { Vector3 } from \"@alipay/o3-math\";\n\n/**\n * 线性雾，根据镜头距离线性差值雾浓度\n */\nexport class LinearFog extends Fog {\n  public near: number;\n  public far: number;\n  public color: Vector3;\n  /**\n   * 线性雾\n   * @param {*} node 节点\n   * @param {Object} [props] 包含以下参数\n   * @param {Vector3} [props.color=[1, 1, 1]] 雾颜色\n   * @param {Number} [props.near=1] 最近距离\n   * @param {Number} [props.far=1000] 最远距离\n   */\n  constructor(node, props) {\n    super(node, props);\n\n    /**\n     * 最近距离\n     * @member {Number}\n     */\n    this.near = props.near === undefined ? 1 : props.near;\n    /**\n     * 最远距离\n     * @member {Number}\n     */\n    this.far = props.far === undefined ? 1000 : props.far;\n  }\n\n  /**\n   * @private\n   */\n  bindMaterialValues(mtl) {\n    mtl.setValue(\"u_fogColor\", this.color);\n    mtl.setValue(\"u_fogNear\", this.near);\n    mtl.setValue(\"u_fogFar\", this.far);\n  }\n}\n","import { Scene } from \"../Scene\";\nimport { bindFogToMaterial, FogFeature, getFogMacro, hasFogFeature } from \"./FogFeature\";\n\nScene.registerFeature(FogFeature);\n(Scene.prototype as any).hasFogFeature = hasFogFeature;\n(Scene.prototype as any).getFogMacro = getFogMacro;\n(Scene.prototype as any).bindFogToMaterial = bindFogToMaterial;\n\nexport { EXP2Fog } from \"./EXP2Fog\";\nexport { LinearFog } from \"./LinearFog\";\nexport { FogFeature };\n","import { Vector4 } from \"@alipay/o3-math\";\nimport { Camera } from \"../Camera\";\nimport { Component } from \"../Component\";\nimport { Entity } from \"../Entity\";\nimport { Material } from \"../material/Material\";\nimport { BasicRenderPipeline } from \"../RenderPipeline/BasicRenderPipeline\";\nimport { RenderContext } from \"../RenderPipeline/RenderContext\";\nimport { RenderPass } from \"../RenderPipeline/RenderPass\";\nimport { RenderBufferDepthFormat } from \"../texture/enums\";\nimport { RenderColorTexture } from \"../texture/RenderColorTexture\";\nimport { RenderDepthTexture } from \"../texture/RenderDepthTexture\";\nimport { RenderTarget } from \"../texture/RenderTarget\";\nimport { Texture } from \"../texture/Texture\";\nimport { Texture2D } from \"../texture/Texture2D\";\nimport { TextureCubeMap } from \"../texture/TextureCubeMap\";\nimport { ProbeConfig } from \"./type\";\n\nlet cacheId = 0;\n\n/**\n * 环境探针类，提供诸如反射折射等需要的功能\n * */\nexport abstract class Probe extends Component {\n  protected readonly cacheId: number;\n  private readonly isCube: boolean;\n  private oriClipPlane: Vector4[];\n\n  private _camera: Camera;\n\n  /** 优先级 excludeRenderList > renderAll > renderList */\n  public excludeRenderList: Material[];\n  public renderAll: boolean;\n  public renderList: Material[];\n\n  public renderPass: RenderPass;\n  protected renderTarget: RenderTarget;\n  protected renderTargetSwap: RenderTarget;\n\n  /** 裁剪面 */\n  public clipPlanes: Vector4[];\n\n  public set camera(camera: Camera) {\n    if (camera === this._camera) return;\n    this._camera && this.renderPipeline.removeRenderPass(this.renderPass);\n    this._camera = camera;\n    camera && this.renderPipeline.addRenderPass(this.renderPass);\n  }\n\n  public get camera() {\n    return this._camera;\n  }\n\n  /**\n   * 探针所得 2D 纹理\n   * */\n  public get texture(): Texture2D | RenderColorTexture {\n    return this.renderPass.renderTarget?.getColorTexture();\n  }\n\n  /**\n   * 探针所得 深度 纹理\n   * */\n  public get depthTexture(): Texture2D | RenderDepthTexture {\n    return this.renderPass.renderTarget?.depthTexture;\n  }\n\n  /**\n   * 探针所得 立方体 纹理\n   * */\n  public get cubeTexture(): TextureCubeMap | RenderColorTexture {\n    return this.renderPass.renderTarget?.getColorTexture();\n  }\n\n  protected get renderPipeline(): BasicRenderPipeline {\n    return this.camera._renderPipeline;\n  }\n\n  /**\n   * @deperated\n   */\n  protected get rhi(): any {\n    return this.camera.scene.engine._hardwareRenderer;\n  }\n\n  /**\n   * 获取需要渲染的真实队列.\n   * 优先级 excludeRenderList > renderAll > renderList\n   */\n  protected get renderItems() {\n    const opaqueQueue = this.renderPipeline.opaqueQueue;\n    const transparentQueue = this.renderPipeline.transparentQueue;\n    return opaqueQueue.items.concat(transparentQueue.items).filter((item) => {\n      if (!item.primitive) return false;\n      if (this.excludeRenderList.includes(item.mtl)) return false;\n      if (this.renderAll) return true;\n      if (this.renderList.includes(item.mtl)) return true;\n    });\n  }\n\n  /** WebGL2 时，可以开启硬件层的 MSAA */\n  public get samples() {\n    return this.renderTarget.antiAliasing;\n  }\n\n  /**\n   *探针基类\n   * @param {Entity} entity\n   * @param {ProbeConfig} config\n   * */\n  protected constructor(entity: Entity, config: ProbeConfig = {}) {\n    super(entity, config);\n    this.cacheId = cacheId++;\n\n    this.renderPass = new RenderPass(\"_renderPass\" + this.cacheId, -10);\n\n    /** 自定义渲染管道 */\n    this.renderPass.renderOverride = true;\n    this.renderPass.preRender = this.preRender.bind(this);\n    this.renderPass.render = this.render.bind(this);\n    this.renderPass.postRender = this.postRender.bind(this);\n\n    this.isCube = !!config.isCube;\n    this.camera = config.camera || this.scene._activeCameras[0];\n    this.excludeRenderList = config.excludeRenderList || [];\n    this.renderAll = !!config.renderAll;\n    this.renderList = config.renderList || [];\n    this.clipPlanes = config.clipPlanes || [];\n\n    const width = config.width || 1024;\n    const height = config.height || 1024;\n    const samples = config.samples || 1;\n\n    this.renderTarget = new RenderTarget(\n      width,\n      height,\n      new RenderColorTexture(width, height, undefined, false, this.isCube, this.engine),\n      RenderBufferDepthFormat.Depth,\n      samples,\n      this.engine\n    );\n    this.renderTargetSwap = new RenderTarget(\n      width,\n      height,\n      new RenderColorTexture(width, height, undefined, false, this.isCube, this.engine),\n      RenderBufferDepthFormat.Depth,\n      samples,\n      this.engine\n    );\n\n    this.renderPass.renderTarget = this.renderTarget;\n\n    /**\n     * 继续 RTT\n     * */\n    this.addEventListener(\"enabled\", () => {\n      this.renderPass.enabled = true;\n    });\n\n    /**\n     * 暂停 RTT（ render target to texture）\n     * */\n    this.addEventListener(\"disabled\", () => {\n      this.renderPass.enabled = false;\n    });\n  }\n\n  protected preRender() {\n    this.oriClipPlane = this.scene.clipPlanes;\n    this.scene.clipPlanes = this.clipPlanes;\n  }\n\n  protected render() {\n    const context = RenderContext._getRenderContext(this.camera);\n    this.renderItems.forEach((item) => {\n      const { component, primitive, mtl } = item;\n      if (!(component.renderPassFlag & this.renderPassFlag)) return;\n      mtl.prepareDrawing(context, component, primitive);\n      this.rhi.drawPrimitive(primitive, mtl);\n    });\n  }\n\n  protected postRender() {\n    this.scene.clipPlanes = this.oriClipPlane;\n    // 交换 FBO\n    // prevent issue: Feedback Loops Between Textures and the Framebuffer.\n    if (this.renderPass.enabled) {\n      // 钩子\n      if (this.onTextureChange) {\n        if (this.isCube) {\n          this.onTextureChange(this.cubeTexture);\n        } else {\n          this.onTextureChange(this.texture, this.depthTexture);\n        }\n      }\n\n      if (this.renderPass.renderTarget === this.renderTarget) {\n        this.renderPass.renderTarget = this.renderTargetSwap;\n      } else {\n        this.renderPass.renderTarget = this.renderTarget;\n      }\n    }\n  }\n\n  /**\n   * 销毁 probe 以及 renderPass\n   */\n  public destroy(): void {\n    this.enabled = false;\n    this.renderPipeline.removeRenderPass(this.renderPass);\n\n    super.destroy();\n\n    // todo:delete\n    this.renderTarget.destroy();\n    this.renderTargetSwap.destroy();\n  }\n\n  /**\n   * prevent issue: Feedback Loops Between Textures and the Framebuffer\n   * 提供钩子让用户进行交换 Texture\n   * @example\n   * probe.onTextureChange = cubeTexture => {\n   *   envLight.specularMap = cubeTexture;\n   *   skybox.specularMap = cubeTexture;\n   * }\n   * */\n  public onTextureChange(texture: Texture | RenderColorTexture, depthTexture?: Texture2D | RenderDepthTexture) {}\n}\n","import { Side } from \"../base/Constant\";\nimport { Entity } from \"../Entity\";\nimport { Probe } from \"./Probe\";\nimport { PlaneProbeConfig } from \"./type\";\n\n/**\n * 平面探针，用于生成 折射/纹理扰动 等效果\n * */\nexport class PlaneProbe extends Probe {\n  /**\n   * 创建探针\n   * @param {Entity} node\n   * @param {PlaneProbeConfig} config\n   * */\n  constructor(node: Entity, config: PlaneProbeConfig = {}) {\n    super(node, config);\n  }\n\n  /**\n   * 预处理材质，保存初始状态\n   * */\n  private storeMaterial() {\n    this.renderItems.forEach((item) => {\n      const material = item.mtl;\n      item.initialSide = material.side;\n      material.side = Side.BACK;\n    });\n  }\n\n  /**\n   * 后处理材质，还原初始状态\n   * */\n  private restoreMaterial() {\n    this.renderItems.forEach((item) => {\n      const material = item.mtl;\n      material.side = item.initialSide;\n      delete item.initialSide;\n    });\n  }\n\n  protected preRender() {\n    super.preRender();\n    this.storeMaterial();\n  }\n\n  protected postRender() {\n    super.postRender();\n    this.restoreMaterial();\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { AmbientLight } from \"../lighting/AmbientLight\";\nimport { Light } from \"../lighting/Light\";\nimport { LightShadow } from \"./LightShadow\";\nimport { Component } from \"../Component\";\n\n/**\n * 设置是否产生阴影\n * @param {boolean} enabled\n */\nObject.defineProperty(Light.prototype, \"enableShadow\", {\n  get: function () {\n    return this._enableShadow;\n  },\n  set: function (enabled) {\n    this._enableShadow = enabled;\n\n    if (this._enableShadow) {\n      if (this instanceof AmbientLight) {\n        Logger.warn(\"Has no shadow!\");\n        return;\n      }\n\n      this.shadow = this.shadow || new LightShadow();\n      this.shadow.initShadowProjectionMatrix(this);\n    }\n  }\n});\n\n/**\n * 设置是否接收阴影\n * @param {boolean} enabled\n */\nObject.defineProperty(Component.prototype, \"recieveShadow\", {\n  get: function () {\n    return this._recieveShadow;\n  },\n  set: function (enabled) {\n    this._recieveShadow = enabled;\n  }\n});\n\n/**\n * 设置是否投射阴影\n * @param {boolean} enabled\n */\nObject.defineProperty(Component.prototype, \"castShadow\", {\n  get: function () {\n    return this._castShadow;\n  },\n  set: function (enabled) {\n    this._castShadow = enabled;\n  }\n});\n","import { DataType } from \"../base/Constant\";\nimport { ComplexMaterial } from \"../material/ComplexMaterial\";\nimport { RenderTechnique } from \"../material/RenderTechnique\";\nimport fs from \"./shaders/shadowMap.fs.glsl\";\nimport vs from \"./shaders/vertex.glsl\";\n\n/**\n * 生成 Shadow Map 使用的材质\n * @private\n */\nexport class ShadowMapMaterial extends ComplexMaterial {\n  /**\n   * 生成内部所使用的 Technique 对象\n   * @private\n   */\n  _generateTechnique(camera, component) {\n    const customMacros = this._generateMacros();\n    const uniforms = this._generateFragmentUniform();\n\n    //--\n    const tech = new RenderTechnique(this.name);\n    tech.isValid = true;\n    tech.uniforms = uniforms;\n    tech.attributes = {};\n    tech.states = {};\n    tech.customMacros = customMacros;\n    tech.vertexShader = vs;\n    tech.fragmentShader = fs;\n\n    return tech;\n  }\n\n  /**\n   * 添加阴影相关的 uniform 定义\n   * @private\n   */\n  _generateFragmentUniform() {\n    const uniforms = {\n      u_viewMatFromLight: {\n        name: \"u_viewMatFromLight\",\n        type: DataType.FLOAT_MAT4\n      },\n      u_projMatFromLight: {\n        name: \"u_projMatFromLight\",\n        type: DataType.FLOAT_MAT4\n      }\n    };\n\n    return uniforms;\n  }\n\n  /**\n   * 根据阴影的个数，添加相应的宏定义\n   * @private\n   */\n  _generateMacros() {\n    const macros = [];\n\n    macros.push(\"O3_GENERATE_SHADOW_MAP\");\n\n    return macros;\n  }\n}\n","import { RenderPass } from \"../RenderPipeline/RenderPass\";\nimport { Camera } from \"../Camera\";\n\n/**\n * RednerPass 对象\n * @private\n */\nexport class ShadowMapPass extends RenderPass {\n  public light;\n  /**\n   * RenderPass 构造函数\n   * @param {string} name 这个 Pass 的名称\n   * @param {number} priority 优先级，小于0在默认Pass之前，大于0在默认Pass之后\n   * @param {RenderTarget} renderTarget 指定的 Render Target\n   * @param {Material} replaceMaterial 替换模型的默认材质\n   * @param {number} mask 与 Component.renderPassFlag 进行 bit and 操作，对这个 Pass 需要渲染的对象进行筛选\n   * @param {ALight} light 需要生成 ShadowMap 的光源\n   */\n  constructor(name, priority, renderTarget, replaceMaterial, mask, light) {\n    super(name, priority, renderTarget, replaceMaterial, mask);\n    this.light = light;\n  }\n\n  /**\n   * Pass 渲染前调用\n   * @param {Camera} camera 相机\n   * @param {RenderQueue} opaqueQueue 不透明物体渲染队列\n   * @param {RenderQueue} transparentQueue 透明物体渲染队列\n   */\n  preRender(camera: Camera, opaqueQueue, transparentQueue) {\n    // 光源视点 VP 矩阵\n    this.replaceMaterial.setValue(\"u_viewMatFromLight\", this.light.viewMatrix);\n    this.replaceMaterial.setValue(\"u_projMatFromLight\", this.light.shadow.projectionMatrix);\n  }\n}\n","import { BlendFunc, CompFunc, RenderState } from \"../base/Constant\";\nimport { ComplexMaterial } from \"../material/ComplexMaterial\";\nimport { RenderTechnique } from \"../material/RenderTechnique\";\nimport { LightShadow } from \"./LightShadow\";\nimport fs from \"./shaders/shadow.fs.glsl\";\nimport vs from \"./shaders/vertex.glsl\";\n\n/**\n * 接收阴影的材质\n * @private\n */\nexport class ShadowMaterial extends ComplexMaterial {\n  public shadowMapCount;\n  /**\n   * 生成内部所使用的 Technique 对象\n   * @private\n   */\n  _generateTechnique(camera, component) {\n    const customMacros = this._generateMacros();\n    const uniforms = this._generateFragmentUniform();\n\n    //--\n    const tech = new RenderTechnique(this.name);\n    tech.autoConvert = false;\n    tech.isValid = true;\n    tech.uniforms = uniforms;\n    tech.attributes = {};\n    tech.states = {};\n    tech.customMacros = customMacros;\n    tech.vertexShader = vs;\n    tech.fragmentShader = fs;\n    tech.states = {\n      enable: [RenderState.BLEND],\n      functions: {\n        depthFunc: [CompFunc.LEQUAL],\n        blendFunc: [BlendFunc.DST_COLOR, BlendFunc.ZERO]\n      }\n    };\n\n    return tech;\n  }\n\n  /**\n   * 添加阴影相关的 uniform 定义\n   * @private\n   */\n  _generateFragmentUniform() {\n    let uniforms = {};\n\n    for (let i = 0; i < this.shadowMapCount; i++) {\n      const lgtUniforms = LightShadow.getUniformDefine(i);\n      uniforms = { ...uniforms, ...lgtUniforms };\n    } // end of for\n\n    return uniforms;\n  }\n\n  /**\n   * 根据阴影的个数，添加相应的宏定义\n   * @private\n   */\n  _generateMacros() {\n    const macros = [];\n\n    if (this.shadowMapCount > 0) {\n      macros.push(`O3_SHADOW_MAP_COUNT ${this.shadowMapCount}`);\n    }\n    return macros;\n  }\n}\n","import { RenderPass } from \"../RenderPipeline/RenderPass\";\nimport { ClearMode } from \"../base/Constant\";\nimport { Camera } from \"../Camera\";\nimport { LightFeature } from \"../lighting/LightFeature\";\n\n/**\n * RednerPass 对象\n * @private\n */\nexport class ShadowPass extends RenderPass {\n  constructor(...args) {\n    super(...args);\n    this.clearMode = ClearMode.DONT_CLEAR;\n  }\n\n  /**\n   * Pass 渲染前调用\n   * @param {Camera} camera 相机\n   * @param {RenderQueue} opaqueQueue 不透明物体渲染队列\n   * @param {RenderQueue} transparentQueue 透明物体渲染队列\n   */\n  preRender(camera: Camera, opaqueQueue, transparentQueue) {\n    this.enabled = false;\n    const lightMgr = camera.scene.findFeature(LightFeature);\n    if (lightMgr) {\n      // keep render based on default render pass\n      const pass = camera._renderPipeline.defaultRenderPass;\n      this.renderTarget = pass.renderTarget;\n\n      const lights = lightMgr.visibleLights;\n      let shadowMapCount = 0;\n      for (let i = 0, len = lights.length; i < len; i++) {\n        const lgt: any = lights[i];\n        if (lgt.enableShadow) {\n          lgt.shadow.bindShadowValues(this.replaceMaterial, shadowMapCount, lgt);\n          shadowMapCount++;\n        }\n      } // end of for\n\n      if (shadowMapCount !== this.replaceMaterial.shadowMapCount) {\n        this.replaceMaterial.shadowMapCount = shadowMapCount;\n        this.replaceMaterial.clearTechniques();\n      }\n\n      if (shadowMapCount) this.enabled = true;\n    }\n  }\n}\n","import { ShadowMapMaterial } from \"./ShadowMapMaterial\";\nimport { ShadowMapPass } from \"./ShadowMapPass\";\nimport { ShadowMaterial } from \"./ShadowMaterial\";\nimport { ShadowPass } from \"./ShadowPass\";\nimport { SceneFeature } from \"../SceneFeature\";\nimport { LightFeature } from \"../lighting/LightFeature\";\nimport { Camera } from \"../Camera\";\nimport { MaskList } from \"../base/Constant\";\nimport { RenderQueue } from \"../RenderPipeline/RenderQueue\";\nimport { Component } from \"../Component\";\n\n/**\n * Shadow Feature：场景中 Shadow 特性\n * @extends SceneFeature\n * @private\n */\nexport class ShadowFeature extends SceneFeature {\n  private _shadowPass;\n  private _shadowMapMaterial: ShadowMapMaterial;\n  /**\n   * 场景渲染前的回调, 在此环节生成 Shadow Map\n   * @param {Scene} scene\n   * @param {Camera} camera\n   */\n  preRender(scene, camera: Camera) {\n    const lightMgr = camera.scene.findFeature(LightFeature);\n    if (lightMgr && lightMgr.visibleLights.length > 0) {\n      // 检查添加绘制 Shadow 的 RenderPass\n      if (!this._shadowPass) {\n        this.addShadowPass(camera);\n      }\n\n      // 检查添加绘制 Shadow Map 的 RenderPass\n      const lights = lightMgr.visibleLights;\n      for (let i = 0, len = lights.length; i < len; i++) {\n        const lgt: any = lights[i];\n        if (lgt.enableShadow && !lgt.shadowMapPass) {\n          lgt.shadowMapPass = this.addShadowMapPass(camera, lgt);\n        } else if (!lgt.enableShadow && lgt.shadowMapPass) {\n          const renderer = camera._renderPipeline;\n          renderer.removeRenderPass(lgt.shadowMapPass);\n          lgt.shadowMapPass = null;\n        }\n      } // end of for\n\n      this.updatePassRenderFlag(camera._renderPipeline.opaqueQueue);\n      this.updatePassRenderFlag(camera._renderPipeline.transparentQueue);\n    } // end of if\n  }\n\n  /**\n   * 添加渲染阴影的 RendererPass\n   * @param {Camera} camera\n   */\n  addShadowPass(camera: Camera) {\n    const shadowMaterial = new ShadowMaterial(\"shadowMaterial\");\n    this._shadowPass = new ShadowPass(\"ShadowPass\", 1, null, shadowMaterial, MaskList.SHADOW);\n    const renderer = camera._renderPipeline;\n    renderer.addRenderPass(this._shadowPass);\n  }\n\n  /**\n   * 添加渲染 shadow map 的 RendererPass\n   * @param {Camera} camera\n   * @param {ALight} light\n   */\n  addShadowMapPass(camera: Camera, light) {\n    // 共用 shadow map 材质\n    this._shadowMapMaterial = this._shadowMapMaterial || new ShadowMapMaterial(\"shadowMapMaterial\");\n\n    const shadowMapPass = new ShadowMapPass(\n      \"ShadowMapPass\",\n      -1,\n      light.shadow.renderTarget,\n      this._shadowMapMaterial,\n      MaskList.SHADOW_MAP,\n      light\n    );\n    const renderer = camera._renderPipeline;\n    renderer.addRenderPass(shadowMapPass);\n\n    return shadowMapPass;\n  }\n\n  /**\n   * 用于更新场景中物体的 renderPassFlag 状态\n   * @param {RenderQueue} renderQueue\n   */\n  updatePassRenderFlag(renderQueue: RenderQueue) {\n    const items = renderQueue.items;\n    for (let i = 0, len = items.length; i < len; i++) {\n      const item = items[i];\n      const ability: Component = item.component;\n\n      const recieveShadow = (ability as any).recieveShadow;\n      const castShadow = (ability as any).castShadow;\n      if (recieveShadow === true) {\n        ability.addPassMasks(MaskList.SHADOW);\n      } else if (recieveShadow === false) {\n        ability.removePassMasks(MaskList.SHADOW);\n      }\n\n      if (castShadow === true) {\n        ability.addPassMasks(MaskList.SHADOW_MAP);\n      } else if (castShadow === false) {\n        ability.removePassMasks(MaskList.SHADOW_MAP);\n      }\n    }\n  }\n}\n","import \"./Extension\";\nimport { ShadowFeature } from \"./ShadowFeature\";\nimport { Scene } from \"../Scene\";\n\nScene.registerFeature(ShadowFeature);\n","export { Engine } from \"./Engine\";\nexport { SystemInfo } from \"./SystemInfo\";\nexport type { HardwareRenderer } from \"./HardwareRenderer\";\nexport type { Canvas } from \"./Canvas\";\nexport { EngineFeature } from \"./EngineFeature\";\nexport { AssetObject } from \"./asset/AssetObject\";\n\nexport { Scene } from \"./Scene\";\nexport { SceneVisitor } from \"./SceneVisitor\";\nexport { SceneFeature } from \"./SceneFeature\";\n\nexport { Entity } from \"./Entity\";\nexport { Component } from \"./Component\";\nexport { Script } from \"./Script\";\nexport { RenderableComponent } from \"./RenderableComponent\";\nexport { dependencies } from \"./ComponentsDependencies\";\n\nexport { Camera } from \"./Camera\";\nexport { Transform } from \"./Transform\";\nexport { UpdateFlag } from \"./UpdateFlag\";\nexport { request } from \"./asset/request\";\nexport { Loader } from \"./asset/Loader\";\nexport { ResourceManager, resourceLoader } from \"./asset/ResourceManager\";\nexport { AssetPromise, AssetPromiseStatus } from \"./asset/AssetPromise\";\nexport type { LoadItem } from \"./asset/LoadItem\";\nexport { AssetType } from \"./asset/AssetType\";\nexport { ReferenceObject } from \"./asset/ReferenceObject\";\n\nexport { BasicRenderPipeline } from \"./RenderPipeline/BasicRenderPipeline\";\nexport { RenderQueue } from \"./RenderPipeline//RenderQueue\";\nexport { RenderContext } from \"./RenderPipeline/RenderContext\";\nexport { RenderPass } from \"./RenderPipeline/RenderPass\";\nexport * from \"./base\";\n\n//lighting\nimport { LightFeature, hasLight } from \"./lighting/LightFeature\";\nimport { Scene } from \"./Scene\";\nScene.registerFeature(LightFeature);\n(Scene.prototype as any).hasLight = hasLight;\nexport { LightFeature };\nexport { AmbientLight } from \"./lighting/AmbientLight\";\nexport { DirectLight } from \"./lighting/DirectLight\";\nexport { PointLight } from \"./lighting/PointLight\";\nexport { SpotLight } from \"./lighting/SpotLight\";\nexport { EnvironmentMapLight } from \"./lighting/EnvironmentMapLight\";\nexport { Light } from \"./lighting/Light\";\n\n//bouding-info\nexport { AABB } from \"./bounding-info/AABB\";\nexport { OBB } from \"./bounding-info//OBB\";\nexport { BoundingSphere } from \"./bounding-info//BoudingSphere\";\nexport type { BoundingBox } from \"./RenderableComponent\";\n//mesh\nexport { Mesh } from \"./mesh/Mesh\";\nexport { Skin } from \"./mesh/Skin\";\nexport { MeshRenderer } from \"./mesh/MeshRenderer\";\nexport { SkinnedMeshRenderer } from \"./mesh/SkinnedMeshRenderer\";\nexport { LODGroup } from \"./mesh/LODGroup\";\n\n// primitive\nexport { Primitive } from \"./primitive/Primitive\";\n\n// material\n\nexport { Material } from \"./material/Material\";\nexport { ComplexMaterial } from \"./material/ComplexMaterial\";\nexport { RenderTechnique } from \"./material/RenderTechnique\";\nexport * from \"./material/type\";\n\n// texture\nexport { Texture } from \"./texture/Texture\";\nexport { Texture2D } from \"./texture/Texture2D\";\nexport { TextureCubeMap } from \"./texture/TextureCubeMap\";\nexport { RenderTarget } from \"./texture/RenderTarget\";\nexport { RenderColorTexture } from \"./texture/RenderColorTexture\";\nexport { RenderDepthTexture } from \"./texture/RenderDepthTexture\";\nexport * from \"./texture/enums\";\n\nexport * from \"./graphic/index\";\nexport * from \"./2d/index\";\nexport * from \"./shaderlib/index\";\nexport * from \"./animation/index\";\nexport * from \"./mobile-material/index\";\nexport * from \"./geometry/index\";\nexport * from \"./geometry-shape/index\";\nexport * from \"./skybox/index\";\nexport * from \"./pbr/index\";\nexport * from \"./particle/index\";\nexport * from \"./trail/index\";\nexport * from \"./rayCast/index\";\nexport * from \"./collider/index\";\nexport * from \"./collision/index\";\nexport * from \"./fog/index\";\nexport * from \"./env-probe\";\nexport * from \"./shadow/index\";\n"],"names":["Event","_propagationStopped","_target","t","_timeStamp","_currentTarget","_bubbles","_type","type","target","data","bubbles","Date","getTime","EngineObject","instanceId","_instanceIdCounter","EventDispatcher","_listeners","listener","listeners","undefined","indexOf","push","once","addEventListener","arguments","length","index","splice","event","listenersArray","copiedListeners","slice","i","l","call","removeEventListener","parent","propagationStopped","trigger","prototype","on","off","noop","message","debug","console","log","bind","info","warn","error","Logger","isEnabled","enable","disable","InternalAssetType","ClearMode","MaterialType","RenderState","FrontFace","CullFace","Side","CompFunc","TextureFilter","DataType","UniformSemantic","BlendFunc","MaskList","RefreshRate","IntersectInfo","BoundingType","GLCapabilityType","OITMode","AssetPromiseStatus","AssetPromise","callback","add","_status","Pending","_reject","_progress","promises","resolve","reject","setProgress","Array","isArray","completed","total","results","forEach","value","Promise","then","result","err","executor","newReject","progress","reason","Failed","Success","Set","ResourceManager","loader","extnames","_loaders","len","_extTypeMapping","url","substring","lastIndexOf","engine","retryCount","retryInterval","timeout","_assetPool","Object","create","_assetUrlPool","_referenceObjectPool","_loadingPromises","assetInfo","_loadSingleItem","map","item","all","values","promise","cancel","p","objects","sort","refObj1","refObj2","gcPriority","isGCIgnored","destroy","path","asset","id","_getTypeByUrl","urls","join","_assignDefaultOptions","load","res","useCache","_addAsset","resourceLoader","assetType","Target","_addLoader","FeatureManager","_features","_objects","IFeature","featureArray","objectArray","features","obj","method","args","count","feature","apply","constructor","ComponentsDependencies","currentComponent","dependentComponent","_addDependency","_dependenciesMap","_invDependenciesMap","entity","dependencies","get","getComponent","invDenpendencies","components","set","Map","abilityClass","ability","register","DisorderedArray","_elements","element","deleteByIndex","elements","end","lastIndex","Component","_enabled","_entity","isActiveInHierarchy","_onEnable","_onDisable","_destroyed","scene","props","_props","_awaked","_renderPriority","_renderPassFlag","_passMasks","_cullDistanceSq","EVERYTHING","_removeComponent","_onInActive","_onDestroy","_onAwake","_isActiveInHierarchy","_onActive","desComponent","masks","reduce","a","b","mask","idx","setPassMasks","val","Math","sqrt","UpdateFlag","_flags","flag","flags","last","Scene","_engine","_rootEntities","name","clipPlanes","_activeCameras","_isActiveInEngine","Engine","_getDefaultEngine","sceneFeatureManager","addObject","Entity","addRootEntity","isRoot","_isRoot","_removeFromParent","oldScene","_scene","_removeEntity","_traverseSetOwnerScene","_isActive","_processActive","_processInActive","sceneManager","activeScene","callFeatureMethod","n","rootEntitiesCount","camera","active","rootEntities","oldRootEntities","Feature","findFeature","ray","outPos","tag","registerFeature","SceneManager","_activeScene","destroyOldScene","scenePromise","resourceManager","sourceScene","destScene","ComponentsManager","_onStartScripts","_onUpdateScripts","_onLateUpdateScripts","_destoryComponents","_onUpdateAnimations","_renderers","_onUpdateRenderers","_componentsContainerPool","renderer","_rendererIndex","replaced","script","_onStartIndex","_onUpdateIndex","_onLateUpdateIndex","animation","component","onStartScripts","_started","onStart","deltaTime","onUpdate","onLateUpdate","update","_render","destoryComponents","onDestroy","camComps","_components","camComp","onBeginRender","onEndRender","pop","componentContainer","EngineFeature","currentScene","AssetObject","cacheID","needRecreate","glAsset","SceneVisitor","SceneFeature","Script","_onPreRenderIndex","_onPostRenderIndex","onAwake","componentsManager","_componentsManager","addOnStartScript","addOnUpdateScript","addOnLateUpdateScript","onEnable","removeOnStartScript","removeOnUpdateScript","removeOnLateUpdateScript","onDisable","addDestoryComponent","Loader","request","AssetType","ReferenceObject","_gcPriority","_referenceCount","resEngine","_addReferenceObject","force","_deleteAsset","_deleteReferenceObject","referenceCount","hasLight","LightFeature","visibleLights","ambientLightCount","directLightCount","pointLightCount","spotLightCount","envMapLightCount","useDiffuseEnv","useSpecularEnv","lights","light","AmbientLight","DirectLight","PointLight","SpotLight","EnvironmentMapLight","useDiffuseMap","useSpecularMap","mtl","bindMaterialValues","uniforms","getUniformDefine","pointDistanceToPlane","plane","pt","x","y","z","w","getMaxScaleByModelMatrix","modelMatrix","m","scaleXSq","scaleYSq","scaleZSq","max","Skin","inverseBindMatrices","joints","skeleton","RenderBufferColorFormat","RenderBufferDepthFormat","TextureCubeFace","TextureFilterMode","TextureFormat","TextureWrapMode","GLCompressedTextureInternalFormat","Texture","_mipmap","gl","_rhi","_bind","generateMipmap","_unbind","deleteTexture","_glTexture","_formatDetail","bindTexture","face","width","height","out","baseFormat","dataType","_readFrameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_2D","readPixels","isCube","isWebGL2","internalFormat","texStorage2D","_mipmapCount","_width","_height","texImage2D","size","faceIndex","floor","log2","pname","Clamp","_isPowerOf2","texParameteri","CLAMP_TO_EDGE","Repeat","REPEAT","Mirror","MIRRORED_REPEAT","_wrapModeU","_setWrapMode","TEXTURE_WRAP_S","_wrapModeV","TEXTURE_WRAP_T","_filterMode","Point","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","NEAREST_MIPMAP_NEAREST","Bilinear","LINEAR","LINEAR_MIPMAP_NEAREST","Trilinear","LINEAR_MIPMAP_LINEAR","_anisoLevel","capability","maxAnisoLevel","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","v","format","R8G8B8","RGB8","RGB","UNSIGNED_BYTE","isCompressed","R8G8B8A8","RGBA8","RGBA","R4G4B4A4","RGBA4","UNSIGNED_SHORT_4_4_4_4","R5G5B5A1","RGB5_A1","UNSIGNED_SHORT_5_5_5_1","R5G6B5","RGB565","UNSIGNED_SHORT_5_6_5","Alpha8","ALPHA","R32G32B32A32","RGBA32F","FLOAT","DXT1","RGB_S3TC_DXT1_EXT","DXT5","RGBA_S3TC_DXT5_EXT","ETC1_RGB","RGB_ETC1_WEBGL","ETC2_RGB","RGB8_ETC2","ETC2_RGBA5","RGB8_PUNCHTHROUGH_ALPHA1_ETC2","ETC2_RGBA8","RGBA8_ETC2_EAC","PVRTC_RGB2","RGB_PVRTC_2BPPV1_IMG","PVRTC_RGBA2","RGBA_PVRTC_2BPPV1_IMG","PVRTC_RGB4","RGB_PVRTC_4BPPV1_IMG","PVRTC_RGBA4","RGBA_PVRTC_4BPPV1_IMG","ASTC_4x4","RGBA_ASTC_4X4_KHR","ASTC_5x5","RGBA_ASTC_5X5_KHR","ASTC_6x6","RGBA_ASTC_6X6_KHR","ASTC_8x8","RGBA_ASTC_8X8_KHR","ASTC_10x10","RGBA_ASTC_10X10_KHR","ASTC_12x12","RGBA_ASTC_12X12_KHR","Error","R16G16B16A16","RGBA16F","HALF_FLOAT","Depth","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_COMPONENT","UNSIGNED_INT","attachment","DEPTH_ATTACHMENT","DepthStencil","DEPTH24_STENCIL8","DEPTH_STENCIL","UNSIGNED_INT_24_8","DEPTH_STENCIL_ATTACHMENT","Stencil","STENCIL_INDEX8","STENCIL_ATTACHMENT","Depth16","Depth24","DEPTH_COMPONENT24","Depth32","Depth24Stencil8","Depth32Stencil8","DEPTH32F_STENCIL8","FLOAT_32_UNSIGNED_INT_24_8_REV","rhi","isSupported","canIUse","textureFloat","colorBufferFloat","colorBufferHalfFloat","textureHalfFloat","isTexture","depthTexture","Texture2D","_format","mipmap","_compressedMipFilled","_hardwareRenderer","_supportTextureFormat","formatDetail","_getFormatDetail","createTexture","_getMipmapCount","_initMipmap","filterMode","wrapModeU","wrapModeV","colorBuffer","mipLevel","mipWidth","mipHeight","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","mipBit","compressedTexSubImage2D","compressedTexImage2D","texSubImage2D","imageSource","flipY","premultiplyAlpha","BufferUsage","VertexElementFormat","IndexFormat","BufferUtil","bufferUsage","Static","STATIC_DRAW","Dynamic","DYNAMIC_DRAW","Stream","STREAM_DRAW","indexFormat","UInt8","UInt16","UNSIGNED_SHORT","UInt32","Single","Vector2","Vector3","Vector4","Byte4","Short2","SHORT","Short4","UShort2","UShort4","PrimitiveTopology","IndexBufferBinding","_buffer","buffer","Primitive","_vertexBufferBindings","_vertexElements","_indexBufferBinding","_vertexElementMap","primitiveTopology","Triangles","drawOffset","drawCount","instanceCount","_glIndexType","material","materialIndex","targets","boundingBox","boundingSphere","isInFrustum","_primitiveID","bufferBindings","firstIndex","bindings","multiBindings","needLength","singleBinding","binding","_getGLIndexType","addElements","_addVertexElement","vertexElements","vertexBufferBindings","vertexBufferBinding","indexBufferBinding","finalize","semantic","ComplexMaterial","_techniquePool","context","primitive","tech","_requireTechnique","_technique","key","_getTechniqueKey","_generateTechnique","isSkin","skin","jontCount","Material","pbr_common_frag_define","pbr_util_frag_define","pbr_envmap_light_frag_define","pbr_base_frag_define","pbr_texture_frag_define","pbr_runtime_frag_define","pbr_normal_frag_define","pbr_brdf_cook_torrance_frag_define","pbr_direct_irradiance_frag_define","pbr_ibl_specular_frag_define","pbr_ibl_diffuse_frag_define","pbr_begin_frag","pbr_direct_irradiance_frag","pbr_ibl_diffuse_frag","pbr_ibl_specular_frag","pbr_end_frag","ShaderLib","common","common_vert","common_frag","color_share","normal_share","uv_share","worldpos_share","shadow_share","fog_share","begin_normal_vert","begin_position_vert","morph_target_vert","position_vert","color_vert","normal_vert","skinning_vert","uv_vert","worldpos_vert","shadow_vert","morph_vert","fog_vert","ambient_light_frag","direct_light_frag","point_light_frag","spot_light_frag","mobile_material_frag","fog_frag","begin_mobile_frag","begin_normal_frag","begin_viewdir_frag","mobile_blinnphong_frag","mobile_lambert_frag","noise_common","noise_cellular_2D","noise_cellular_2x2","noise_cellular_2x2x2","noise_cellular_3D","noise_cellular","noise_perlin_2D","noise_perlin_3D","noise_perlin_4D","noise_perlin","noise_psrd_2D","noise_simplex_2D","noise_simplex_3D_grad","noise_simplex_3D","noise_simplex_4D","noise_simplex","perturbation_share","perturbation_frag","refraction_share","refraction_frag","clipPlane_vert_define","clipPlane_vert","clipPlane_frag_define","clipPlane_frag","gamma_frag","oit_frag","oit_frag_define","PBRShaderLib","InjectShaderSlices","ShaderFactory","version","vertP","fragP","compileVert","downgrade","macros","src","parseIncludes","regex","replace","match","trim","slices","extensions","e","shader","isFrag","isGLSL300","includes","isMRT","test","replaceMRTShader","mrtIndexSet","fragmentShader","hasFragData","declaration","SetDataOptions","IndexBuffer","_byteLength","_bufferUsage","byteLengthOrData","_nativeBuffer","_glBufferUsage","hardwareRenderer","glBufferUsage","_getGLBufferUsage","createBuffer","bufferData","ELEMENT_ARRAY_BUFFER","byteLength","bindBuffer","bufferByteOffset","dataOffset","dataLength","options","None","Discard","byteSize","BYTES_PER_ELEMENT","dataByteLength","isArrayBufferView","byteOffset","bufferSubData","subData","Uint8Array","getBufferSubData","deleteBuffer","VertexBuffer","ARRAY_BUFFER","VertexBufferBinding","_stride","stride","VertexElement","_semantic","_offset","_vertexBufferIndex","_instanceDivisor","offset","vertexBufferIndex","instanceDivisor","normalized","_glElementInfo","_getElementInfo","RenderTechnique","isValid","_uniforms","commonUniforms","_attributes","commonAttributes","states","vertexShader","autoConvert","vertexPrecision","fragmentPrecision","customMacros","shaderExtension100","shaderExtension300","_needCompile","_recreateHeader","_vsHeader","_vsCode","_fsHeader","_fsCode","_fogMacro","attribLocSet","parseFog","preCompile","attribMacros","getAttributeDefines","attributes","parseVersion","parseShaderName","toUpperCase","parsePrecision","parseAttributeMacros","parseCustomMacros","parseShader","parseExtension","maxDrawBuffers","shaderMaxDrawBuffers","getMaxDrawBuffers","convertTo300","compatible","postCompile","_macros","attribNames","keys","jointNodes","maxAttribUniformVec4","renderStates","getParameter","MAX_VERTEX_UNIFORM_VECTORS","maxJoints","canIUseMoreJoints","maxJointsNum","hasFogFeature","getFogMacro","fogMacro","targetNum","morphConfig","FLOAT_VEC3","a_position","a_uv","FLOAT_VEC2","a_normal","a_tangent","FLOAT_VEC4","a_color","a_joint","a_weight","u_localMat","LOCAL","FLOAT_MAT4","u_modelMat","MODEL","u_viewMat","VIEW","u_projMat","PROJECTION","u_MVMat","MODELVIEW","u_MVPMat","MODELVIEWPROJECTION","u_normalMat","MODELINVERSETRANSPOSE","FLOAT_MAT3","u_cameraPos","EYEPOS","u_time","TIME","u_jointMatrix","JOINTMATRIX","FLOAT_MAT4_ARRAY","u_jointSampler","JOINTTEXTURE","SAMPLER_2D","u_jointCount","JOINTCOUNT","u_fogColor","u_fogDensity","u_fogNear","u_fogFar","TextureCubeMap","_compressedFaceFilled","TEXTURE_CUBE_MAP","mipSize","RenderDepthTexture","_autoMipmap","_isCube","_supportRenderBufferDepthFormat","_getRenderBufferDepthFormatDetail","RenderTarget","_colorTextures","_depthTexture","_antiAliasing","renderTexture","depth","antiAliasing","_frameBuffer","_MSAAFrameBuffer","_depthRenderBuffer","_MSAAColorRenderBuffers","_MSAADepthRenderBuffer","_oriDrawBuffers","_blitDrawBuffers","drawBuffers","some","maxAntiAliasing","_bindMainFBO","_bindMSAAFBO","deleteFramebuffer","deleteRenderbuffer","colorTexture","_activeRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","colorTextureLength","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","textureIndex","readBuffer","blitFramebuffer","NONE","renderDepth","depthRenderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","MSAADepthRenderBuffer","MSAAColorRenderBuffer","renderbufferStorageMultisample","_checkFrameBuffer","checkFramebufferStatus","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","RenderColorTexture","_supportRenderBufferColorFormat","_getRenderBufferColorFormatDetail","WrapMode","AnimationEvent","InterpolationType","TagetType","AnimationClip","duration","durationIndex","samplers","channels","_input","_output","_outputSize","_interpolation","CUBICSPLINE","sampler","input","output","outputSize","interpolation","samplerIndex","targetID","targetPath","bindSampler","tagetType","_tagetTypeMap","channel","pathType","other","channelIndex","frameIndex","frameCount","Float32Array","outValue","nextFrameIndex","alpha","evaluateCubicSpline","evaluateLinear","squared","cubed","part1","part2","part3","part4","t1","v1","t2","v2","_quaSlerp","aIndex","bIndex","ax","ay","az","aw","bx","by","bz","bw","omega","cosom","sinom","scale0","scale1","acos","sin","position","rotation","scale","AnimationLayer","_animClip","_isPlaying","layerWeight","mixTagetLayer","isFading","fadeDeltaTime","crossFadeDuration","fadeDuration","crossFadeDeltaTime","isMixLayer","hasMixLayer","mixEntity","_activedEvents","_wrapMode","_channelStates","_animClipLength","_frameEvents","nextAnimClip","rootEntity","getChannelCount","curChannel","getChannelObject","curTargetObject","_findChannelTarget","nextChannel","nextTargetObject","animClip","targetLayer","isPlaying","wrapMode","_addEvents","targetChannelStates","targetObject","frameTime","currentFrame","currentValue","createChannelValue","mixWeight","channelTimeLength","getChannelTimeLength","LOOP","channelTargets","rightnow","ONCE","_activeEvents","playingCount","_updateChannelState","removeMixWeight","channelState","animClipLength","min","lerpState","_getKeyAndAlpha","evaluate","currentKey","nextKey","removeAllEventListeners","events","frameEventIndex","eventType","FRAME_EVENT","triggerTime","triggered","curFrameTime","frameEvent","hasEvent","LOOP_END","FINISHED","rootNode","targetSceneObject","findByName","SkinnedMeshRenderer","time","keyTime","timeKeys","numKeys","keyLength","ConstantMaterial","_internalGenerate","ConstantShader","CommonMaterial","TextureMaterial","FRAG_SHADER","_setDoubleSidedDisplay","texture","u_diffuse","paramName","CULL_FACE","setValue","getValue","TECH_NAME","DISABLE_SHARE","TransparentMaterial","BLEND","functions","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","depthMask","renderType","TRANSPARENT","ShaderMaterial","_renderStates","_enableConfig","_disableConfig","_functionsConfig","state","union","filter","enableState","commonEnable","disableState","commonDisable","removeState","DEPTH_TEST","matModelViewProjection","matModelView","arr1","arr2","concat","DrawGroup","BufferGeometry","_primitive","topology","_drawGroups","_bounds","_geometryCount","setVertexBufferBindings","setIndexBufferBinding","addVertexElements","drawGroup","drawGroups","CuboidGeometry","halfWidth","halfHeight","halfDepth","vertices","indices","Uint16Array","_initialize","GeometryShape","SphereGeometry","radius","horizontalSegments","verticalSegments","alphaStart","alphaRange","thetaStart","thetaRange","_parameters","_thetaEnd","PI","initialize","grid","iy","verticesRow","ix","u","posX","cos","posY","posZ","abs","c","d","from","PlaneGeometry","CircleGeometry","segments","thetaLength","s","segment","ScreenQuadGeometry","TriangleFan","vertexStride","_initBuffer","TorusGeometry","parameters","tube","radialSegments","tubularSegments","arc","j","Model","_geometryType","sphereRadius","sphereHorizontalSegments","sphereVerticalSegments","sphereAlphaStart","sphereAlphaRange","sphereThetaStart","sphereThetaRange","geometry","cylinderRadiusTop","cylinderRadiusBottom","cylinderHeight","cylinderRadialSegments","cylinderHeightSegments","cylinderOpenEnded","CylinderGeometry","planeWidth","planeHeight","planeHorizontalSegments","planeVerticalSegments","boxWidth","boxHeight","boxDepth","geometryType","GeometryType","Box","_material","BlinnPhongMaterial","GeometryRenderer","SkyBox","_skyBoxMap","skyBoxMap","SkyBoxMaterial","setModel","transform","worldMatrix","getMaterial","Particle","node","_config","_options","__position","positionRandomness","__positionRandomness","velocity","__velocity","velocityRandomness","__velocityRandomness","acceleration","__acceleration","accelerationRandomness","__accelerationRandomness","color","__color","colorRandomness","__colorRandomness","lifetime","__lifetime","__size","sizeRandomness","__sizeRandomness","startAngle","__startAngle","startAngleRandomness","__startAngleRandomness","rotateRate","__rotateRate","rotateRateRandomness","__rotateRateRandomness","scaleFactor","__scaleFactor","__alpha","alphaRandomness","__alphaRandomness","startTimeRandomness","__startTimeRandomness","maxCount","__maxCount","__once","rotateToVelocity","__rotateToVelocity","isScaleByLifetime","__isScaleByLifetime","fadeIn","__fadeIn","fadeOut","__fadeOut","__texture","maskTexture","__maskTexture","useOriginColor","__useOriginColor","is2d","__is2d","__spriteSheet","spriteSheet","JSON","parse","__positionArray","positionArray","__separate","blendFuncSeparate","__srcRGB","__dstRGB","__srcAlpha","__dstAlpha","__src","__dst","__defaultStart","start","updateOption","updateConfig","GPUParticleSystem","TrailMaterial","u_texture","ONE","VERT_SHADER","RaycastHit","distance","collider","point","Number","MAX_VALUE","ColliderFeature","colliders","Collider","attachCollider","detachCollider","EXP2Fog","density","Fog","FogFeature","macro","bindFogToMaterial","_fog","fog","useFog","LinearFog","near","far","cacheId","Probe","_camera","renderPipeline","removeRenderPass","renderPass","addRenderPass","renderTarget","getColorTexture","_renderPipeline","opaqueQueue","transparentQueue","items","excludeRenderList","renderAll","renderList","config","oriClipPlane","renderTargetSwap","RenderPass","renderOverride","preRender","render","postRender","samples","enabled","RenderContext","_getRenderContext","renderItems","renderPassFlag","prepareDrawing","drawPrimitive","onTextureChange","cubeTexture","PlaneProbe","initialSide","side","BACK","storeMaterial","restoreMaterial","defineProperty","Light","_enableShadow","shadow","LightShadow","initShadowProjectionMatrix","_recieveShadow","_castShadow","ShadowMapMaterial","_generateMacros","_generateFragmentUniform","vs","fs","u_viewMatFromLight","u_projMatFromLight","ShadowMapPass","priority","replaceMaterial","viewMatrix","projectionMatrix","ShadowMaterial","shadowMapCount","depthFunc","LEQUAL","DST_COLOR","ZERO","lgtUniforms","ShadowPass","clearMode","DONT_CLEAR","lightMgr","pass","defaultRenderPass","lgt","enableShadow","bindShadowValues","clearTechniques","ShadowFeature","_shadowPass","_shadowMapMaterial","addShadowPass","shadowMapPass","addShadowMapPass","updatePassRenderFlag","shadowMaterial","SHADOW","SHADOW_MAP","renderQueue","recieveShadow","castShadow","addPassMasks","removePassMasks"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}