{"version":3,"file":"miniprogram.js","sources":["../src/GLExtensions.ts","../src/GLAsset.ts","../src/GLRenderStates.ts","../src/GLRenderTarget.ts"],"sourcesContent":["import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLCapabilityType } from \"@alipay/o3-core\";\n\n/**\n * GLContext 扩展管理\n * @private\n */\nexport class GLExtensions {\n  private rhi: WebGLRenderer;\n  private _requireResult;\n\n  constructor(rhi: WebGLRenderer) {\n    this.rhi = rhi;\n    this._requireResult = {};\n  }\n\n  /**\n   * 请求扩展\n   * @param {String} ext 扩展名\n   * @returns {Object|null} 请求结果，返回插件对象或null\n   * @private\n   */\n  requireExtension(ext: GLCapabilityType) {\n    if (this._requireResult[ext] !== undefined) {\n      return this._requireResult[ext];\n    }\n\n    this._requireResult[ext] = this.rhi.gl.getExtension(ext);\n    return this._requireResult[ext];\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { AssetObject } from \"@alipay/o3-core\";\n\n/**\n * GL 资源对象，通过 GLAssetsCache 管理\n * */\nexport abstract class GLAsset {\n  private readonly _rhi: WebGLRenderer;\n\n  /** @member {AssetObject} -  引擎 js 部分的资源对象 */\n  public asset: AssetObject;\n  public activeFrame: number;\n  public cacheID: number;\n\n  /**\n   * @param {WebGLRenderer} rhi - GPU 硬件抽象层的 WebGL\n   * @param {AssetObject} asset - 引擎 js 部分的资源对象\n   * */\n  protected constructor(rhi: WebGLRenderer, asset: AssetObject) {\n    this._rhi = rhi;\n    this.asset = asset;\n  }\n\n  get rhi() {\n    return this._rhi;\n  }\n\n  /**\n   * 释放 GL 资源\n   * @param {boolean} force - 强制释放\n   */\n  abstract finalize(force?: boolean);\n}\n","/**\n * 管理渲染状态，主要功能：设置默认渲染状态，cache当前渲染状态，管理渲染状态stack（供恢复用）\n * @class\n * @private\n */\nexport class GLRenderStates {\n  private _gl: WebGLRenderingContext;\n  private _stateStack = [];\n  private _parameters = {};\n\n  /**\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(gl: WebGLRenderingContext) {\n    this._gl = gl;\n    this._stateStack = []; // stat block stack\n    this._parameters = {}; // current gl state parameters\n\n    //-- 初始化，设置所有渲染状态为默认值 ---------------\n\n    /** cache */\n    this._parameters[gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this._parameters[gl.MAX_VERTEX_UNIFORM_VECTORS] = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    this._parameters[gl.MAX_VERTEX_ATTRIBS] = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this._parameters[gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\n    //-- enable/disable\n    this._parameters[gl.BLEND] = false;\n    gl.disable(gl.BLEND);\n\n    this._parameters[gl.CULL_FACE] = true;\n    gl.enable(gl.CULL_FACE);\n\n    this._parameters[gl.DEPTH_TEST] = true;\n    gl.enable(gl.DEPTH_TEST);\n\n    this._parameters[gl.DITHER] = false;\n    gl.disable(gl.DITHER);\n\n    this._parameters[gl.POLYGON_OFFSET_FILL] = false;\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n\n    this._parameters[gl.SAMPLE_ALPHA_TO_COVERAGE] = false;\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\n    this._parameters[gl.SAMPLE_COVERAGE] = false;\n    gl.disable(gl.SAMPLE_COVERAGE);\n\n    this._parameters[gl.SCISSOR_TEST] = false;\n    gl.disable(gl.SCISSOR_TEST);\n\n    this._parameters[gl.STENCIL_TEST] = false;\n    gl.disable(gl.STENCIL_TEST);\n\n    //-- colorMask\n    this._parameters[gl.COLOR_WRITEMASK] = [true, true, true, true];\n    gl.colorMask(true, true, true, true);\n\n    //-- depthMask\n    this._parameters[gl.DEPTH_WRITEMASK] = true;\n    gl.depthMask(true);\n\n    //-- blendFunc\n    this._parameters[gl.BLEND_SRC_RGB] = gl.ONE;\n    this._parameters[gl.BLEND_SRC_ALPHA] = gl.ONE;\n    this._parameters[gl.BLEND_DST_RGB] = gl.ZERO;\n    this._parameters[gl.BLEND_DST_ALPHA] = gl.ZERO;\n    gl.blendFunc(gl.ONE, gl.ZERO);\n\n    this._parameters[gl.BLEND_EQUATION_RGB] = gl.FUNC_ADD;\n    this._parameters[gl.BLEND_EQUATION_ALPHA] = gl.FUNC_ADD;\n\n    //-- cullFace\n    this._parameters[gl.CULL_FACE_MODE] = gl.BACK;\n    gl.cullFace(gl.BACK);\n\n    //-- frontFace\n    this._parameters[gl.FRONT_FACE] = gl.CCW;\n    gl.frontFace(gl.CCW);\n\n    //-- depthFunc\n    this._parameters[gl.DEPTH_FUNC] = gl.LESS;\n    gl.depthFunc(gl.LESS);\n\n    //-- depthRange\n    this._parameters[gl.DEPTH_RANGE] = [0, 1];\n    gl.depthRange(0, 1);\n\n    //-- polygonOffset\n    this._parameters[gl.POLYGON_OFFSET_FACTOR] = 0;\n    this._parameters[gl.POLYGON_OFFSET_UNITS] = 0;\n    gl.polygonOffset(0, 0);\n\n    //-- scissor\n    this._parameters[gl.SCISSOR_BOX] = [0, 0, gl.canvas.width, gl.canvas.height];\n\n    //-- stencilFunc\n    this._parameters[gl.STENCIL_FUNC] = gl.ALWAYS;\n    this._parameters[gl.STENCIL_VALUE_MASK] = 0xff;\n    this._parameters[gl.STENCIL_REF] = 0;\n    gl.stencilFunc(gl.ALWAYS, 0, 0xff);\n\n    // -- stencilMask\n    this._parameters[gl.STENCIL_WRITEMASK] = 0xff;\n    gl.stencilMask(0xff);\n\n    //-- stencilOp\n    this._parameters[gl.STENCIL_FAIL] = gl.KEEP;\n    this._parameters[gl.STENCIL_PASS_DEPTH_FAIL] = gl.KEEP;\n    this._parameters[gl.STENCIL_PASS_DEPTH_PASS] = gl.KEEP;\n  }\n\n  /**\n   * 取得渲染状态参数：any gl.getParameter(pname);\n   * @param {GLenum} pname\n   */\n  getParameter(pname) {\n    return this._parameters[pname];\n  }\n\n  /**\n   * 新建一个State Block（渲染单个对象时的一组渲染状态），并放入状态栈\n   */\n  pushStateBlock(_name) {\n    const stateBlock = {\n      name: _name,\n      states: []\n    };\n    this._stateStack.push(stateBlock);\n  }\n\n  /**\n   * 取出栈顶的State Block，并用来恢复当前的渲染状态\n   */\n  popStateBlock() {\n    const stateBlock = this._stateStack.pop();\n\n    //-- 恢复渲染状态\n    for (const state of stateBlock.states) {\n      const stateFunc = state.func;\n      const stateArgs = state.args;\n      const parameters = state.parameters;\n      stateFunc.apply(this._gl, stateArgs);\n      for (const param in parameters) {\n        this._parameters[param] = parameters[param];\n      }\n    }\n  }\n\n  /**\n   * 取得当前状态栈的顶部对象\n   * @return {Object}\n   * @private\n   */\n  _getStateStackTop() {\n    const count = this._stateStack.length;\n    if (count > 0) {\n      return this._stateStack[count - 1];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * 将一个渲染状态放入栈顶的State Block\n   * @param {Function} func\n   * @param {Array} args\n   * @private\n   */\n  _pushState(_func, _args, _param) {\n    const stateBlock = this._getStateStackTop();\n    if (stateBlock) {\n      stateBlock.states.push({\n        func: _func,\n        args: _args,\n        parameters: _param\n      });\n    }\n  }\n\n  /**\n   * 设置渲染状态：void gl.enable(cap);\n   * @param {GLenum} cap\n   */\n  enable(cap) {\n    const currentState = this._parameters[cap];\n    if (currentState === true) return;\n\n    this._parameters[cap] = true;\n    this._gl.enable(cap);\n\n    const pushParam = {};\n    pushParam[cap] = false;\n    this._pushState(this._gl.disable, [cap], pushParam);\n  }\n\n  /**\n   * 设置渲染状态：void gl.disable(cap);\n   * @param {GLenum} cap\n   */\n  disable(cap) {\n    const currentState = this._parameters[cap];\n    if (currentState === false) return;\n\n    this._parameters[cap] = false;\n    this._gl.disable(cap);\n\n    const pushParam = {};\n    pushParam[cap] = true;\n    this._pushState(this._gl.enable, [cap], pushParam);\n  }\n\n  /**\n   * 设置渲染状态：void gl.blendFunc(sfactor, dfactor);\n   * @param {GLenum} sfactor\n   * @param {GLenum} dfactor\n   */\n  blendFunc(sfactor, dfactor) {\n    const gl = this._gl;\n\n    const param = this._parameters;\n    if (\n      param[gl.BLEND_SRC_RGB] === sfactor &&\n      param[gl.BLEND_SRC_ALPHA] === sfactor &&\n      param[gl.BLEND_DST_RGB] === dfactor &&\n      param[gl.BLEND_DST_ALPHA] === dfactor\n    )\n      return;\n\n    const pushArgs = [\n      param[gl.BLEND_SRC_RGB],\n      param[gl.BLEND_DST_RGB],\n      param[gl.BLEND_SRC_ALPHA],\n      param[gl.BLEND_DST_ALPHA]\n    ];\n    const pushParam = {};\n    pushParam[gl.BLEND_SRC_RGB] = param[gl.BLEND_SRC_RGB];\n    pushParam[gl.BLEND_DST_RGB] = param[gl.BLEND_DST_RGB];\n    pushParam[gl.BLEND_SRC_ALPHA] = param[gl.BLEND_SRC_ALPHA];\n    pushParam[gl.BLEND_DST_ALPHA] = param[gl.BLEND_DST_ALPHA];\n    this._pushState(gl.blendFuncSeparate, pushArgs, pushParam);\n\n    param[gl.BLEND_SRC_RGB] = sfactor;\n    param[gl.BLEND_SRC_ALPHA] = sfactor;\n    param[gl.BLEND_DST_RGB] = dfactor;\n    param[gl.BLEND_DST_ALPHA] = dfactor;\n    gl.blendFunc(sfactor, dfactor);\n  }\n\n  /**\n   * 设置渲染状态：void gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n   * @param {GLenum} srcRGB\n   * @param {GLenum} dstRGB\n   * @param {GLenum} srcAlpha\n   * @param {GLenum} dstAlpha\n   */\n  blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n    const gl = this._gl;\n\n    const param = this._parameters;\n    if (\n      param[gl.BLEND_SRC_RGB] === srcRGB &&\n      param[gl.BLEND_SRC_ALPHA] === srcAlpha &&\n      param[gl.BLEND_DST_RGB] === dstRGB &&\n      param[gl.BLEND_DST_ALPHA] === dstAlpha\n    )\n      return;\n\n    const pushArgs = [\n      param[gl.BLEND_SRC_RGB],\n      param[gl.BLEND_DST_RGB],\n      param[gl.BLEND_SRC_ALPHA],\n      param[gl.BLEND_DST_ALPHA]\n    ];\n    const pushParam = {};\n    pushParam[gl.BLEND_SRC_RGB] = param[gl.BLEND_SRC_RGB];\n    pushParam[gl.BLEND_DST_RGB] = param[gl.BLEND_DST_RGB];\n    pushParam[gl.BLEND_SRC_ALPHA] = param[gl.BLEND_SRC_ALPHA];\n    pushParam[gl.BLEND_DST_ALPHA] = param[gl.BLEND_DST_ALPHA];\n    this._pushState(gl.blendFuncSeparate, pushArgs, pushParam);\n\n    param[gl.BLEND_SRC_RGB] = srcRGB;\n    param[gl.BLEND_SRC_ALPHA] = srcAlpha;\n    param[gl.BLEND_DST_RGB] = dstRGB;\n    param[gl.BLEND_DST_ALPHA] = dstAlpha;\n    gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n  }\n\n  /**\n   * void gl.blendEquationSeparate(modeRGB, modeAlpha);\n   * @param {GLenum} modeRGB\n   * @param {GLenum} modeAlpha\n   */\n  blendEquationSeparate(modeRGB, modeAlpha) {\n    const gl = this._gl;\n    const param = this._parameters;\n\n    if (param[gl.BLEND_EQUATION_RGB] === modeRGB && param[gl.BLEND_EQUATION_ALPHA] === modeAlpha) return;\n\n    const pushArgs = [param[gl.BLEND_EQUATION_RGB], param[gl.BLEND_EQUATION_ALPHA]];\n    const pushParam = {};\n    pushParam[gl.BLEND_EQUATION_RGB] = param[gl.BLEND_EQUATION_RGB];\n    pushParam[gl.BLEND_EQUATION_ALPHA] = param[gl.BLEND_EQUATION_ALPHA];\n    this._pushState(gl.blendEquationSeparate, pushArgs, pushParam);\n\n    param[gl.BLEND_EQUATION_RGB] = modeRGB;\n    param[gl.BLEND_EQUATION_ALPHA] = modeAlpha;\n    gl.blendEquationSeparate(modeRGB, modeAlpha);\n  }\n\n  /**\n   * 控制颜色通道释放写入Frame Buffer\n   * @param {boolean} red 红色通道是否写入\n   * @param {boolean} green 绿色通道是否写入\n   * @param {boolean} blue 蓝色通道是否写入\n   * @param {boolean} alpha 透明通道是否写入\n   */\n  colorMask(red: boolean, green: boolean, blue: boolean, alpha: boolean) {\n    const gl = this._gl;\n    const pushParam = {};\n    pushParam[gl.COLOR_WRITEMASK] = this._parameters[gl.COLOR_WRITEMASK];\n    this._pushState(gl.colorMask, this._parameters[gl.COLOR_WRITEMASK], pushParam);\n\n    this._parameters[gl.COLOR_WRITEMASK] = [red, green, blue, alpha];\n    gl.colorMask(red, green, blue, alpha);\n  }\n\n  /**\n   * 是否写入深度缓冲\n   * @param {boolean} flag\n   */\n  depthMask(flag) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.DEPTH_WRITEMASK] === flag) return;\n\n    const pushParam = {};\n    pushParam[gl.DEPTH_WRITEMASK] = this._parameters[gl.DEPTH_WRITEMASK];\n    this._pushState(gl.depthMask, [this._parameters[gl.DEPTH_WRITEMASK]], pushParam);\n\n    this._parameters[gl.DEPTH_WRITEMASK] = flag;\n    gl.depthMask(flag);\n  }\n\n  /**\n   * 设置渲染状态：void gl.cullFace(mode);\n   * @param {GLenum} mode\n   */\n  cullFace(mode: GLenum) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.CULL_FACE_MODE] === mode) return;\n\n    const pushParam = {};\n    pushParam[gl.CULL_FACE_MODE] = this._parameters[gl.CULL_FACE_MODE];\n    this._pushState(gl.cullFace, [this._parameters[gl.CULL_FACE_MODE]], pushParam);\n\n    this._parameters[gl.CULL_FACE_MODE] = mode;\n    gl.cullFace(mode);\n  }\n\n  /**\n   * 设置渲染状态：void gl.frontFace(mode);\n   * @param {GLenum} mode\n   */\n  frontFace(mode: GLenum) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.FRONT_FACE] === mode) return;\n\n    const pushParam = {};\n    pushParam[gl.FRONT_FACE] = this._parameters[gl.FRONT_FACE];\n    this._pushState(gl.frontFace, [this._parameters[gl.FRONT_FACE]], pushParam);\n\n    this._parameters[gl.FRONT_FACE] = mode;\n    gl.frontFace(mode);\n  }\n\n  /**\n   * 设置渲染状态：void gl.depthFunc(func);\n   * @param {GLenum} func\n   */\n  depthFunc(func: GLenum) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.DEPTH_FUNC] === func) return;\n\n    const pushParam = {};\n    pushParam[gl.DEPTH_FUNC] = this._parameters[gl.DEPTH_FUNC];\n    this._pushState(gl.depthFunc, [this._parameters[gl.DEPTH_FUNC]], pushParam);\n\n    this._parameters[gl.DEPTH_FUNC] = func;\n    gl.depthFunc(func);\n  }\n\n  /**\n   * 设置渲染状态：void gl.depthRange(zNear, zFar);\n   * @param {GLclampf} zNear\n   * @param {GLclampf} zFar\n   */\n  depthRange(zNear, zFar) {\n    const gl = this._gl;\n    const currentValue = this._parameters[gl.DEPTH_RANGE];\n\n    if (currentValue[0] === zNear && currentValue[1] === zFar) return;\n\n    const pushParam = {};\n    pushParam[gl.DEPTH_RANGE] = currentValue;\n    this._pushState(gl.depthRange, [this._parameters[gl.DEPTH_RANGE]], pushParam);\n\n    this._parameters[gl.DEPTH_RANGE] = [zNear, zFar];\n    gl.depthRange(zNear, zFar);\n  }\n\n  /**\n   * void gl.polygonOffset(factor, units);\n   * @param {GLfloat} factor\n   * @param {GLfloat} units\n   */\n  polygonOffset(factor, units) {\n    const gl = this._gl;\n    if (this._parameters[gl.POLYGON_OFFSET_FACTOR] === factor && this._parameters[gl.POLYGON_OFFSET_UNITS] === units)\n      return;\n\n    const pushParam = {};\n    pushParam[gl.POLYGON_OFFSET_FACTOR] = this._parameters[gl.POLYGON_OFFSET_FACTOR];\n    pushParam[gl.POLYGON_OFFSET_UNITS] = this._parameters[gl.POLYGON_OFFSET_UNITS];\n    this._pushState(\n      gl.polygonOffset,\n      [this._parameters[gl.POLYGON_OFFSET_FACTOR], this._parameters[gl.POLYGON_OFFSET_UNITS]],\n      pushParam\n    );\n\n    this._parameters[gl.POLYGON_OFFSET_FACTOR] = factor;\n    this._parameters[gl.POLYGON_OFFSET_UNITS] = units;\n    gl.polygonOffset(factor, units);\n  }\n\n  /**\n   * 设置渲染状态：void gl.scissor(x, y, width, height);\n   * @param {GLint} x\n   * @param {GLint} y\n   * @param {GLsizei} width\n   * @param {GLsizei} height\n   */\n  scissor(x, y, width, height) {\n    const gl = this._gl;\n\n    const box = this._parameters[gl.SCISSOR_BOX];\n    if (box[0] === x && box[1] === y && box[2] === width && box[3] === height) return;\n\n    const pushParam = {};\n    pushParam[gl.SCISSOR_BOX] = box;\n    this._pushState(gl.scissor, box, pushParam);\n\n    this._parameters[gl.SCISSOR_BOX] = [x, y, width, height];\n    gl.scissor(x, y, width, height);\n  }\n\n  /**\n   * 设置渲染状态：void gl.stencilFunc(func, ref, mask);\n   * @param {GLenum} func\n   * @param {GLint} ref\n   * @param {GLint} mask\n   */\n  stencilFunc(func: GLenum, ref: GLint, mask: GLint) {\n    const gl = this._gl;\n\n    if (\n      this._parameters[gl.STENCIL_FUNC] === func &&\n      this._parameters[gl.STENCIL_REF] === ref &&\n      this._parameters[gl.STENCIL_VALUE_MASK] === mask\n    )\n      return;\n\n    const pushArgs = [\n      this._parameters[gl.STENCIL_FUNC],\n      this._parameters[gl.STENCIL_REF],\n      this._parameters[gl.STENCIL_VALUE_MASK]\n    ];\n    const pushParam = {};\n    pushParam[gl.STENCIL_FUNC] = pushArgs[0];\n    pushParam[gl.STENCIL_REF] = pushArgs[1];\n    pushParam[gl.STENCIL_VALUE_MASK] = pushArgs[2];\n\n    this._pushState(gl.stencilFunc, pushArgs, pushParam);\n\n    this._parameters[gl.STENCIL_FUNC] = func;\n    this._parameters[gl.STENCIL_REF] = ref;\n    this._parameters[gl.STENCIL_VALUE_MASK] = mask;\n    gl.stencilFunc(func, ref, mask);\n  }\n\n  /**\n   * 设置渲染状态：void gl.stencilOp(fail, zfail, zpass);\n   * @param {GLenum} fail\n   * @param {GLenum} zfail\n   * @param {GLenum} zpass\n   */\n  stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum) {\n    const gl = this._gl;\n\n    if (\n      this._parameters[gl.STENCIL_FAIL] === fail &&\n      this._parameters[gl.STENCIL_PASS_DEPTH_FAIL] === zfail &&\n      this._parameters[gl.STENCIL_PASS_DEPTH_PASS] === zpass\n    )\n      return;\n\n    const pushArgs = [\n      this._parameters[gl.STENCIL_FAIL],\n      this._parameters[gl.STENCIL_PASS_DEPTH_FAIL],\n      this._parameters[gl.STENCIL_PASS_DEPTH_PASS]\n    ];\n    const pushParam = {};\n    pushParam[gl.STENCIL_FAIL] = pushArgs[0];\n    pushParam[gl.STENCIL_PASS_DEPTH_FAIL] = pushArgs[1];\n    pushParam[gl.STENCIL_PASS_DEPTH_PASS] = pushArgs[2];\n\n    this._pushState(gl.stencilOp, pushArgs, pushParam);\n\n    this._parameters[gl.STENCIL_FAIL] = fail;\n    this._parameters[gl.STENCIL_BACK_PASS_DEPTH_FAIL] = zfail;\n    this._parameters[gl.STENCIL_PASS_DEPTH_PASS] = zpass;\n    gl.stencilOp(fail, zfail, zpass);\n  }\n\n  stencilMask(mask: GLuint) {\n    const gl = this._gl;\n\n    if (this._parameters[gl.STENCIL_WRITEMASK] === mask) return;\n\n    const pushParam = {};\n    pushParam[gl.STENCIL_WRITEMASK] = this._parameters[gl.STENCIL_WRITEMASK];\n    this._pushState(gl.stencilMask, [this._parameters[gl.STENCIL_WRITEMASK]], pushParam);\n\n    this._parameters[gl.STENCIL_WRITEMASK] = mask;\n    gl.stencilMask(mask);\n  }\n}\n","import { GLAsset } from \"./GLAsset\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\nimport { RenderTarget } from \"@alipay/o3-core\";\n\n/**\n * GL 层的 RenderTarget 资源管理和渲染调用处理\n * @class\n * @private\n */\nexport class GLRenderTarget extends GLAsset {\n  private readonly renderTarget: RenderTarget;\n\n  constructor(rhi: WebGLRenderer, renderTarget: RenderTarget) {\n    super(rhi, renderTarget);\n\n    this.renderTarget = renderTarget;\n  }\n\n  /**\n   * 激活 RenderTarget 对象，后续的内容将会被渲染到当前激活 RenderTarget 对象上\n   * @private\n   */\n  public activeRenderTarget() {\n    const gl = this.rhi.gl;\n    const { width, height } = this.renderTarget;\n\n    this.renderTarget._activeRenderTarget();\n    gl.viewport(0.0, 0.0, width, height);\n  }\n\n  /**\n   * 设置渲染到立方体纹理的面\n   * @param {number} faceIndex - gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex\n   * */\n  public setRenderTargetFace(faceIndex: number) {\n    this.renderTarget._setRenderTargetFace(faceIndex);\n  }\n\n  /** blit FBO */\n  blitRenderTarget() {\n    if (this.renderTarget._MSAAFrameBuffer) {\n      this.renderTarget._blitRenderTarget();\n      return;\n    }\n  }\n\n  /**\n   * 释放 GL 资源\n   * @private\n   */\n  finalize() {}\n}\n"],"names":["GLExtensions","rhi","_requireResult","ext","undefined","gl","getExtension","GLAsset","asset","_rhi","activeFrame","cacheID","GLRenderStates","_gl","_stateStack","_parameters","MAX_COMBINED_TEXTURE_IMAGE_UNITS","getParameter","MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","BLEND","disable","CULL_FACE","enable","DEPTH_TEST","DITHER","POLYGON_OFFSET_FILL","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","SCISSOR_TEST","STENCIL_TEST","COLOR_WRITEMASK","colorMask","DEPTH_WRITEMASK","depthMask","BLEND_SRC_RGB","ONE","BLEND_SRC_ALPHA","BLEND_DST_RGB","ZERO","BLEND_DST_ALPHA","blendFunc","BLEND_EQUATION_RGB","FUNC_ADD","BLEND_EQUATION_ALPHA","CULL_FACE_MODE","BACK","cullFace","FRONT_FACE","CCW","frontFace","DEPTH_FUNC","LESS","depthFunc","DEPTH_RANGE","depthRange","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","polygonOffset","SCISSOR_BOX","canvas","width","height","STENCIL_FUNC","ALWAYS","STENCIL_VALUE_MASK","STENCIL_REF","stencilFunc","STENCIL_WRITEMASK","stencilMask","STENCIL_FAIL","KEEP","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","pname","_name","stateBlock","name","states","push","pop","state","stateFunc","func","stateArgs","args","parameters","apply","param","count","length","_func","_args","_param","_getStateStackTop","cap","currentState","pushParam","_pushState","sfactor","dfactor","pushArgs","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","modeRGB","modeAlpha","blendEquationSeparate","red","green","blue","alpha","flag","mode","zNear","zFar","currentValue","factor","units","x","y","box","scissor","ref","mask","fail","zfail","zpass","stencilOp","STENCIL_BACK_PASS_DEPTH_FAIL","GLRenderTarget","renderTarget","_activeRenderTarget","viewport","faceIndex","_setRenderTargetFace","_MSAAFrameBuffer","_blitRenderTarget"],"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}