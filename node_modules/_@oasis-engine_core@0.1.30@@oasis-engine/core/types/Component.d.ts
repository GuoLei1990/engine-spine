import { EventDispatcher, MaskList } from "./base";
import { Engine } from "./Engine";
import { Entity } from "./Entity";
import { Scene } from "./Scene";
/**
 * 组件的基类。
 */
export declare abstract class Component extends EventDispatcher {
    private _enabled;
    private _awaked;
    /**
     * 是否启用。
     */
    get enabled(): boolean;
    set enabled(value: boolean);
    /**
     * 是否已经销毁。
     */
    get destroyed(): boolean;
    /**
     * 所属节点对象。
     */
    get entity(): Entity;
    /**
     * 所属场景对象。
     */
    get scene(): Scene;
    /**
     * 所属的 Engine 对象。
     */
    get engine(): Engine;
    constructor(entity: Entity);
    /**
     * 销毁本组件对象
     */
    destroy(): void;
    private _renderPriority;
    private _renderPassFlag;
    private _passMasks;
    private _cullDistanceSq;
    /**
     * @deprecated
     * 渲染优先级
     * @member {number}
     */
    get renderPriority(): number;
    set renderPriority(val: number);
    /**
     * @deprecated
     */
    get cullDistanceSq(): number;
    /**
     * @deprecated
     */
    get cullDistance(): number;
    set cullDistance(val: number);
    /**
     * @deprecated
     */
    get renderPassFlag(): MaskList;
    set renderPassFlag(val: MaskList);
    /**
     * @deprecated
     * 设置通过的 Pass Mask，
     * @param  {PassMask} masks 各个 mask
     */
    setPassMasks(...masks: MaskList[]): void;
    /**
     * @deprecated
     * 添加 Mask 到通过列表
     * @param  {PassMask} masks 各个 mask
     */
    addPassMasks(...masks: MaskList[]): void;
    /**
     * @deprecated
     * 从当前的通过列表移除 Mask
     * @param  {PassMask} masks 各个 mask
     */
    removePassMasks(...masks: MaskList[]): void;
}
