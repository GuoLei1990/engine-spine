import { Camera } from "@oasis-engine/core";
/**
 * GL 层的 Technique 资源管理和渲染调用处理
 * @private
 */
export declare class GLSpriteBatcher {
    private _gl;
    private _batchedQueue;
    private _targetTexture;
    private _glSprite;
    private _glTech;
    private _material;
    private _camera;
    constructor(rhi: any);
    /**
     * 将缓存的Sprite也绘制出来
     */
    flush(): void;
    /**
     * 检查一个Sprite绘制的时候，能否和上一个Sprite合并绘制
     * @param {Texture}   texture    纹理信息
     * @param {String}    renderMode    绘制方式， '2D' 或者 '3D'
     * @param {Camera}   camera        相机信息
     */
    canBatch(texture: any, renderMode: any, camera: Camera): boolean;
    /**
     * 把一个 Sprite 绘制需要的信息传进来，完成Batch逻辑
     * @param {Object} positionQuad  Sprite四个顶点的位置
     * @param {Object} uvRect        Sprite在texture上的纹理坐标
     * @param {vec4}   tintColor     颜色
     * @param {Texture}   texture    纹理信息
     * @param {String}    renderMode    绘制方式， '2D' 或者 '3D'
     * @param {Camera}   camera        相机信息
     */
    drawSprite(positionQuad: any, uvRect: any, tintColor: any, texture: any, renderMode: any, camera: Camera): void;
    /**
     * 释放资源
     */
    finalize(): void;
}
