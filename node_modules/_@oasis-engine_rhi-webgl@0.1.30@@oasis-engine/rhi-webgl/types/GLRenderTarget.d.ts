import { GLAsset } from "./GLAsset";
import { WebGLRenderer } from "./WebGLRenderer";
import { RenderTarget } from "@alipay/o3-core";
/**
 * GL 层的 RenderTarget 资源管理和渲染调用处理
 * @class
 * @private
 */
export declare class GLRenderTarget extends GLAsset {
    private readonly renderTarget;
    constructor(rhi: WebGLRenderer, renderTarget: RenderTarget);
    /**
     * 激活 RenderTarget 对象，后续的内容将会被渲染到当前激活 RenderTarget 对象上
     * @private
     */
    activeRenderTarget(): void;
    /**
     * 设置渲染到立方体纹理的面
     * @param {number} faceIndex - gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex
     * */
    setRenderTargetFace(faceIndex: number): void;
    /** blit FBO */
    blitRenderTarget(): void;
    /**
     * 释放 GL 资源
     * @private
     */
    finalize(): void;
}
