import { ShadowMapPass } from "./ShadowMapPass";
import { SceneFeature } from "../SceneFeature";
import { Camera } from "../Camera";
import { RenderQueue } from "../RenderPipeline/RenderQueue";
/**
 * Shadow Feature：场景中 Shadow 特性
 * @extends SceneFeature
 * @private
 */
export declare class ShadowFeature extends SceneFeature {
    private _shadowPass;
    private _shadowMapMaterial;
    /**
     * 场景渲染前的回调, 在此环节生成 Shadow Map
     * @param {Scene} scene
     * @param {Camera} camera
     */
    preRender(scene: any, camera: Camera): void;
    /**
     * 添加渲染阴影的 RendererPass
     * @param {Camera} camera
     */
    addShadowPass(camera: Camera): void;
    /**
     * 添加渲染 shadow map 的 RendererPass
     * @param {Camera} camera
     * @param {ALight} light
     */
    addShadowMapPass(camera: Camera, light: any): ShadowMapPass;
    /**
     * 用于更新场景中物体的 renderPassFlag 状态
     * @param {RenderQueue} renderQueue
     */
    updatePassRenderFlag(renderQueue: RenderQueue): void;
}
