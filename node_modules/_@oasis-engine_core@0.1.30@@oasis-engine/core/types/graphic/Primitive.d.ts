import { BoundingSphere, OBB } from "@oasis-engine/math";
import { Engine } from "..";
import { RefObject } from "../asset/RefObject";
import { Buffer } from "../graphic/Buffer";
import { IPlatformPrimitive } from "../renderingHardwareInterface";
import { IndexFormat } from "./enums/IndexFormat";
import { IndexBufferBinding } from "./IndexBufferBinding";
import { SubPrimitive } from "./SubPrimitive";
import { VertexBufferBinding } from "./VertexBufferBinding";
import { VertexElement } from "./VertexElement";
/**
 * @private
 */
export declare class Primitive extends RefObject {
    /** 名称。*/
    name: string;
    /** 实例数量，0 表示关闭实例渲染。*/
    instanceCount: number;
    _vertexElementMap: object;
    _glIndexType: number;
    _platformPrimitive: IPlatformPrimitive;
    private _vertexBufferBindings;
    private _indexBufferBinding;
    private _vertexElements;
    /**
     * 顶点缓冲绑定信息集合。
     */
    get vertexBufferBindings(): Readonly<VertexBufferBinding[]>;
    /**
     * 顶点元素集合。
     */
    get vertexElements(): Readonly<VertexElement[]>;
    /**
     * 索引缓冲绑定信息。
     */
    get indexBufferBinding(): IndexBufferBinding;
    targets: any[];
    boundingBox: OBB;
    boundingSphere: BoundingSphere;
    isInFrustum: boolean;
    constructor(engine: Engine, name?: string);
    /**
     * 设置顶点缓冲绑定。
     * @param vertexBuffer - 顶点缓冲
     * @param stride - 顶点缓冲跨度
     * @param firstIndex - 顶点缓冲绑定索引,默认值为 0
     */
    setVertexBufferBinding(vertexBuffer: Buffer, stride: number, firstIndex?: number): void;
    /**
     * 设置顶点缓冲绑定。
     * @param vertexBufferBinding - 顶点缓冲绑定
     * @param firstIndex - 顶点缓冲绑定索引,默认值为 0
     */
    setVertexBufferBinding(vertexBufferBinding: VertexBufferBinding, firstIndex?: number): void;
    /**
     * 设置顶点缓冲绑定信息。
     * @param bufferBindings - 缓冲绑定集合
     * @param firstIndex - 第一个绑定索引
     */
    setVertexBufferBindings(bufferBindings: VertexBufferBinding[], firstIndex?: number): void;
    /**
     * 设置索引缓冲绑定。
     * @param buffer - 索引缓冲
     * @param format - 索引缓冲格式
     */
    setIndexBufferBinding(buffer: Buffer, format: IndexFormat): void;
    /**
     * 设置索引缓冲绑定。
     * @param bufferBinding - 索引缓冲绑定
     */
    setIndexBufferBinding(bufferBinding: IndexBufferBinding): void;
    /**
     * 设置顶点元素集合。
     * @param elements - 顶点元素集合
     */
    setVertexElements(elements: VertexElement[]): void;
    /**
     * 绘制。
     */
    draw(tech: any, subPrimitive: SubPrimitive): void;
    /**
     * @override
     * 销毁。
     */
    _onDestroy(): void;
    private _clearVertexElements;
    private _addVertexElement;
    private _setVertexBufferBinding;
}
