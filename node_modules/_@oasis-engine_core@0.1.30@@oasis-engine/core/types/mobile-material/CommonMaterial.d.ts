import { Vector4 } from "@oasis-engine/math";
import { DataType } from "../base/Constant";
import { Engine } from "../Engine";
import { Material } from "../material/Material";
import { TechniqueStates } from "../material/type";
/**
 * 材质的通用参数管理，其他常用材质的基类
 * @class
 */
export declare abstract class CommonMaterial extends Material {
    private _ambientLightCount;
    renderStates: TechniqueStates;
    protected abstract _generateTechnique(): any;
    constructor(engine: Engine, name: string);
    /**
     * 自发光属性
     * @member {Vector4|Texture2D}
     */
    get emission(): Vector4;
    set emission(val: Vector4);
    /**
     * 环境光反射属性
     * @member {vec4|Texture2D}
     */
    get ambient(): Vector4;
    set ambient(val: Vector4);
    prepareDrawing(context: any, component: any, primitive: any): void;
    /**
     * 绑定灯光相关 Uniform Define
     * */
    bindLightUniformDefine(camera: any): void;
    /**
     * 生成内部的 Technique 对象
     * @private
     */
    _internalGenerate(name: any, fragmentShader: any): void;
    _generateMacros(): any[];
    /**
     * 根据自身的参数类型，生成相应的 Fragment Shader 所需的 Uniform 定义
     * @private
     */
    _generateFragmentUniform(): {
        u_emission: {
            name: string;
            type: DataType;
        };
        u_ambient: {
            name: string;
            type: DataType;
        };
    };
}
