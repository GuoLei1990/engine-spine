import { SceneFeature } from "./SceneFeature";
import { EngineFeature } from "./EngineFeature";
import { Scene } from "./Scene";
import { Engine } from "./Engine";
/**
 * 管理一组功能特性对象
 * @class
 */
export declare class FeatureManager<T extends EngineFeature | SceneFeature> {
    private _features;
    private _objects;
    /**
     * 注册一个功能特性
     * @param {SceneFeature|EngineFeature} Feature
     */
    registerFeature(IFeature: new () => T): void;
    /**
     * 添加一个具有功能特性的对象
     * @param {Scene|Engine} obj
     */
    addObject(obj: Scene | Engine): void;
    /**
     * 调用功能特性的指定方法
     * @param {Scene|Engine} obj
     * @param {string} method
     * @param {Array} args
     */
    callFeatureMethod(obj: Scene | Engine, method: string, args: any[]): void;
    /**
     * 查找特性
     * @param {Scene|Engine} obj
     * @param {SceneFeature|EngineFeature} feature
     */
    findFeature(obj: Scene | Engine, IFeature: new () => T): T;
}
