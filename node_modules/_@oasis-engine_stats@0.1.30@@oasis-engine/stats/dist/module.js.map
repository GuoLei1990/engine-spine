{"version":3,"file":"module.js","sources":["../src/log.ts","../src/hooks/DrawCallHook.ts","../src/hooks/ShaderHook.ts","../src/hooks/TextureHook.ts","../src/Core.ts","../src/Monitor.ts","../src/Stats.ts","../src/index.ts"],"sourcesContent":["import { Logger } from \"oasis-engine\";\n\nexport function log(...args: any) {\n  Logger.info(\"🚀 [o3-engine-stats]\", ...args);\n}\n\nexport function errorLog(...args: any) {\n  Logger.error(\"🚀 [o3-engine-stats]\", ...args);\n}\n","import { log, errorLog } from \"../log\";\n\n/**\n * @class DrawCallHook\n */\nexport default class DrawCallHook {\n  public drawCall: number = 0;\n  public triangles: number = 0;\n  public lines: number = 0;\n  public points: number = 0;\n  private hooked: boolean;\n  private realDrawElements: any;\n  private realDrawArrays: any;\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.realDrawElements = gl.drawElements;\n    this.realDrawArrays = gl.drawArrays;\n\n    gl.drawElements = this.hookedDrawElements.bind(this);\n    gl.drawArrays = this.hookedDrawArrays.bind(this);\n\n    this.hooked = true;\n    this.gl = gl;\n\n    log(`DrawCall is hooked.`);\n  }\n\n  private hookedDrawElements(mode: number, count: number, type: number, offset: number) {\n    this.realDrawElements.call(this.gl, mode, count, type, offset);\n    this.update(count, mode);\n  }\n\n  private hookedDrawArrays(mode: number, first: number, count: number) {\n    this.realDrawArrays.call(this.gl, mode, first, count);\n    this.update(count, mode);\n  }\n\n  private update(count: number, mode: number) {\n    const { gl } = this;\n\n    this.drawCall++;\n\n    switch (mode) {\n      case gl.TRIANGLES:\n        this.triangles += count / 3;\n        break;\n\n      case gl.TRIANGLE_STRIP:\n      case gl.TRIANGLE_FAN:\n        this.triangles += count - 2;\n        break;\n\n      case gl.LINES:\n        this.lines += count / 2;\n        break;\n\n      case gl.LINE_STRIP:\n        this.lines += count - 1;\n        break;\n\n      case gl.LINE_LOOP:\n        this.lines += count;\n        break;\n\n      case gl.POINTS:\n        this.points += count;\n        break;\n\n      default:\n        errorLog(`Unknown draw mode: ${mode}`);\n        break;\n    }\n  }\n\n  public reset(): void {\n    this.drawCall = 0;\n    this.triangles = 0;\n    this.lines = 0;\n    this.points = 0;\n  }\n\n  public release(): void {\n    if (this.hooked) {\n      this.gl.drawElements = this.realDrawElements;\n      this.gl.drawArrays = this.realDrawArrays;\n    }\n\n    this.hooked = false;\n  }\n}\n","import { log, errorLog } from \"../log\";\n\n/**\n * @class ShaderHook\n */\nexport default class ShaderHook {\n  public shaders: number = 0;\n  private realAttachShader: any;\n  private realDetachShader: any;\n  private hooked: boolean;\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.realAttachShader = gl.attachShader;\n    this.realDetachShader = gl.detachShader;\n\n    gl.attachShader = this.hookedAttachShader.bind(this);\n    gl.detachShader = this.hookedDetachShader.bind(this);\n\n    this.hooked = true;\n    this.gl = gl;\n\n    log(`Shader is hooked.`);\n  }\n\n  private hookedAttachShader(program: any, shader: any) {\n    this.realAttachShader.call(this.gl, program, shader);\n\n    this.shaders++;\n\n    log(`AttachShader:`, shader, `shaders: ${this.shaders}`);\n  }\n\n  private hookedDetachShader(program: any, shader: any) {\n    this.realDetachShader.call(this.gl, program, shader);\n\n    this.shaders--;\n\n    log(`DetachShader. shaders: ${this.shaders}`);\n  }\n\n  public reset() {\n    this.shaders = 0;\n  }\n\n  public release() {\n    if (this.hooked) {\n      this.gl.attachShader = this.realAttachShader;\n      this.gl.detachShader = this.realDetachShader;\n    }\n\n    this.hooked = false;\n  }\n}\n","import { log, errorLog } from \"../log\";\n\n/**\n * @class TextureHook\n */\nexport default class TextureHook {\n  public textures: number = 0;\n  private realCreateTexture: any;\n  private realDeleteTexture: any;\n  private hooked: boolean;\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.realCreateTexture = gl.createTexture;\n    this.realDeleteTexture = gl.deleteTexture;\n\n    gl.createTexture = this.hookedCreateTexture.bind(this);\n    gl.deleteTexture = this.hookedDeleteTexture.bind(this);\n\n    this.hooked = true;\n    this.gl = gl;\n\n    log(`Texture is hooked.`);\n  }\n\n  private hookedCreateTexture() {\n    let texture = this.realCreateTexture.call(this.gl);\n\n    this.textures++;\n\n    log(`CreateTexture:`, texture, `textures: ${this.textures}`);\n\n    return texture;\n  }\n\n  private hookedDeleteTexture(texture: any) {\n    this.realDeleteTexture.call(this.gl, texture);\n\n    this.textures--;\n\n    log(`DeleteTexture. textures: ${this.textures}`);\n  }\n\n  public reset() {\n    this.textures = 0;\n  }\n\n  public release() {\n    if (this.hooked) {\n      this.gl.createTexture = this.realCreateTexture;\n      this.gl.deleteTexture = this.realDeleteTexture;\n    }\n\n    this.hooked = false;\n  }\n}\n","import { Entity } from \"oasis-engine\";\nimport DrawCallHook from \"./hooks/DrawCallHook\";\nimport ShaderHook from \"./hooks/ShaderHook\";\nimport TextureHook from \"./hooks/TextureHook\";\n\ndeclare global {\n  interface Performance {\n    memory: any;\n  }\n}\n\n/**\n * @class Core\n */\nexport default class Core {\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\n  private drawCallHook: DrawCallHook;\n  private textureHook: TextureHook;\n  private shaderHook: ShaderHook;\n  private samplingFrames: number = 60;\n  private samplingIndex: number = 0;\n  private now: number;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.gl = gl;\n    this.hook(gl);\n  }\n\n  private hook(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.drawCallHook = new DrawCallHook(gl);\n    this.textureHook = new TextureHook(gl);\n    this.shaderHook = new ShaderHook(gl);\n  }\n\n  public reset() {\n    this.drawCallHook && this.drawCallHook.reset();\n  }\n\n  public release() {\n    this.drawCallHook && this.drawCallHook.release();\n    this.textureHook && this.textureHook.release();\n    this.shaderHook && this.shaderHook.release();\n  }\n\n  public update() {\n    let now = performance.now();\n    let delta = now - this.now;\n    this.now = now;\n\n    if (this.samplingIndex !== this.samplingFrames) {\n      this.reset();\n      this.samplingIndex++;\n      return;\n    }\n\n    this.samplingIndex = 0;\n\n    let data = {\n      fps: delta ? (1000 / delta) >> 0 : 0,\n      memory: performance.memory && (performance.memory.usedJSHeapSize / 1048576) >> 0,\n      drawCall: this.drawCallHook.drawCall,\n      triangles: this.drawCallHook.triangles,\n      //@ts-ignorets-ignore\n      nodes: Entity._entitys.length,\n      lines: this.drawCallHook.lines,\n      points: this.drawCallHook.points,\n      textures: this.textureHook.textures,\n      shaders: this.shaderHook.shaders,\n      webglContext:\n        window.hasOwnProperty(\"WebGL2RenderingContext\") && this.gl instanceof WebGL2RenderingContext ? \"2.0\" : \"1.0\"\n    };\n\n    this.reset();\n\n    return data;\n  }\n}\n","import Core from \"./Core\";\n\nlet tpl = `\n  <dl>\n    <dt>FPS</dt>\n    <dd>0</dd>\n    <dt>Memory <span class=\"unit\">(MB)</span></dt>\n    <dd>0</dd>\n    <dt>DrawCall</dt>\n    <dd>0</dd>\n    <dt>Triangles</dt>\n    <dd>0</dd>\n    <dt>Nodes</dt>\n    <dd>0</dd>\n    <dt>Textures</dt>\n    <dd>0</dd>\n    <dt>Shaders</dt>\n    <dd>0</dd>\n    <dt>WebGL</dt>\n    <dd></dd>\n  </dl>\n`;\nlet css = `\n  .gl-perf {\n    pointer-events: none;\n    user-select: none;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: ${10 / 7.5}vh ${10 / 7.5}vh 0 ${10 / 7.5}vh;\n    background: rgba(0, 0, 0, 0.3);\n    color: #fff;\n    font: ${10 / 7.5}vh arial;\n  }\n\n  .gl-perf dl,\n  .gl-perf dt,\n  .gl-perf dd {\n    padding: 0;\n    margin: 0;\n  }\n\n  .gl-perf dt {\n    color: #fff;\n    text-shadow: #000 0 0 1px;\n  }\n\n  .gl-perf dt .unit{\n    font-size: ${10 / 7.5}vh;\n  }\n\n  .gl-perf dd {\n    font-size: ${20 / 7.5}vh;\n    padding: ${10 / 7.5}vh 0 ${10 / 7.5}vh;\n  }\n`;\n\nexport default class Monitor {\n  private core: Core;\n  private doms: HTMLElement[];\n  private items: string[];\n  private container: HTMLElement;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.core = new Core(gl);\n    this.items = [];\n    this.items = [\"fps\", \"memory\", \"drawCall\", \"triangles\", \"nodes\", \"textures\", \"shaders\", \"webglContext\"];\n    this.createContainer();\n    this.update = this.update.bind(this);\n  }\n\n  private createContainer() {\n    let container = document.createElement(\"div\");\n    container.classList.add(\"gl-perf\");\n    container.innerHTML = tpl;\n\n    container.appendChild(this.createStyle());\n\n    document.body.appendChild(container);\n\n    this.doms = Array.prototype.slice.apply(container.querySelectorAll(\"dd\"));\n    this.container = container;\n  }\n\n  private createStyle() {\n    let style: HTMLStyleElement = document.createElement(\"style\");\n\n    style.type = \"text/css\";\n\n    style.appendChild(document.createTextNode(css));\n\n    return style;\n  }\n\n  /**\n   * Update per frame\n   */\n  public update() {\n    let data = this.core.update();\n\n    if (data) {\n      for (let i = 0, l = this.items.length; i < l; i++) {\n        let dom = this.doms[i];\n        let item = this.items[i];\n        let value = data[item] || 0;\n\n        // see: http://wilsonpage.co.uk/preventing-layout-thrashing/\n        requestAnimationFrame(() => {\n          dom.innerText = value;\n        });\n      }\n    }\n  }\n\n  /**\n   * reset all hooks\n   */\n  public reset() {\n    this.core.reset();\n  }\n\n  /**\n   * release all hooks\n   */\n  public release() {\n    this.core.release();\n  }\n\n  /**\n   * destory the instance\n   */\n  public destroy() {\n    this.release();\n    document.body.removeChild(this.container);\n  }\n}\n","import { EngineFeature, Engine, Scene } from \"oasis-engine\";\nimport Monitor from \"./Monitor\";\n\n/**\n * Engine Feature：显示 FPS 等引擎状态数据\n */\nexport class Stats extends EngineFeature {\n  private monitor: Monitor;\n  /**\n   * 构造函数\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * tick 前置回调\n   */\n  preTick(engine: Engine, currentScene: Scene): void {\n    if (!this.monitor) {\n      const gl = currentScene.engine._hardwareRenderer.gl;\n      if (gl) {\n        this.monitor = new Monitor(gl);\n      }\n    }\n  }\n\n  /**\n   * tick 后置回调\n   */\n  postTick(engine: Engine, currentScene: Scene): void {\n    if (this.monitor) {\n      this.monitor.update();\n    }\n  }\n}\n","import { Engine } from \"oasis-engine\";\nimport { Stats } from \"./Stats\";\n\nEngine.registerFeature(Stats);\n\nexport { Stats };\n"],"names":["DrawCallHook2","TextureHook2","ShaderHook2","Core2","Monitor2","Stats2"],"mappings":"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"}