import { WebGLRenderer } from "./WebGLRenderer";
import { GLCapabilityType, GLCompressedTextureInternalFormat } from "@oasis-engine/core";
/**
 * GL 能力统一管理
 * */
export declare class GLCapability {
    private _maxDrawBuffers;
    private _maxAnisoLevel;
    private _maxAntiAliasing;
    _rhi: WebGLRenderer;
    capabilityList: Map<GLCapabilityType, boolean>;
    get maxDrawBuffers(): number;
    /**
     * 最大各向异性过滤等级。
     */
    get maxAnisoLevel(): number;
    /**
     * 最大 MSAA 采样数量
     */
    get maxAntiAliasing(): number;
    get rhi(): WebGLRenderer;
    constructor(rhi: WebGLRenderer);
    /**
     * 查询能否使用某些 GL 能力
     * */
    canIUse(capabilityType: GLCapabilityType): boolean;
    /**
     * 查询能否使用某种压缩纹理格式
     * */
    canIUseCompressedTextureInternalFormat(internalType: GLCompressedTextureInternalFormat): boolean;
    /** 是否能使用更多骨骼关节 */
    get canIUseMoreJoints(): boolean;
    /**
     *  初始化能力
     * */
    private init;
    /**
     * 如果有插件能补充该能力，则抹平该差异
     * @example
     * compatible(GLCapabilityType.depthTexture,{
     *    UNSIGNED_INT_24_8: "UNSIGNED_INT_24_8_WEBGL"
     * })
     * 满足条件时， gl.UNSIGNED_INT_24_8 = ext.UNSIGNED_INT_24_8_WEBGL
     * */
    private compatibleInterface;
    /** 抹平接口差异 */
    private compatibleAllInterface;
}
