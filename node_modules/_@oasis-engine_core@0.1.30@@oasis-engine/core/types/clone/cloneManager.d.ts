/**
 * 属性装饰器，克隆时对字段进行忽略。
 */
export declare function ignoreClone(target: Object, propertyKey: string): void;
/**
 * 属性装饰器，克隆时对字段进行赋值克隆。
 * 如果是基本类型则会拷贝值，如果是引用类型则会拷贝其引用地址。
 */
export declare function assignmentClone(target: Object, propertyKey: string): void;
/**
 * 属性装饰器，克隆时对字段进行浅克隆。
 * 克隆后会保持自身引用独立，并使用赋值的方式克隆其内部所有字段（如果内部字段是基本类型则会拷贝值，如果内部字段是引用类型则会拷贝其引用地址）。
 *
 * @remarks
 * 适用于 Obect、Array 和 Class 类型。
 */
export declare function shallowClone(target: Object, propertyKey: string): void;
/**
 * 属性装饰器，克隆时对属性进行深克隆。
 * 克隆后会保持自身引用独立，并且其内部所有深层字段均保持完全独立。
 *
 * @remarks
 * 适用于 Obect、Array 和 Class 类型。
 * 如果在深克隆过程中遇到 Class 则会调用对象的 cloneTo() 实现克隆，需要对象实现 IClone 接口。
 */
export declare function deepClone(target: Object, propertyKey: string): void;
