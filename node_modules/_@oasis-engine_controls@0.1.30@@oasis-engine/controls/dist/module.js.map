{"version":3,"file":"module.js","sources":["../src/FreeControl.ts","../src/OrbitControl.ts"],"sourcesContent":["import { Entity, Logger, MathUtil, Script, Spherical, Vector3 } from \"oasis-engine\";\nimport { doTransform, Easing, Tween } from \"@oasis-engine/tween\";\n\n// 防止万向锁\nconst ESP = MathUtil.zeroTolerance;\n\nfunction includes(array, ...filterArray) {\n  return filterArray.some((e) => array.indexOf(e) !== -1);\n}\n\nconst tween = new Tween();\n\n/**\n * 相机的的漫游控制器，可以上下左右位移，转转视角。\n */\nexport class FreeControl extends Script {\n  _forward = new Vector3();\n  _right = new Vector3();\n  camera: Entity;\n  mainElement: any;\n  domElement: any;\n\n  /** 每秒运动距离，单位为MVP转换前的单位\n   * @member {number}\n   * */\n  movementSpeed: number;\n\n  /** 一个canvas的高宽度旋转Math.PI* this.rotateSpeed\n   * @member {number}\n   * */\n  rotateSpeed: number;\n\n  /** 模拟一个地面用来jump，替代碰撞体\n   * @member {boolean}\n   * */\n  floorMock: boolean;\n\n  /** 模拟地面高度\n   * @member {number}\n   * */\n  floorY: number;\n\n  /**\n   * the heightY jump to\n   * @member {number}\n   * */\n  jumpY: number;\n\n  /**\n   * the amount of the jumping time, jumpUpDuration+jumpDownDuration\n   * unit:ms\n   * @member {number}\n   * */\n  jumpDuration: number;\n\n  /** only rotate when press=true\n   * @member {boolean}\n   * */\n  press: boolean;\n  keysForward: Array<string | number>;\n  keysBackward: Array<string | number>;\n  keysLeft: Array<string | number>;\n  keysRight: Array<string | number>;\n  keysJump: Array<string | number>;\n\n  /**\n   * radian of spherical.theta\n   * @member {number}\n   * */\n  private _theta: number;\n\n  /**\n   * radian of spherical.phi\n   * @member {number}\n   * */\n  private _phi: number;\n\n  private _moveForward: boolean;\n  private _moveBackward: boolean;\n  private _moveLeft: boolean;\n  private _moveRight: boolean;\n  private _moveJump: boolean;\n\n  private _v3Cache: Vector3;\n  private _spherical: Spherical;\n  private _rotateOri: Array<number>;\n  private _events: Array<{ type: string; listener: () => {}; element?: any }>;\n\n  /**\n   * 漫游控制器构造函数\n   * @param {Entity} entity 挂载节点\n   */\n  constructor(entity: Entity) {\n    super(entity);\n    this.camera = entity;\n    //@ts-ignore @todo 未来移除对html元素的依赖，通过封装引擎的input实现\n    this.mainElement = this.scene.engine.canvas._webCanvas;\n    this.domElement = document;\n\n    this.movementSpeed = 1.0;\n    this.rotateSpeed = 1.0;\n\n    this.floorMock = true;\n    this.floorY = 0;\n\n    this.jumpY = 1;\n    this.jumpDuration = 600;\n\n    this.press = false;\n\n    this.keysForward = [\"KeyW\", \"ArrowUp\"];\n    this.keysBackward = [\"KeyS\", \"ArrowDown\"];\n    this.keysLeft = [\"KeyA\", \"ArrowLeft\"];\n    this.keysRight = [\"KeyD\", \"ArrowRight\"];\n    this.keysJump = [\"Space\"];\n\n    this._theta = 0;\n    this._phi = 0;\n\n    // private variables\n    this._moveForward = false;\n    this._moveBackward = false;\n    this._moveLeft = false;\n    this._moveRight = false;\n    this._moveJump = false;\n\n    this._v3Cache = new Vector3();\n    this._spherical = new Spherical();\n    this._rotateOri = [0, 0];\n\n    this._events = [\n      { type: \"mousemove\", listener: this.onMouseMove.bind(this) },\n      { type: \"touchmove\", listener: this.onMouseMove.bind(this) },\n      { type: \"mousedown\", listener: this.onMouseDown.bind(this) },\n      { type: \"touchstart\", listener: this.onMouseDown.bind(this) },\n      { type: \"mouseup\", listener: this.onMouseUp.bind(this) },\n      { type: \"touchend\", listener: this.onMouseUp.bind(this) },\n      { type: \"keydown\", listener: this.onKeyDown.bind(this), element: window },\n      { type: \"keyup\", listener: this.onKeyUp.bind(this), element: window },\n      { type: \"contextmenu\", listener: this.onContextMenu.bind(this) }\n    ];\n\n    this.initEvents();\n\n    // init spherical\n    this.updateSpherical();\n  }\n\n  /**\n   * 浏览器右键事件\n   * @private\n   * */\n  onContextMenu(event): void {\n    event.preventDefault();\n  }\n\n  /**\n   * 键盘按下事件\n   * @private\n   * */\n  onKeyDown(event): void {\n    const { code, key, keyCode } = event;\n    if (includes(this.keysForward, code, key, keyCode)) {\n      this._moveForward = true;\n    } else if (includes(this.keysBackward, code, key, keyCode)) {\n      this._moveBackward = true;\n    } else if (includes(this.keysLeft, code, key, keyCode)) {\n      this._moveLeft = true;\n    } else if (includes(this.keysRight, code, key, keyCode)) {\n      this._moveRight = true;\n    } else if (includes(this.keysJump, code, key, keyCode)) {\n      this.jump();\n    }\n  }\n\n  /**\n   * 键盘抬起事件\n   * @private\n   * */\n  onKeyUp(event): void {\n    const { code, key, keyCode } = event;\n    if (includes(this.keysForward, code, key, keyCode)) {\n      this._moveForward = false;\n    } else if (includes(this.keysBackward, code, key, keyCode)) {\n      this._moveBackward = false;\n    } else if (includes(this.keysLeft, code, key, keyCode)) {\n      this._moveLeft = false;\n    } else if (includes(this.keysRight, code, key, keyCode)) {\n      this._moveRight = false;\n    }\n  }\n\n  /**\n   * 手势按下事件\n   * @private\n   * */\n  onMouseDown(event): void {\n    event.stopPropagation();\n    event = (event.changedTouches && event.changedTouches[0]) || event;\n\n    if (this.domElement !== document) {\n      this.domElement.focus();\n    }\n\n    this.press = true;\n    this._rotateOri = [event.clientX, event.clientY];\n  }\n\n  /**\n   * 手势抬起事件\n   * @private\n   * */\n  onMouseUp(event): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.press = false;\n  }\n\n  /**\n   * 手势滑动事件\n   * @private\n   * */\n  onMouseMove(event): void {\n    if (this.press === false) return;\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n    event = (event.changedTouches && event.changedTouches[0]) || event;\n\n    const movementX = event.clientX - this._rotateOri[0];\n    const movementY = event.clientY - this._rotateOri[1];\n    this._rotateOri[0] = event.clientX;\n    this._rotateOri[1] = event.clientY;\n    const factorX = 180 / this.mainElement.width;\n    const factorY = 180 / this.mainElement.height;\n    const actualX = movementX * factorX;\n    const actualY = movementY * factorY;\n\n    this.rotate(-actualX, actualY);\n  }\n\n  /**\n   * 分别绕y轴，x轴旋转的角度\n   * unit:deg\n   * @param {number} alpha - 绕y轴旋转的deg\n   * @param {number} beta - 绕x轴旋转的deg\n   * */\n  rotate(alpha: number = 0, beta: number = 0): void {\n    this._theta += MathUtil.degreeToRadian(alpha);\n    this._phi += MathUtil.degreeToRadian(beta);\n    this._phi = MathUtil.clamp(this._phi, ESP, Math.PI - ESP);\n    this._spherical.theta = this._theta;\n    this._spherical.phi = this._phi;\n    this._spherical.setToVec3(this._v3Cache);\n    Vector3.add(this.camera.position, this._v3Cache, this._v3Cache);\n    this.camera.transform.lookAt(this._v3Cache, new Vector3(0, 1, 0));\n  }\n\n  /**\n   * 跳跃，根据jumpY确定高度，jumpDuration确定时间，floorY确定地面高度\n   * */\n  jump(): void {\n    if (this._moveJump) return;\n\n    this._moveJump = true;\n\n    let p = this.camera.position;\n\n    doTransform\n      .Translate(this.camera, new Vector3(p.x, this.jumpY, p.z), this.jumpDuration / 2, {\n        easing: Easing.easeOutSine,\n        onComplete: () => {\n          doTransform\n            .Translate(this.camera, new Vector3(p.x, this.floorY, p.z), this.jumpDuration / 2, {\n              easing: Easing.easeInSine,\n              onComplete: () => {\n                this._moveJump = false;\n              }\n            })\n            .start(tween);\n        }\n      })\n      .start(tween);\n  }\n\n  /**\n   * transform vec3 on axis by distance\n   * */\n  translateOnAxis(axis: Readonly<Vector3>, distance: number, v3: Readonly<Vector3> = this.camera.position): void {\n    const diff: Vector3 = new Vector3();\n    Vector3.normalize(axis, diff);\n    v3.add(diff.scale(distance));\n  }\n\n  private tempVec3 = new Vector3();\n\n  /**\n   * @override\n   * translate camera per tick\n   * @param  delta - tick gap\n   * */\n  onUpdate(delta: number): void {\n    if (this.enabled === false) return;\n\n    const actualMoveSpeed = (delta / 1000) * this.movementSpeed;\n    this.camera.transform.getWorldForward(this._forward);\n    this.camera.transform.getWorldRight(this._right);\n    if (this._moveForward) {\n      this.translateOnAxis(this._forward, actualMoveSpeed);\n    }\n    if (this._moveBackward) {\n      this.translateOnAxis(this._forward, -actualMoveSpeed);\n    }\n    if (this._moveLeft) {\n      this.translateOnAxis(this._right, -actualMoveSpeed);\n    }\n    if (this._moveRight) {\n      this.translateOnAxis(this._right, actualMoveSpeed);\n    }\n\n    tween.update(delta);\n    const position = this.camera.transform.position;\n\n    if (this.floorMock && !this._moveJump) {\n      // this.camera.position[1] = this.floorY;\n\n      // const pos = this.camera.transform.position;\n      position.setValue(position.x, this.floorY, position.z);\n      this.camera.transform.position = position;\n    }\n  }\n\n  /**注册浏览器事件*/\n  initEvents(): void {\n    this._events.forEach((ele) => {\n      if (ele.element) {\n        ele.element.addEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.addEventListener(ele.type, ele.listener, false);\n      }\n    });\n  }\n\n  /**\n   * dispose all events\n   * */\n  destroy(): void {\n    this._events.forEach((ele) => {\n      if (ele.element) {\n        ele.element.removeEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.removeEventListener(ele.type, ele.listener, false);\n      }\n    });\n    super.destroy();\n  }\n\n  /**\n   * must updateSpherical after quaternion has been changed\n   * @example\n   * Entity#lookAt([0,1,0],[0,1,0]);\n   * AFreeControls#updateSpherical();\n   * */\n  updateSpherical(): void {\n    this._v3Cache.setValue(0, 0, -1);\n    Vector3.transformByQuat(this._v3Cache, this.camera.rotation, this._v3Cache);\n    this._spherical.setFromVec3(this._v3Cache);\n    this._theta = this._spherical.theta;\n    this._phi = this._spherical.phi;\n  }\n}\n","\"use strict\";\nimport { Entity, Logger, Matrix, Script, Spherical, Vector2, Vector3 } from \"oasis-engine\";\n\n/**\n * 相机的的轨道控制器，可以旋转，缩放，平移，支持鼠标和触摸事件。\n */\nexport class OrbitControl extends Script {\n  public camera: Entity;\n  public domElement: HTMLElement | Document;\n  public mainElement: HTMLCanvasElement;\n  public fov: number;\n  public target: Vector3;\n  public up: Vector3;\n  public minDistance: number;\n  public maxDistance: number;\n  public minZoom: number;\n  public maxZoom: number;\n  public enableDamping: boolean;\n  public zoomFactor: number;\n  public enableRotate: boolean;\n  public keyPanSpeed: number;\n  public minPolarAngle: number;\n  public maxPolarAngle: number;\n  public minAzimuthAngle: number;\n  public maxAzimuthAngle: number;\n  public enableZoom: boolean;\n  public dampingFactor: number;\n  public zoomSpeed: number;\n  public enablePan: boolean;\n  public autoRotate: boolean;\n  public autoRotateSpeed: number;\n  public rotateSpeed: number;\n  public enableKeys: boolean;\n  public keys: { LEFT: number; RIGHT: number; UP: number; BOTTOM: number };\n  public mouseButtons: { ORBIT: number; ZOOM: number; PAN: number };\n  public touchFingers: { ORBIT: number; ZOOM: number; PAN: number };\n  private _position: Vector3;\n  private _offset: Vector3;\n  private _spherical: Spherical;\n  private _sphericalDelta: Spherical;\n  private _sphericalDump: Spherical;\n  private _zoomFrag: number;\n  private _scale: number;\n  private _panOffset: Vector3;\n  private _isMouseUp: boolean;\n  private _vPan: Vector3;\n  public constEvents: { listener: any; type: string; element?: Window }[];\n  private _state: any;\n  private _rotateStart: Vector2;\n  private _rotateEnd: Vector2;\n  private _rotateDelta: Vector2;\n  private _panStart: Vector2;\n  private _panEnd: Vector2;\n  private _panDelta: Vector2;\n  private _zoomStart: Vector2;\n  private _zoomEnd: Vector2;\n  private _zoomDelta: Vector2;\n  public STATE: {\n    TOUCH_ROTATE: number;\n    ROTATE: number;\n    TOUCH_PAN: number;\n    ZOOM: number;\n    NONE: number;\n    PAN: number;\n    TOUCH_ZOOM: number;\n  };\n  public mouseUpEvents: { listener: any; type: string }[];\n\n  /**\n   * 轨道控制器构造函数\n   * @param {Entity} entity 挂载节点\n   */\n  constructor(entity: Entity) {\n    super(entity);\n\n    this.camera = entity;\n    //@ts-ignore @todo 未来移除对html元素的依赖，通过封装引擎的input实现\n    this.mainElement = this.engine.canvas._webCanvas;\n    this.domElement = document;\n    this.fov = 45;\n\n    // 目标点\n    this.target = new Vector3();\n\n    // up向量\n    this.up = new Vector3(0, 1, 0);\n\n    // 最大最小距离\n    /**\n     * 最小距离，默认为0.1，应大于0\n     * @member {Number}\n     */\n    this.minDistance = 0.1;\n    /**\n     * 最大距离，默认为无穷，应大于最小距离\n     * @member {Number}\n     */\n    this.maxDistance = Infinity;\n\n    // 最大最小缩放速度\n    /**\n     * 最小缩放速度，默认为0.0\n     * @member {Number}\n     */\n    this.minZoom = 0.0;\n    /**\n     * 最大缩放速度，默认为正无穷\n     * @member {Number}\n     */\n    this.maxZoom = Infinity;\n\n    // 垂直方向旋转范围\n    /**\n     * 垂直方向最小弧度，默认为0弧度，取值范围 0 － Math.PI\n     * @member {Number}\n     */\n    this.minPolarAngle = 0;\n    /**\n     * 垂直方向最大弧度，默认为Math.PI，取值范围 0 － Math.PI\n     * @member {Number}\n     */\n    this.maxPolarAngle = Math.PI;\n\n    // 水平方向旋转范围\n    /**\n     * 垂直方向最小弧度，默认为负无穷\n     * @member {Number}\n     */\n    this.minAzimuthAngle = -Infinity;\n    /**\n     * 垂直方向最小弧度，默认为正无穷\n     * @member {Number}\n     */\n    this.maxAzimuthAngle = Infinity;\n\n    // 缓冲参数\n    /**\n     * 是否开启镜头缓冲，默认为 true\n     * @member {Boolean}\n     */\n    this.enableDamping = true;\n    /**\n     * 旋转缓冲参数，默认为 0.1\n     * @member {Number}\n     */\n    this.dampingFactor = 0.1;\n    /**\n     * 缩放缓冲参数，默认为0.2\n     * @member {Number}\n     */\n    this.zoomFactor = 0.2;\n\n    // 缩放控制\n    /**\n     * 是否启用缩放，默认为true\n     * @member {Boolean}\n     */\n    this.enableZoom = true;\n    /**\n     * 镜头缩放速度，默认为1.0\n     * @member {Number}\n     */\n    this.zoomSpeed = 1.0;\n\n    // 旋转控制\n    /**\n     * 是否开启旋转，默认为true\n     * @member {Boolean}\n     */\n    this.enableRotate = true;\n    /**\n     * 旋转速度，默认为1.0\n     * @member {Number}\n     */\n    this.rotateSpeed = 1.0;\n\n    // 平移控制\n    /**\n     * 是否开启平移，默认为true\n     * @member {Number}\n     */\n    this.enablePan = true;\n    /**\n     * 键盘平移速度，默认为7.0\n     * @member {Number}\n     */\n    this.keyPanSpeed = 7.0;\n\n    // 自动旋转\n    /**\n     * 是否自动旋转镜头，默认为false\n     * @member {Boolean}\n     */\n    this.autoRotate = false;\n    /**\n     * 自动旋转一圈所需的时间，默认为2.0s\n     * @member {Number}\n     */\n    this.autoRotateSpeed = 2.0; // 旋转 2PI 所用的时间 s\n\n    // 键盘平移\n    /**\n     * 是否启用键盘平移，默认为false\n     * @member {Boolean}\n     */\n    this.enableKeys = false;\n    this.keys = {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    };\n\n    // 控制键位\n    this.mouseButtons = {\n      ORBIT: 0,\n      ZOOM: 1,\n      PAN: 2\n    };\n    this.touchFingers = {\n      ORBIT: 1,\n      ZOOM: 2,\n      PAN: 3\n    };\n\n    // 复用对象 防止栈分配过多\n    // update\n    this._position = new Vector3();\n    this._offset = new Vector3();\n    this._spherical = new Spherical();\n    this._sphericalDelta = new Spherical();\n    this._sphericalDump = new Spherical();\n    this._zoomFrag = 0;\n    this._scale = 1;\n    this._panOffset = new Vector3();\n    this._isMouseUp = true;\n\n    // pan\n    this._vPan = new Vector3();\n\n    // state\n    this._rotateStart = new Vector2();\n    this._rotateEnd = new Vector2();\n    this._rotateDelta = new Vector2();\n\n    this._panStart = new Vector2();\n    this._panEnd = new Vector2();\n    this._panDelta = new Vector2();\n\n    this._zoomStart = new Vector2();\n    this._zoomEnd = new Vector2();\n    this._zoomDelta = new Vector2();\n\n    this.STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      ZOOM: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_ZOOM: 4,\n      TOUCH_PAN: 5\n    };\n    this._state = this.STATE.NONE;\n\n    this.constEvents = [\n      { type: \"mousedown\", listener: this.onMouseDown.bind(this) },\n      { type: \"wheel\", listener: this.onMouseWheel.bind(this) },\n      { type: \"keydown\", listener: this.onKeyDown.bind(this), element: window },\n      { type: \"touchstart\", listener: this.onTouchStart.bind(this) },\n      { type: \"touchmove\", listener: this.onTouchMove.bind(this) },\n      { type: \"touchend\", listener: this.onTouchEnd.bind(this) },\n      { type: \"contextmenu\", listener: this.onContextMenu.bind(this) }\n    ];\n\n    this.mouseUpEvents = [\n      { type: \"mousemove\", listener: this.onMouseMove.bind(this) },\n      { type: \"mouseup\", listener: this.onMouseUp.bind(this) }\n    ];\n\n    this.constEvents.forEach((ele) => {\n      if (ele.element) {\n        ele.element.addEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.addEventListener(ele.type, ele.listener, false);\n      }\n    });\n\n    this.addEventListener(\"disabled\", () => {\n      const element = this.domElement === document ? this.domElement.body : this.domElement;\n      this.mainElement.removeEventListener(this.mouseUpEvents[0].type, this.mouseUpEvents[0].listener, false);\n      element.removeEventListener(this.mouseUpEvents[1].type, this.mouseUpEvents[1].listener, false);\n    });\n  }\n\n  /**\n   * 销毁，释放事件监听\n   * @private\n   */\n  destroy() {\n    this.constEvents.forEach((ele) => {\n      if (ele.element) {\n        ele.element.removeEventListener(ele.type, ele.listener, false);\n      } else {\n        this.mainElement.removeEventListener(ele.type, ele.listener, false);\n      }\n    });\n    const element = this.domElement === document ? this.domElement.body : this.domElement;\n    this.mainElement.removeEventListener(this.mouseUpEvents[0].type, this.mouseUpEvents[0].listener, false);\n    element.removeEventListener(this.mouseUpEvents[1].type, this.mouseUpEvents[1].listener, false);\n    super.destroy();\n  }\n\n  /**\n   * 在触屏上用单指控制旋转，三指控制平移\n   */\n  setOneFingerRotate() {\n    this.touchFingers.ORBIT = 1;\n    this.touchFingers.ZOOM = 2;\n    this.touchFingers.PAN = 3;\n  }\n\n  /**\n   * 在触屏上用单指控制平移，三指控制旋转\n   */\n  setOneFingerPan() {\n    this.touchFingers.ORBIT = 3;\n    this.touchFingers.ZOOM = 2;\n    this.touchFingers.PAN = 1;\n  }\n\n  /**\n   * 每帧更新\n   * @private\n   * @param {Number} dtime 和上次绘制的事件间隔 ms\n   */\n  onUpdate(dtime) {\n    if (!this.enabled) return;\n\n    super.onUpdate(dtime);\n\n    const position: Vector3 = this.camera.position;\n    position.cloneTo(this._offset);\n    this._offset.subtract(this.target);\n    this._spherical.setFromVec3(this._offset);\n\n    if (this.autoRotate && this._state === this.STATE.NONE) {\n      this.rotateLeft(this.getAutoRotationAngle(dtime));\n    }\n\n    this._spherical.theta += this._sphericalDelta.theta;\n    this._spherical.phi += this._sphericalDelta.phi;\n\n    this._spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this._spherical.theta));\n    this._spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this._spherical.phi));\n    this._spherical.makeSafe();\n\n    if (this._scale !== 1) {\n      this._zoomFrag = this._spherical.radius * (this._scale - 1);\n    }\n\n    this._spherical.radius += this._zoomFrag;\n    this._spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this._spherical.radius));\n\n    this.target.add(this._panOffset);\n    this._spherical.setToVec3(this._offset);\n    this.target.cloneTo(this._position);\n    this._position.add(this._offset);\n    this.camera.position = this._position;\n    this.camera.transform.lookAt(this.target, this.up);\n\n    if (this.enableDamping === true) {\n      this._sphericalDump.theta *= 1 - this.dampingFactor;\n      this._sphericalDump.phi *= 1 - this.dampingFactor;\n      this._zoomFrag *= 1 - this.zoomFactor;\n\n      if (this._isMouseUp) {\n        this._sphericalDelta.theta = this._sphericalDump.theta;\n        this._sphericalDelta.phi = this._sphericalDump.phi;\n      } else {\n        this._sphericalDelta.set(0, 0, 0);\n      }\n    } else {\n      this._sphericalDelta.set(0, 0, 0);\n      this._zoomFrag = 0;\n    }\n\n    this._scale = 1;\n    this._panOffset.setValue(0, 0, 0);\n  }\n\n  /**\n   * 获取自动旋转的弧度\n   * @private\n   */\n  getAutoRotationAngle(dtime) {\n    return ((2 * Math.PI) / this.autoRotateSpeed / 1000) * dtime;\n  }\n\n  /**\n   * 获取缩放值\n   * @private\n   */\n  getZoomScale() {\n    return Math.pow(0.95, this.zoomSpeed);\n  }\n\n  /**\n   * 向左旋转一定弧度\n   * @property {Number} radian 旋转的弧度值\n   */\n  rotateLeft(radian) {\n    this._sphericalDelta.theta -= radian;\n    if (this.enableDamping) {\n      this._sphericalDump.theta = -radian;\n    }\n  }\n\n  /**\n   * 向上旋转一定弧度\n   * @property {Number} radian 旋转的弧度值\n   */\n  rotateUp(radian) {\n    this._sphericalDelta.phi -= radian;\n    if (this.enableDamping) {\n      this._sphericalDump.phi = -radian;\n    }\n  }\n\n  /**\n   * 向左平移\n   * @private\n   */\n  panLeft(distance: number, worldMatrix: Matrix) {\n    const e = worldMatrix.elements;\n    this._vPan.setValue(e[0], e[1], e[2]);\n    this._vPan.scale(distance);\n    this._panOffset.add(this._vPan);\n  }\n\n  /**\n   * 向右平移\n   * @private\n   */\n  panUp(distance: number, worldMatrix: Matrix) {\n    const e = worldMatrix.elements;\n    this._vPan.setValue(e[4], e[5], e[6]);\n    this._vPan.scale(distance);\n    this._panOffset.add(this._vPan);\n  }\n\n  /**\n   * 平移\n   * @property {Number} deltaX x方向的平移量，屏幕距离\n   * @property {Number} deltaY y方向的平移量，屏幕距离\n   */\n  pan(deltaX, deltaY) {\n    const element = this.domElement === document ? this.domElement.body : (this.domElement as HTMLElement);\n\n    // perspective only\n    const position: Vector3 = this.camera.position;\n    position.cloneTo(this._vPan);\n    this._vPan.subtract(this.target);\n    let targetDistance = this._vPan.length();\n\n    targetDistance *= (this.fov / 2) * (Math.PI / 180);\n\n    this.panLeft(-2 * deltaX * (targetDistance / element.clientHeight), this.camera.transform.worldMatrix);\n    this.panUp(2 * deltaY * (targetDistance / element.clientHeight), this.camera.transform.worldMatrix);\n  }\n\n  /**\n   * 放大\n   * @private\n   */\n  zoomIn(zoomScale) {\n    // perspective only\n    this._scale *= zoomScale;\n  }\n\n  /**\n   * 缩小\n   * @private\n   */\n  zoomOut(zoomScale) {\n    // perspective only\n    this._scale /= zoomScale;\n  }\n\n  /**\n   * 鼠标点击时旋转参数更新\n   * @private\n   */\n  handleMouseDownRotate(event) {\n    this._rotateStart.setValue(event.clientX, event.clientY);\n  }\n\n  /**\n   * 鼠标点击时缩放参数更新\n   * @private\n   */\n  handleMouseDownZoom(event) {\n    this._zoomStart.setValue(event.clientX, event.clientY);\n  }\n\n  /**\n   * 鼠标点击时平移参数更新\n   * @private\n   */\n  handleMouseDownPan(event) {\n    this._panStart.setValue(event.clientX, event.clientY);\n  }\n\n  /**\n   * 鼠标移动时旋转参数更新\n   * @private\n   */\n  handleMouseMoveRotate(event) {\n    this._rotateEnd.setValue(event.clientX, event.clientY);\n    Vector2.subtract(this._rotateEnd, this._rotateStart, this._rotateDelta);\n\n    const element = this.domElement === document ? document.body : (this.domElement as HTMLElement);\n\n    this.rotateLeft(2 * Math.PI * (this._rotateDelta.x / element.clientWidth) * this.rotateSpeed);\n    this.rotateUp(2 * Math.PI * (this._rotateDelta.y / element.clientHeight) * this.rotateSpeed);\n\n    this._rotateEnd.cloneTo(this._rotateStart);\n  }\n\n  /**\n   * 鼠标移动时缩放参数更新\n   * @private\n   */\n  handleMouseMoveZoom(event) {\n    this._zoomEnd.setValue(event.clientX, event.clientY);\n    Vector2.subtract(this._zoomEnd, this._zoomStart, this._zoomDelta);\n\n    if (this._zoomDelta.y > 0) {\n      this.zoomOut(this.getZoomScale());\n    } else if (this._zoomDelta.y < 0) {\n      this.zoomIn(this.getZoomScale());\n    }\n\n    this._zoomEnd.cloneTo(this._zoomStart);\n  }\n\n  /**\n   * 鼠标移动时平移参数更新\n   * @private\n   */\n  handleMouseMovePan(event: MouseEvent): void {\n    this._panEnd.setValue(event.clientX, event.clientY);\n    Vector2.subtract(this._panEnd, this._panStart, this._panDelta);\n\n    this.pan(this._panDelta.x, this._panDelta.y);\n\n    this._panEnd.cloneTo(this._panStart);\n  }\n\n  /**\n   * 鼠标滚轮滚动时缩放参数更新\n   * @private\n   */\n  handleMouseWheel(event: MouseWheelEvent): void {\n    if (event.deltaY < 0) {\n      this.zoomIn(this.getZoomScale());\n    } else if (event.deltaY > 0) {\n      this.zoomOut(this.getZoomScale());\n    }\n  }\n\n  /**\n   * 键盘按下时平移参数更新\n   * @private\n   */\n  handleKeyDown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case this.keys.UP:\n        this.pan(0, this.keyPanSpeed);\n        break;\n      case this.keys.BOTTOM:\n        this.pan(0, -this.keyPanSpeed);\n        break;\n      case this.keys.LEFT:\n        this.pan(this.keyPanSpeed, 0);\n        break;\n      case this.keys.RIGHT:\n        this.pan(-this.keyPanSpeed, 0);\n        break;\n    }\n  }\n\n  /**\n   * 触摸落下时旋转参数更新\n   * @private\n   */\n  handleTouchStartRotate(event: TouchEvent) {\n    this._rotateStart.setValue(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  /**\n   * 触摸落下时缩放参数更新\n   * @private\n   */\n  handleTouchStartZoom(event: TouchEvent) {\n    const dx = event.touches[0].pageX - event.touches[1].pageX;\n    const dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    this._zoomStart.setValue(0, distance);\n  }\n\n  /**\n   * 触摸落下时平移参数更新\n   * @private\n   */\n  handleTouchStartPan(event: TouchEvent) {\n    this._panStart.setValue(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  /**\n   * 触摸移动时旋转参数更新\n   * @private\n   */\n  handleTouchMoveRotate(event: TouchEvent) {\n    this._rotateEnd.setValue(event.touches[0].pageX, event.touches[0].pageY);\n    Vector2.subtract(this._rotateEnd, this._rotateStart, this._rotateDelta);\n\n    const element = this.domElement === document ? this.domElement.body : (this.domElement as HTMLElement);\n\n    this.rotateLeft(((2 * Math.PI * this._rotateDelta.x) / element.clientWidth) * this.rotateSpeed);\n    this.rotateUp(((2 * Math.PI * this._rotateDelta.y) / element.clientHeight) * this.rotateSpeed);\n\n    this._rotateEnd.cloneTo(this._rotateStart);\n  }\n\n  /**\n   * 触摸移动时缩放参数更新\n   * @private\n   */\n  handleTouchMoveZoom(event) {\n    const dx = event.touches[0].pageX - event.touches[1].pageX;\n    const dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    this._zoomEnd.setValue(0, distance);\n\n    Vector2.subtract(this._zoomEnd, this._zoomStart, this._zoomDelta);\n\n    if (this._zoomDelta.y > 0) {\n      this.zoomIn(this.getZoomScale());\n    } else if (this._zoomDelta.y < 0) {\n      this.zoomOut(this.getZoomScale());\n    }\n\n    this._zoomEnd.cloneTo(this._zoomStart);\n  }\n\n  /**\n   * 触摸移动时平移参数更新\n   * @private\n   */\n  handleTouchMovePan(event: TouchEvent) {\n    this._panEnd.setValue(event.touches[0].pageX, event.touches[0].pageY);\n\n    Vector2.subtract(this._panEnd, this._panStart, this._panDelta);\n\n    this.pan(this._panDelta.x, this._panDelta.y);\n\n    this._panEnd.cloneTo(this._panStart);\n  }\n\n  /**\n   * 鼠标按下事件总处理\n   * @private\n   */\n  onMouseDown(event: MouseEvent) {\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n\n    this._isMouseUp = false;\n\n    switch (event.button) {\n      case this.mouseButtons.ORBIT:\n        if (this.enableRotate === false) return;\n\n        this.handleMouseDownRotate(event);\n        this._state = this.STATE.ROTATE;\n        break;\n\n      case this.mouseButtons.ZOOM:\n        if (this.enableZoom === false) return;\n\n        this.handleMouseDownZoom(event);\n        this._state = this.STATE.ZOOM;\n        break;\n\n      case this.mouseButtons.PAN:\n        if (this.enablePan === false) return;\n\n        this.handleMouseDownPan(event);\n        this._state = this.STATE.PAN;\n        break;\n    }\n\n    if (this._state !== this.STATE.NONE) {\n      const element = this.domElement === document ? this.domElement.body : this.domElement;\n      this.mainElement.addEventListener(this.mouseUpEvents[0].type, this.mouseUpEvents[0].listener, false);\n      element.addEventListener(this.mouseUpEvents[1].type, this.mouseUpEvents[1].listener, false);\n    }\n  }\n\n  /**\n   * 鼠标移动事件总处理\n   * @private\n   */\n  onMouseMove(event: MouseEvent) {\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (this._state) {\n      case this.STATE.ROTATE:\n        if (this.enableRotate === false) return;\n\n        this.handleMouseMoveRotate(event);\n        break;\n\n      case this.STATE.ZOOM:\n        if (this.enableZoom === false) return;\n\n        this.handleMouseMoveZoom(event);\n        break;\n\n      case this.STATE.PAN:\n        if (this.enablePan === false) return;\n\n        this.handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  /**\n   * 鼠标抬起事件总处理\n   * @private\n   */\n  onMouseUp() {\n    if (this.enabled === false) return;\n\n    this._isMouseUp = true;\n\n    this.mouseUpEvents.forEach((ele) => {\n      const element = this.domElement === document ? this.domElement.body : this.domElement;\n      element.removeEventListener(ele.type, ele.listener, false);\n      this.mainElement.removeEventListener(ele.type, ele.listener, false);\n    });\n\n    this._state = this.STATE.NONE;\n  }\n\n  /**\n   * 鼠标滚轮滚动事件处理\n   * @private\n   */\n  onMouseWheel(event: MouseWheelEvent) {\n    if (\n      this.enabled === false ||\n      this.enableZoom === false ||\n      (this._state !== this.STATE.NONE && this._state !== this.STATE.ROTATE)\n    )\n      return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.handleMouseWheel(event);\n  }\n\n  /**\n   * 键盘按下事件总处理\n   * @private\n   */\n  onKeyDown(event: KeyboardEvent) {\n    if (this.enabled === false || this.enableKeys === false || this.enablePan === false) return;\n\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * 触摸按下事件总处理\n   * @private\n   */\n  onTouchStart(event: TouchEvent) {\n    if (this.enabled === false) return;\n\n    this._isMouseUp = false;\n\n    switch (event.touches.length) {\n      case this.touchFingers.ORBIT:\n        if (this.enableRotate === false) return;\n\n        this.handleTouchStartRotate(event);\n        this._state = this.STATE.TOUCH_ROTATE;\n\n        break;\n\n      case this.touchFingers.ZOOM:\n        if (this.enableZoom === false) return;\n\n        this.handleTouchStartZoom(event);\n        this._state = this.STATE.TOUCH_ZOOM;\n\n        break;\n\n      case this.touchFingers.PAN:\n        if (this.enablePan === false) return;\n\n        this.handleTouchStartPan(event);\n        this._state = this.STATE.TOUCH_PAN;\n\n        break;\n\n      default:\n        this._state = this.STATE.NONE;\n    }\n  }\n\n  /**\n   * 触摸移动事件总处理\n   * @private\n   */\n  onTouchMove(event: TouchEvent) {\n    if (this.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case this.touchFingers.ORBIT:\n        if (this.enableRotate === false) return;\n        if (this._state !== this.STATE.TOUCH_ROTATE) return;\n        this.handleTouchMoveRotate(event);\n\n        break;\n\n      case this.touchFingers.ZOOM:\n        if (this.enableZoom === false) return;\n        if (this._state !== this.STATE.TOUCH_ZOOM) return;\n        this.handleTouchMoveZoom(event);\n\n        break;\n\n      case this.touchFingers.PAN:\n        if (this.enablePan === false) return;\n        if (this._state !== this.STATE.TOUCH_PAN) return;\n        this.handleTouchMovePan(event);\n\n        break;\n\n      default:\n        this._state = this.STATE.NONE;\n    }\n  }\n\n  /**\n   * 触摸抬起事件总处理\n   * @private\n   */\n  onTouchEnd() {\n    if (this.enabled === false) return;\n\n    this._isMouseUp = true;\n    this._state = this.STATE.NONE;\n  }\n\n  /**\n   * 上下文事件隐藏\n   * @private\n   */\n  onContextMenu(event) {\n    if (this.enabled === false) return;\n    event.preventDefault();\n  }\n}\n"],"names":[],"mappings":"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"}