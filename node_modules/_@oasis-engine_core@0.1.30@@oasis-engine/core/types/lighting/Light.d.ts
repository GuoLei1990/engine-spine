import { Matrix } from "@oasis-engine/math";
import { Component } from "../Component";
import { Entity } from "../Entity";
/**
 * 灯光基类
 */
export declare abstract class Light extends Component {
    protected _viewMat: Matrix;
    protected _modelMat: Matrix;
    /**
     * 将灯光参数绑定到指定的材质对象上
     * @param {Material} mtl 材质对象
     * @param {string} uniformName 材质对象
     * @private
     */
    abstract bindMaterialValues(mtl: any, uniformName: string): any;
    /**
     * 生成 Technique 所需的 uniform 定义
     * @example
     * const name = `u_pointLights[0]`;
     * const lgtUniforms = APointLight.getUniformDefine(name)
     * @param {string} uniformName
     */
    static getUniformDefine(uniformName: string): {};
    /**
     * @param {Entity} entity 节点对象
     */
    constructor(entity: Entity);
    /** 在对象Enable的时候，挂载到当前的Scene
     * @private
     */
    _onEnable(): void;
    /** 在对象Disable的时候，从当前的Scene移除
     * @private
     */
    _onDisable(): void;
    /**
     * View 矩阵
     * @member {Matrix}
     * @readonly
     */
    get viewMatrix(): Matrix;
    /**
     * View 矩阵的逆矩阵
     * @member {Matrix}
     * @readonly
     */
    get inverseViewMatrix(): Matrix;
}
