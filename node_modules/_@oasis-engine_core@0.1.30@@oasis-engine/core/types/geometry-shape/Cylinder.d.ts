import { FrontFace } from "../base/Constant";
import { GeometryShape } from "./GeometryShape";
import { Engine } from "../Engine";
/**
 * SphereGeometry 球体创建类
 * @extends BufferGeometry
 */
export declare class CylinderGeometry extends GeometryShape {
    FrontFace: any;
    index: any;
    indexArray: any;
    halfHeight: any;
    private _parameters;
    private _vertices;
    private _indices;
    /**
     * @constructor
     * @param {number} radiusTop 顶部圆柱的半径。 默认值为1。
     * @param {number} radiusBottom 底部圆柱的半径。 默认值为1。
     * @param {number} 高度 圆柱的高度。 默认值为1。
     * @param {number} radialSegments 圆柱体圆周周围的分割面数。 默认值为8
     * @param {number} heightSegments 沿圆柱高度的面的行数。 默认值为1。
     * @param {boolean} openEnded 一个布尔值，指示圆柱的末端是打开还是加盖。 默认值为false，表示上限。
     * @param {number} thetaStart 第一段的起始角度，默认= 0（三点钟位置）。
     * @param {number} thetaLength 圆形扇区的中心角，通常称为theta。 默认值为2 * Pi，这样可以获得完整的柱面。
     */
    constructor(radiusTop?: number, radiusBottom?: number, height?: number, radialSegments?: number, heightSegments?: number, openEnded?: boolean, thetaStart?: number, thetaLength?: number, frontFace?: FrontFace, engine?: Engine);
    generateTorso(): void;
    generateCap(isTop: any): void;
}
