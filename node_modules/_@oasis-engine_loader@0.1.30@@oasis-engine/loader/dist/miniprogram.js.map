{"version":3,"file":"miniprogram.js","sources":["../src/gltf/glb.ts","../src/compressed-texture/KhronosTextureContainer.ts","../src/compressed-texture/index.ts","../src/scene-loader/plugins/PluginManager.ts","../src/scene-loader/utils.ts","../src/scene-loader/resources/BaseResource.ts","../src/scene-loader/ResourceManager.ts","../src/scene-loader/Parser.ts"],"sourcesContent":["import { decodeText } from \"./Util\";\n\n/**\n * 解析 glb 格式\n * @param glb 二进制数据\n * @returns Object glb 中 glTF 信息与 bin 信息\n * @private\n */\nexport function parseGLB(glb) {\n  const UINT32_LENGTH = 4;\n  const GLB_HEADER_MAGIC = 0x46546c67; // 'glTF'\n  const GLB_HEADER_LENGTH = 12;\n  const GLB_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n  const dataView = new DataView(glb);\n\n  // read header\n  const header = {\n    magic: dataView.getUint32(0, true),\n    version: dataView.getUint32(UINT32_LENGTH, true),\n    length: dataView.getUint32(2 * UINT32_LENGTH, true)\n  };\n\n  if (header.magic !== GLB_HEADER_MAGIC) {\n    console.error(\"Invalid glb magic number. Expected 0x46546C67, found 0x\" + header.magic.toString(16));\n    return null;\n  }\n\n  // read main data\n  let chunkLength = dataView.getUint32(GLB_HEADER_LENGTH, true);\n  let chunkType = dataView.getUint32(GLB_HEADER_LENGTH + UINT32_LENGTH, true);\n\n  // read glTF json\n  if (chunkType !== GLB_CHUNK_TYPES.JSON) {\n    console.error(\"Invalid glb chunk type. Expected 0x004E4942, found 0x\" + chunkType.toString(16));\n    return null;\n  }\n\n  const glTFData = new Uint8Array(glb, GLB_HEADER_LENGTH + 2 * UINT32_LENGTH, chunkLength);\n  const gltf = JSON.parse(decodeText(glTFData));\n\n  // read all buffers\n  const buffers = [];\n  let byteOffset = GLB_HEADER_LENGTH + 2 * UINT32_LENGTH + chunkLength;\n\n  while (byteOffset < header.length) {\n    chunkLength = dataView.getUint32(byteOffset, true);\n    chunkType = dataView.getUint32(byteOffset + UINT32_LENGTH, true);\n\n    if (chunkType !== GLB_CHUNK_TYPES.BIN) {\n      console.error(\"Invalid glb chunk type. Expected 0x004E4942, found 0x\" + chunkType.toString(16));\n      return null;\n    }\n\n    const currentOffset = byteOffset + 2 * UINT32_LENGTH;\n    const buffer = glb.slice(currentOffset, currentOffset + chunkLength);\n    buffers.push(buffer);\n\n    byteOffset += chunkLength + 2 * UINT32_LENGTH;\n  }\n\n  // start parse glTF\n  return {\n    gltf,\n    buffers\n  };\n}\n","/**\n *\n * ported from https://github.com/BabylonJS/Babylon.js/blob/master/src/Tools/babylon.khronosTextureContainer.ts\n */\n\nimport { Mipmap, KTXContainer } from \"./type\";\nimport { GLCompressedTextureInternalFormat, TextureFormat } from \"@alipay/o3-core\";\n\nconst HEADER_LEN = 12 + 13 * 4; // identifier + header elements (not including key value meta-data pairs)\n\n// load types\nconst COMPRESSED_2D = 0; // uses a gl.compressedTexImage2D()\nconst COMPRESSED_3D = 1; // uses a gl.compressedTexImage3D()\nconst TEX_2D = 2; // uses a gl.texImage2D()\nconst TEX_3D = 3; // uses a gl.texImage3D()\n\nfunction getMipmaps(ktxContainer: KTXContainer, loadMipmaps: boolean): Mipmap[] {\n  const mipmaps = [];\n\n  // initialize width & height for level 1\n  var dataOffset = HEADER_LEN + ktxContainer.bytesOfKeyValueData;\n  var width = ktxContainer.pixelWidth;\n  var height = ktxContainer.pixelHeight;\n  var mipmapCount = loadMipmaps ? ktxContainer.numberOfMipmapLevels : 1;\n\n  for (var level = 0; level < mipmapCount; level++) {\n    var imageSize = new Int32Array(ktxContainer.buffer, dataOffset, 1)[0]; // size per face, since not supporting array cubemaps\n    dataOffset += 4; // size of the image + 4 for the imageSize field\n\n    for (var face = 0; face < ktxContainer.numberOfFaces; face++) {\n      var byteArray = new Uint8Array(ktxContainer.buffer, dataOffset, imageSize);\n\n      mipmaps.push({ data: byteArray, width: width, height: height });\n\n      dataOffset += imageSize;\n      dataOffset += 3 - ((imageSize + 3) % 4); // add padding for odd sized image\n    }\n    width = Math.max(1.0, width * 0.5);\n    height = Math.max(1.0, height * 0.5);\n  }\n\n  return mipmaps;\n}\n\n/**\n * Checks if the given data starts with a KTX file identifier.\n * @param data the data to check\n * @returns true if the data is a KTX file or false otherwise\n */\nfunction isValid(data: ArrayBuffer): boolean {\n  if (data.byteLength >= 12) {\n    // '«', 'K', 'T', 'X', ' ', '1', '1', '»', '\\r', '\\n', '\\x1A', '\\n'\n    const identifier = new Uint8Array(data, 0, 12);\n    if (\n      identifier[0] === 0xab &&\n      identifier[1] === 0x4b &&\n      identifier[2] === 0x54 &&\n      identifier[3] === 0x58 &&\n      identifier[4] === 0x20 &&\n      identifier[5] === 0x31 &&\n      identifier[6] === 0x31 &&\n      identifier[7] === 0xbb &&\n      identifier[8] === 0x0d &&\n      identifier[9] === 0x0a &&\n      identifier[10] === 0x1a &&\n      identifier[11] === 0x0a\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getEngineFormat(internalFormat: GLint): TextureFormat {\n  switch (internalFormat) {\n    // case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT3_EXT:\n    // case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT:\n    // break;\n    case GLCompressedTextureInternalFormat.RGB_S3TC_DXT1_EXT:\n      return TextureFormat.DXT1;\n    case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT:\n      return TextureFormat.DXT5;\n    case GLCompressedTextureInternalFormat.RGB_ETC1_WEBGL:\n      return TextureFormat.ETC1_RGB;\n    case GLCompressedTextureInternalFormat.RGB8_ETC2:\n      return TextureFormat.ETC2_RGB;\n    case GLCompressedTextureInternalFormat.RGB8_PUNCHTHROUGH_ALPHA1_ETC2:\n      return TextureFormat.ETC2_RGBA5;\n    case GLCompressedTextureInternalFormat.RGBA8_ETC2_EAC:\n      return TextureFormat.ETC2_RGBA8;\n    case GLCompressedTextureInternalFormat.RGB_PVRTC_2BPPV1_IMG:\n      return TextureFormat.PVRTC_RGB2;\n    case GLCompressedTextureInternalFormat.RGBA_PVRTC_2BPPV1_IMG:\n      return TextureFormat.PVRTC_RGBA2;\n    case GLCompressedTextureInternalFormat.RGB_PVRTC_4BPPV1_IMG:\n      return TextureFormat.PVRTC_RGB4;\n    case GLCompressedTextureInternalFormat.RGBA_PVRTC_4BPPV1_IMG:\n      return TextureFormat.PVRTC_RGBA4;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_4X4_KHR:\n      return TextureFormat.ASTC_4x4;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_5X5_KHR:\n      return TextureFormat.ASTC_5x5;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_6X6_KHR:\n      return TextureFormat.ASTC_6x6;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_8X8_KHR:\n      return TextureFormat.ASTC_8x8;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_10X10_KHR:\n      return TextureFormat.ASTC_10x10;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_12X12_KHR:\n      return TextureFormat.ASTC_12x12;\n    default:\n      const formatName: any = GLCompressedTextureInternalFormat[internalFormat];\n      throw new Error(`this format is not supported in Oasis Engine: ${formatName}`);\n  }\n}\n/**\n * for description see https://www.khronos.org/opengles/sdk/tools/KTX/\n * for file layout see https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/\n */\nexport const khronosTextureContainerParser = {\n  /**\n   *\n   * @param buffer contents of the KTX container file\n   * @param facesExpected should be either 1 or 6, based whether a cube texture or or\n   * @param threeDExpected provision for indicating that data should be a 3D texture, not implemented\n   * @param textureArrayExpected provision for indicating that data should be a texture array, not implemented\n   * @param mapEngineFormat get Oasis Engine native TextureFormat?\n   */\n  parse(\n    buffer: ArrayBuffer,\n    facesExpected: number,\n    withMipmaps: boolean,\n    mapEngineFormat: boolean = false\n  ): KTXContainer {\n    if (!isValid(buffer)) {\n      throw new Error(\"khronosTextureContainerParser: invalid KTX file, texture missing KTX identifier\");\n    }\n\n    // load the reset of the header in native 32 bit uint\n    const dataSize = Uint32Array.BYTES_PER_ELEMENT;\n    const headerDataView = new DataView(buffer, 12, 13 * dataSize);\n    const endianness = headerDataView.getUint32(0, true);\n    const littleEndian = endianness === 0x04030201;\n\n    const parsedResult: KTXContainer = {\n      buffer: buffer,\n      glType: headerDataView.getUint32(1 * dataSize, littleEndian), // must be 0 for compressed textures\n      glTypeSize: headerDataView.getUint32(2 * dataSize, littleEndian), // must be 1 for compressed textures\n      glFormat: headerDataView.getUint32(3 * dataSize, littleEndian), // must be 0 for compressed textures\n      glInternalFormat: headerDataView.getUint32(4 * dataSize, littleEndian), // the value of arg passed to gl.compressedTexImage2D(,,x,,,,)\n      glBaseInternalFormat: headerDataView.getUint32(5 * dataSize, littleEndian), // specify GL_RGB, GL_RGBA, GL_ALPHA, etc (un-compressed only)\n      pixelWidth: headerDataView.getUint32(6 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage2D(,,,x,,,)\n      pixelHeight: headerDataView.getUint32(7 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage2D(,,,,x,,)\n      pixelDepth: headerDataView.getUint32(8 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage3D(,,,,,x,,)\n      numberOfArrayElements: headerDataView.getUint32(9 * dataSize, littleEndian), // used for texture arrays\n      numberOfFaces: headerDataView.getUint32(10 * dataSize, littleEndian), // used for cubemap textures, should either be 1 or 6\n      numberOfMipmapLevels: headerDataView.getUint32(11 * dataSize, littleEndian), // number of levels; disregard possibility of 0 for compressed textures\n      bytesOfKeyValueData: headerDataView.getUint32(12 * dataSize, littleEndian), // the amount of space after the header for meta-data\n      // would need to make this more elaborate & adjust checks above to support more than one load type\n      loadType: COMPRESSED_2D\n    };\n\n    // Make sure we have a compressed type.  Not only reduces work, but probably better to let dev know they are not compressing.\n    if (parsedResult.glType !== 0) {\n      throw new Error(\"only compressed formats currently supported\");\n    } else {\n      // value of zero is an indication to generate mipmaps @ runtime.  Not usually allowed for compressed, so disregard.\n      parsedResult.numberOfMipmapLevels = Math.max(1, parsedResult.numberOfMipmapLevels);\n    }\n\n    if (parsedResult.pixelHeight === 0 || parsedResult.pixelDepth !== 0) {\n      throw new Error(\"only 2D textures currently supported\");\n    }\n\n    if (parsedResult.numberOfArrayElements !== 0) {\n      throw new Error(\"texture arrays not currently supported\");\n    }\n\n    if (parsedResult.numberOfFaces !== facesExpected) {\n      throw new Error(\"number of faces expected\" + facesExpected + \", but found \" + parsedResult.numberOfFaces);\n    }\n\n    if (withMipmaps) {\n      parsedResult.mipmaps = getMipmaps(parsedResult, true);\n    }\n\n    if (mapEngineFormat) {\n      parsedResult.engineFormat = getEngineFormat(parsedResult.glInternalFormat);\n    }\n    return parsedResult;\n  }\n};\n","import { CompressedTextureData, CompressedCubeData } from \"./type\";\nimport { khronosTextureContainerParser } from \"./KhronosTextureContainer\";\nimport { TextureFormat } from \"@alipay/o3-core\";\n\nexport function parseSingleKTX(data: ArrayBuffer): CompressedTextureData {\n  const ktx = khronosTextureContainerParser.parse(data, 1, true, true);\n  return {\n    mipmaps: ktx.mipmaps,\n    engineFormat: ktx.engineFormat,\n    internalFormat: ktx.glInternalFormat,\n    width: ktx.pixelWidth,\n    height: ktx.pixelHeight\n  };\n}\n\nexport function parseCubeKTX(dataArray: ArrayBuffer[]): CompressedCubeData {\n  const mipmapsFaces = [];\n  let internalFormat: number;\n  let engineFormat: TextureFormat;\n  let width: number;\n  let height: number;\n  for (let i = 0; i < dataArray.length; i++) {\n    const ktx = khronosTextureContainerParser.parse(dataArray[i], 1, true, true);\n    mipmapsFaces.push(ktx.mipmaps);\n    if (i === 0) {\n      width = ktx.pixelWidth;\n      height = ktx.pixelHeight;\n      internalFormat = ktx.glInternalFormat;\n      engineFormat = ktx.engineFormat;\n    }\n  }\n  return {\n    mipmapsFaces,\n    engineFormat,\n    internalFormat,\n    width,\n    height\n  };\n}\n","import { Component, Entity } from \"@alipay/o3-core\";\nimport { Oasis } from \"../Oasis\";\nimport { SchemaResource } from \"../resources\";\nimport { Plugin } from \"./Plugin\";\nexport class PluginManager implements PluginHook {\n  private registeredPlugins: Set<Plugin> = new Set();\n  private plugins: PluginHook[] = [];\n\n  register(plugin: Plugin) {\n    this.registeredPlugins.add(plugin);\n  }\n\n  boot(oasis: Oasis) {\n    for (let plugin of this.registeredPlugins.values()) {\n      if (typeof plugin === \"function\") {\n        plugin = plugin(oasis);\n      }\n      this.plugins.push(plugin);\n    }\n  }\n\n  reset() {\n    this.registeredPlugins.clear();\n    this.plugins = [];\n  }\n\n  nodeAdded(entity: Entity) {\n    this.delegateMethod(\"nodeAdded\", entity);\n  }\n\n  private delegateMethod(name: keyof PluginHook, ...args) {\n    this.plugins.forEach((plugin) => plugin[name] && (plugin[name] as any)(...args));\n  }\n}\n\nexport interface PluginHook {\n  oasis?: Oasis;\n  nodeAdded?(entity: Entity): any;\n  beforeNodeUpdated?(id: string, key: string, value: any): any;\n  nodeUpdated?(updateConfig?: { id: string; key: string; value: any }): any;\n  abilityAdded?(ability: Component): any;\n  beforeAbilityAdded?(config: any): any;\n  beforeAbilityUpdated?(id: string, key: string, value: any): any;\n  abilityUpdated?(updateConfig?: { id: string; key: string; value: any }): any;\n  schemaParsed?(): any;\n  abilityDeleted?(id: string): any;\n  beforeAbilityDeleted?(id: string): any;\n  beforeNodeDeleted?(config: any): any;\n  beforeResourceRemove?(id: string): any;\n  resourceUpdated?(info: { resource: SchemaResource; id: string; key: string; value: any }): any;\n  beforeResourceUpdate?(id: string, key: string, value: any): any;\n  // todo type\n  beforeResourceAdd?(resource: any): any;\n  resourceAdded?(resource: any): any;\n}\n\nexport function pluginHook(options: Partial<{ before: keyof PluginHook; after: keyof PluginHook }>): MethodDecorator {\n  return function (target: any, propertyName: string, descriptor: TypedPropertyDescriptor<any>) {\n    const method = descriptor.value;\n\n    descriptor.value = function (...args: any[]) {\n      options.before && this.oasis.pluginManager.delegateMethod(options.before, ...args);\n      return Promise.resolve(method.apply(this, arguments)).then((returnObj) => {\n        options.after && this.oasis.pluginManager.delegateMethod(options.after, returnObj);\n        return returnObj;\n      });\n    };\n  };\n}\n","export function switchElementsIndex(elements: any[], currentIndex: number, targetIndex: number) {\n  if (currentIndex === targetIndex || targetIndex === null || targetIndex === undefined) {\n    return;\n  }\n  [elements[currentIndex], elements[targetIndex]] = [elements[targetIndex], elements[currentIndex]];\n}\n\nexport function isAsset(config: any): boolean {\n  return config && config.type === \"asset\";\n}\n\nexport function getAllGetters(obj: any): Array<string> {\n  const result = [];\n  const prototype = Object.getPrototypeOf(obj);\n  const prototype_property_descriptors = Object.getOwnPropertyDescriptors(prototype);\n  for (const [property, descriptor] of Object.entries(prototype_property_descriptors)) {\n    if (typeof descriptor.get === \"function\") {\n      result.push(property);\n    }\n  }\n  return result;\n}\n\n// 求数组并集\nexport function union(arr1: Array<any>, arr2: Array<any>): Array<any> {\n  return arr1.concat(arr2.filter((v) => !(arr1.indexOf(v) > -1)));\n}\n\n// https://github.com/BabylonJS/Babylon.js/blob/d780145531ac1b1cee85cbfba4d836dcc24ab58e/src/Engines/Extensions/engine.textureSelector.ts#L70\n// Intelligently add supported compressed formats in order to check for.\n// Check for ASTC support first as it is most powerful and to be very cross platform.\n// Next PVRTC & DXT, which are probably superior to ETC1/2.\n// Likely no hardware which supports both PVR & DXT, so order matters little.\n// ETC2 is newer and handles ETC1 (no alpha capability), so check for first.\nexport const compressedTextureLoadOrder = {\n  astc: 1,\n  s3tc: 2,\n  pvrtc: 3,\n  etc: 4,\n  etc1: 5\n};\n","import { SchemaResource } from \"./SchemaResource\";\nimport { AssetConfig } from \"../types\";\n\nexport class BaseResource extends SchemaResource {\n  load(resourceLoader, assetConfig: AssetConfig): Promise<BaseResource> {\n    return new Promise((resolve) => {\n      this._resource = assetConfig;\n      this.setMetaData(\"name\", this.resource.name);\n      this.setMetaData(\"url\", this.resource.url);\n      resolve(this);\n    });\n  }\n\n  setMetaData(key, value) {\n    this._meta[key] = value;\n  }\n}\n","import { ResourceManager } from \"@alipay/o3-core\";\nimport { Oasis } from \"./Oasis\";\nimport { pluginHook } from \"./plugins/PluginManager\";\nimport {\n  BaseResource,\n  BlinnPhongMaterialResource,\n  GLTFResource,\n  PBRMaterialResource,\n  SchemaResource,\n  ScriptResource,\n  ShaderMaterialResource,\n  TextureCubeMapResource,\n  TextureResource\n} from \"./resources\";\nimport { AssetConfig } from \"./types\";\n\nexport const RESOURCE_CLASS = {\n  script: ScriptResource,\n  gltf: GLTFResource,\n  texture: TextureResource,\n  // 'image': TextureResource,\n  cubeTexture: TextureCubeMapResource,\n  PBRMaterial: PBRMaterialResource,\n  PBRSpecularMaterial: PBRMaterialResource,\n  unlitMaterial: PBRMaterialResource,\n  ShaderMaterial: ShaderMaterialResource,\n  BlinnPhongMaterial: BlinnPhongMaterialResource,\n  // Animation: Animation,\n  base: BaseResource\n};\n\nconst RESOURCE_TYPE: Map<SchemaResource, string> = new Map();\nfor (const key in RESOURCE_CLASS) {\n  if (RESOURCE_CLASS.hasOwnProperty(key)) {\n    const element = RESOURCE_CLASS[key];\n\n    // TODO：材质模块待重构，默认设置成 PBRMaterial\n    if (element === PBRMaterialResource) {\n      RESOURCE_TYPE.set(element, \"PBRMaterial\");\n    } else {\n      RESOURCE_TYPE.set(element, key);\n    }\n  }\n}\n\nconst resourceFactory = {\n  createResource(resourceManager: SchemaResourceManager, type: string): SchemaResource {\n    return new RESOURCE_CLASS[type](resourceManager);\n  }\n};\n\nexport function registerResource(type: string, resource: any) {\n  if (!RESOURCE_CLASS.hasOwnProperty(type)) {\n    RESOURCE_CLASS[type] = resource;\n    RESOURCE_TYPE.set(resource, type);\n  }\n}\n\nexport class SchemaResourceManager {\n  private resourceMap: { [id: string]: SchemaResource } = {};\n  private resourceIdMap: WeakMap<SchemaResource, string> = new WeakMap();\n  private maxId = 0;\n  private readonly engineResourceManager: ResourceManager;\n\n  constructor(private oasis: Oasis) {\n    this.engineResourceManager = this.oasis.engine.resourceManager;\n  }\n\n  // 从schema中加载资源\n  load(asset: AssetConfig): Promise<SchemaResource> {\n    const resource = resourceFactory.createResource(this, asset.type);\n    //TODO 脏代码\n    const loadPromise = resource.load(this.oasis.engine.resourceManager, asset, this.oasis);\n    this.maxId = Math.max(+asset.id, this.maxId);\n    loadPromise.then(() => {\n      this.resourceMap[asset.id] = resource;\n      this.resourceIdMap.set(resource, asset.id);\n    });\n    return loadPromise;\n  }\n\n  // 新增资源\n  add(asset: AssetConfig): Promise<any> {\n    const resource = resourceFactory.createResource(this, asset.type);\n    return new Promise((resolve) => {\n      //TODO 脏代码\n      resource.loadWithAttachedResources(this.oasis.engine.resourceManager, asset, this.oasis).then((result) => {\n        resolve(this.getAddResourceResult(result.resources, result.structure));\n      });\n    });\n  }\n\n  @pluginHook({ before: \"beforeResourceRemove\" })\n  remove(id: string): Promise<Array<string>> {\n    return new Promise((resolve) => {\n      const resource = this.resourceMap[id];\n      const result = [id];\n      let hasAttachedResource = false;\n      delete this.resourceMap[id];\n      if (resource) {\n        const attached = resource.attachedResources;\n        for (let index = 0; index < attached.length; index++) {\n          const attachedResource = attached[index];\n          const attachedResourceId = this.resourceIdMap.get(attachedResource);\n          if (attachedResourceId) {\n            hasAttachedResource = true;\n            this.remove(attachedResourceId).then((attachedResourceRemoveResult) => {\n              result.push(...attachedResourceRemoveResult);\n              resolve(result);\n            });\n          }\n        }\n      }\n      if (!hasAttachedResource) {\n        resolve(result);\n      }\n    });\n  }\n\n  @pluginHook({ after: \"resourceUpdated\", before: \"beforeResourceUpdate\" })\n  update(id: string, key: string, value: any) {\n    const resource = this.get(id);\n    if (resource) {\n      resource.update(key, value);\n    }\n    return {\n      resource,\n      id,\n      key,\n      value\n    };\n  }\n\n  updateMeta(id: string, key: string, value: any) {\n    const resource = this.get(id);\n    if (resource) {\n      resource.updateMeta(key, value);\n    }\n  }\n\n  get(id: string): SchemaResource {\n    return this.resourceMap[id];\n  }\n\n  getAll(): Array<SchemaResource> {\n    return Object.values(this.resourceMap);\n  }\n\n  private getAddResourceResult(resources, structure) {\n    const addResourceResult: any = {};\n    const resource = resources[structure.index];\n    const id = `${++this.maxId}`;\n    this.resourceMap[id] = resource;\n    this.resourceIdMap.set(resource, id);\n\n    addResourceResult.id = this.maxId;\n    addResourceResult.type = RESOURCE_TYPE.get(resource.constructor);\n    addResourceResult.meta = resource.meta;\n    addResourceResult.props = {};\n    for (const key in structure.props) {\n      if (structure.props.hasOwnProperty(key)) {\n        const element = structure.props[key];\n        if (element) {\n          if (Array.isArray(element)) {\n            addResourceResult.props[key] = element.map((child) => this.getAddResourceResult(resources, child));\n          } else {\n            addResourceResult.props[key] = this.getAddResourceResult(resources, element);\n          }\n        }\n      }\n    }\n    return addResourceResult;\n  }\n\n  get isLocal(): boolean {\n    return this.oasis.options.local;\n  }\n\n  get useCompressedTexture(): boolean {\n    return this.oasis.options.useCompressedTexture ?? true;\n  }\n}\n","import { Component } from \"@alipay/o3-core\";\nimport { Oasis } from \"./Oasis\";\nimport { Plugin } from \"./plugins/Plugin\";\nimport { PluginManager } from \"./plugins/PluginManager\";\nimport { Options } from \"./types\";\nimport { compatibleToV2 } from \"./temp.compatible\";\n\nconst CURRENT_SCHEMA_VERSION = 3;\n\nexport class Parser {\n  private pluginManager: PluginManager = new PluginManager();\n  public parse(options: Options): Promise<Oasis> {\n    if (options?.config?.version !== CURRENT_SCHEMA_VERSION) {\n      console.warn(\n        `schema-parser: schema version \"${options?.config?.version}\" is out of date, please re-pull the latest version (version ${CURRENT_SCHEMA_VERSION}) of the schema`\n      );\n    }\n    compatibleToV2(options.config);\n    return Oasis.create(options, this.pluginManager);\n  }\n\n  register(plugin: Plugin) {\n    this.pluginManager.register(plugin);\n  }\n\n  resetPlugins() {\n    this.pluginManager.reset();\n  }\n\n  private constructor() {}\n\n  static create(): Parser {\n    const parser = new Parser();\n    return parser;\n  }\n\n  /** @internal */\n  public static _components: { [namespace: string]: { [compName: string]: Component } } = {};\n  /**\n   * 注册解析组件\n   * @param namespace 命名空间\n   * @param components 组件\n   */\n  static registerComponents(namespace: string, components: { [key: string]: any }) {\n    if (!this._components[namespace]) {\n      this._components[namespace] = {};\n    }\n    Object.assign(this._components[namespace], components);\n  }\n}\n\nexport const parser = Parser.create();\n"],"names":["parseGLB","glb","UINT32_LENGTH","GLB_HEADER_MAGIC","GLB_HEADER_LENGTH","GLB_CHUNK_TYPES","JSON","BIN","dataView","DataView","header","magic","getUint32","version","length","console","error","toString","chunkLength","chunkType","glTFData","Uint8Array","gltf","parse","decodeText","buffers","byteOffset","currentOffset","buffer","slice","push","parseSingleKTX","data","ktx","khronosTextureContainerParser","mipmaps","engineFormat","internalFormat","glInternalFormat","width","pixelWidth","height","pixelHeight","parseCubeKTX","dataArray","mipmapsFaces","i","PluginManager","registeredPlugins","Set","plugins","plugin","add","oasis","values","clear","entity","delegateMethod","name","args","forEach","pluginHook","options","target","propertyName","descriptor","method","value","before","pluginManager","Promise","resolve","apply","arguments","then","returnObj","after","switchElementsIndex","elements","currentIndex","targetIndex","undefined","isAsset","config","type","getAllGetters","obj","result","prototype","Object","getPrototypeOf","prototype_property_descriptors","getOwnPropertyDescriptors","entries","property","get","compressedTextureLoadOrder","astc","s3tc","pvrtc","etc","etc1","BaseResource","resourceLoader","assetConfig","_resource","setMetaData","resource","url","key","_meta","SchemaResource","RESOURCE_CLASS","script","ScriptResource","GLTFResource","texture","TextureResource","cubeTexture","TextureCubeMapResource","PBRMaterial","PBRMaterialResource","PBRSpecularMaterial","unlitMaterial","ShaderMaterial","ShaderMaterialResource","BlinnPhongMaterial","BlinnPhongMaterialResource","base","RESOURCE_TYPE","Map","hasOwnProperty","element","set","resourceFactory","createResource","resourceManager","registerResource","SchemaResourceManager","resourceMap","resourceIdMap","WeakMap","maxId","engineResourceManager","engine","asset","loadPromise","load","Math","max","id","loadWithAttachedResources","getAddResourceResult","resources","structure","hasAttachedResource","attached","attachedResources","index","attachedResource","attachedResourceId","remove","attachedResourceRemoveResult","update","updateMeta","addResourceResult","constructor","meta","props","Array","isArray","map","child","local","useCompressedTexture","CURRENT_SCHEMA_VERSION","Parser","warn","compatibleToV2","Oasis","create","register","reset","parser","namespace","components","_components"],"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"}